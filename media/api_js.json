{
  "GameEvents": [
    {
      "func": "( pEventName: string, callback: Function )",
      "name": "Subscribe",
      "return": "number",
      "desc": "Subscribe to a game event"
    },
    {
      "func": "( nCallbackHandle: number )",
      "name": "Unsubscribe",
      "return": "void",
      "desc": "Unsubscribe from a game event"
    },
    {
      "func": "( pEventName: string, jsObject: object )",
      "name": "SendCustomGameEventToServer",
      "return": "void",
      "desc": "Send a custom game event to the server"
    },
    {
      "func": "( pEventName: string, jsObject: object )",
      "name": "SendCustomGameEventToAllClients",
      "return": "void",
      "desc": "Send a custom game event to the server, which will send it to all clients"
    },
    {
      "func": "( pEventName: string, playerIndex: number, jsObject: object )",
      "name": "SendCustomGameEventToClient",
      "return": "void",
      "desc": "Send a custom game event to the server, which will then send it to one client"
    },
    {
      "func": "( pEventName: string, jsObject: object )",
      "name": "SendEventClientSide",
      "return": "void",
      "desc": "Send a client-side event using gameeventmanager (only useful for a few specific events)"
    }
  ],
  "CustomNetTables": [
    {
      "func": "( pTableName: string, pKeyName: string )",
      "name": "GetTableValue",
      "return": "any",
      "desc": "Get a key from a custom net table"
    },
    {
      "func": "( pTableName: string )",
      "name": "GetAllTableValues",
      "return": "any",
      "desc": "Get all values from a custom net table"
    },
    {
      "func": "( pTableName: string, callback: (pTableName: string, key: string, table: any) => void )",
      "name": "SubscribeNetTableListener",
      "return": "number",
      "desc": "Register a callback when a particular custom net table changes"
    },
    {
      "func": "( nCallbackHandle: number )",
      "name": "UnsubscribeNetTableListener",
      "return": "void",
      "desc": "Unsubscribe from a game event"
    }
  ],
  "SteamUGC": [
    {
      "func": "( pPublishedFileID: string, callback: Function )",
      "name": "SubscribeItem",
      "return": "void",
      "desc": "Subscribe to a piece of UGC"
    },
    {
      "func": "( pPublishedFileID: string, callback: Function )",
      "name": "UnsubscribeItem",
      "return": "void",
      "desc": "Unsubscribe from a piece of UGC"
    },
    {
      "func": "( pPublishedFileID: string )",
      "name": "GetSubscriptionInfo",
      "return": "any",
      "desc": "Get a key from a custom net table"
    },
    {
      "func": "( pPublishedFileID: string, bVoteUp: boolean, callback: Function )",
      "name": "SetUserItemVote",
      "return": "void",
      "desc": "Vote on a piece of UGC"
    },
    {
      "func": "( pPublishedFileID: string, callback: Function )",
      "name": "GetUserItemVote",
      "return": "any",
      "desc": "Get the user&apos;s vote on a piece of UGC"
    },
    {
      "func": "( pPublishedFileID: string, callback: Function )",
      "name": "AddToFavorites",
      "return": "void",
      "desc": "Add an item to the user&apos;s favorites list"
    },
    {
      "func": "( pPublishedFileID: string, callback: Function )",
      "name": "RemoveFromFavorites",
      "return": "void",
      "desc": "Remove an item from the user&apos;s favorites list"
    },
    {
      "func": "( eQueryType: number, eMatchingeMatchingUGCTypeFileType: number, unPage: number )",
      "name": "CreateQueryAllUGCRequest",
      "return": "any",
      "desc": "Create a request to query Steam for all UGC"
    },
    {
      "func": "( jsArray: any[] )",
      "name": "CreateQueryUGCDetailsRequest",
      "return": "any",
      "desc": "Create a request to query Steam for specific UGC"
    },
    {
      "func": "( handle: number, pchTag: string )",
      "name": "AddRequiredTagToQuery",
      "return": "any",
      "desc": "Adds a required tag to the query"
    },
    {
      "func": "( handle: number, pchTag: string )",
      "name": "AddExcludedTagToQuery",
      "return": "any",
      "desc": "Adds an excluded tag to the query"
    },
    {
      "func": "( handle: number, jsObject: object )",
      "name": "ConfigureQuery",
      "return": "any",
      "desc": "Adds a required tag to the query"
    },
    {
      "func": "( handle: number, callback: Function )",
      "name": "SendUGCQuery",
      "return": "any",
      "desc": "Sends the prepared query"
    },
    {
      "func": "( pPublishedFileID: string, callback: Function )",
      "name": "RegisterDownloadItemResultCallback",
      "return": "any",
      "desc": "Register a callback to be called when the item is downloaded"
    }
  ],
  "SteamFriends": [
    {
      "func": "( pchSteamID: string, callback: Function )",
      "name": "RequestPersonaName",
      "return": "void",
      "desc": "Requests the user&apos;s persona name"
    },
    {
      "func": "( ...args: any[] )",
      "name": "SetLargeAvatarImage",
      "return": "void",
      "desc": "Sets the avatar image on the image panel"
    }
  ],
  "SteamUtils": [
    {
      "func": "()",
      "name": "GetConnectedUniverse",
      "return": "any",
      "desc": "Returns the connected universe"
    },
    {
      "func": "()",
      "name": "GetAppID",
      "return": "number",
      "desc": "Returns the appid of the current app"
    }
  ],
  "VRUtils": [
    {
      "func": "( nAppID: number )",
      "name": "GetVRAppPropertyData",
      "return": "any",
      "desc": "Get application properties for a VR app with the specified appID"
    },
    {
      "func": "( nAppID: number, pszLaunchSource: string )",
      "name": "LaunchSteamApp",
      "return": "any",
      "desc": "Launches a Steam application using OpenVR."
    }
  ],
  "Buffs": [
    {
      "func": "( nEntity: number, nBuff: number )",
      "name": "GetName",
      "return": "string",
      "desc": ""
    },
    {
      "func": "( nEntity: number, nBuff: number )",
      "name": "GetClass",
      "return": "string",
      "desc": ""
    },
    {
      "func": "( nEntity: number, nBuff: number )",
      "name": "GetTexture",
      "return": "string",
      "desc": ""
    },
    {
      "func": "( nEntity: number, nBuff: number )",
      "name": "GetDuration",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntity: number, nBuff: number )",
      "name": "GetDieTime",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntity: number, nBuff: number )",
      "name": "GetRemainingTime",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntity: number, nBuff: number )",
      "name": "GetElapsedTime",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntity: number, nBuff: number )",
      "name": "GetCreationTime",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntity: number, nBuff: number )",
      "name": "GetStackCount",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntity: number, nBuff: number )",
      "name": "IsDebuff",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntity: number, nBuff: number )",
      "name": "IsHidden",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntity: number, nBuff: number )",
      "name": "GetCaster",
      "return": "number",
      "desc": "Get the owner of the ability responsible for the modifier."
    },
    {
      "func": "( nEntity: number, nBuff: number )",
      "name": "GetParent",
      "return": "number",
      "desc": "Get the unit the modifier is parented to."
    },
    {
      "func": "( nEntity: number, nBuff: number )",
      "name": "GetAbility",
      "return": "number",
      "desc": "Get the ability that generated the modifier."
    }
  ],
  "Players": [
    {
      "func": "()",
      "name": "GetMaxPlayers",
      "return": "number",
      "desc": "Get the maximum number of players in the game."
    },
    {
      "func": "()",
      "name": "GetMaxTeamPlayers",
      "return": "number",
      "desc": "Get the maximum number of players on teams."
    },
    {
      "func": "()",
      "name": "GetLocalPlayer",
      "return": "number",
      "desc": "Get the local player ID."
    },
    {
      "func": "( iPlayerID: number )",
      "name": "IsValidPlayerID",
      "return": "boolean",
      "desc": "Is the nth player a valid player?"
    },
    {
      "func": "( iPlayerID: number )",
      "name": "GetPlayerName",
      "return": "string",
      "desc": "Return the name of a player."
    },
    {
      "func": "( iPlayerID: number )",
      "name": "GetPlayerHeroEntityIndex",
      "return": "number",
      "desc": "Get the entity index of the hero controlled by this player."
    },
    {
      "func": "( iPlayerID: number )",
      "name": "GetSelectedEntities",
      "return": "number[]",
      "desc": "Get the entities this player has selected."
    },
    {
      "func": "( iPlayerID: number )",
      "name": "GetQueryUnit",
      "return": "number",
      "desc": "Get the entities this player is querying."
    },
    {
      "func": "()",
      "name": "GetLocalPlayerPortraitUnit",
      "return": "number",
      "desc": "Get local player current portrait unit. (ie. Player&apos;s hero or primary selected unit.)"
    },
    {
      "func": "( iPlayerID: number )",
      "name": "CanPlayerBuyback",
      "return": "boolean",
      "desc": "Can the player buy back?"
    },
    {
      "func": "( iPlayerID: number )",
      "name": "HasCustomGameTicketForPlayerID",
      "return": "boolean",
      "desc": "Does this player have a custom game ticket?"
    },
    {
      "func": "( iPlayerID: number )",
      "name": "GetAssists",
      "return": "number",
      "desc": "The number of assists credited to a player."
    },
    {
      "func": "( iPlayerID: number )",
      "name": "GetClaimedDenies",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( iPlayerID: number )",
      "name": "GetClaimedMisses",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( iPlayerID: number )",
      "name": "GetDeaths",
      "return": "any",
      "desc": "The number of deaths a player has suffered."
    },
    {
      "func": "( iPlayerID: number )",
      "name": "GetDenies",
      "return": "number",
      "desc": "The number of denies credited to a player."
    },
    {
      "func": "( iPlayerID: number )",
      "name": "GetGold",
      "return": "number",
      "desc": "The amount of gold a player has."
    },
    {
      "func": "( iPlayerID: number )",
      "name": "GetKills",
      "return": "number",
      "desc": "The number of kills credited to a player."
    },
    {
      "func": "( iPlayerID: number )",
      "name": "GetLastBuybackTime",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( iPlayerID: number )",
      "name": "GetLastHitMultikill",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( iPlayerID: number )",
      "name": "GetLastHits",
      "return": "number",
      "desc": "The number of last hits credited to a player."
    },
    {
      "func": "( iPlayerID: number )",
      "name": "GetLastHitStreak",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( iPlayerID: number )",
      "name": "GetLevel",
      "return": "number",
      "desc": "The current level of a player."
    },
    {
      "func": "( iPlayerID: number )",
      "name": "GetMisses",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( iPlayerID: number )",
      "name": "GetNearbyCreepDeaths",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( iPlayerID: number )",
      "name": "GetReliableGold",
      "return": "number",
      "desc": "Total reliable gold for this player."
    },
    {
      "func": "( iPlayerID: number )",
      "name": "GetRespawnSeconds",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( iPlayerID: number )",
      "name": "GetStreak",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( iPlayerID: number )",
      "name": "GetTotalEarnedGold",
      "return": "number",
      "desc": "Total gold earned in this game by this player."
    },
    {
      "func": "( iPlayerID: number )",
      "name": "GetTotalEarnedXP",
      "return": "number",
      "desc": "Total xp earned in this game by this player."
    },
    {
      "func": "( iPlayerID: number )",
      "name": "GetUnreliableGold",
      "return": "number",
      "desc": "Total unreliable gold for this player."
    },
    {
      "func": "( iPlayerID: number )",
      "name": "GetTeam",
      "return": "DOTATeam_t",
      "desc": "Get the team this player is on."
    },
    {
      "func": "( iPlayerID: number )",
      "name": "GetGoldPerMin",
      "return": "number",
      "desc": "Average gold earned per minute for this player."
    },
    {
      "func": "( iPlayerID: number )",
      "name": "GetXPPerMin",
      "return": "number",
      "desc": "Average xp earned per minute for this player."
    },
    {
      "func": "( iPlayerID: number )",
      "name": "GetPlayerSelectedHero",
      "return": "number",
      "desc": "Return the name of the hero a player is controlling."
    },
    {
      "func": "( iPlayerID: number )",
      "name": "GetPlayerColor",
      "return": "number",
      "desc": "Get the player color."
    },
    {
      "func": "( iPlayerID: number )",
      "name": "IsSpectator",
      "return": "boolean",
      "desc": "Is this player a spectator."
    },
    {
      "func": "( nClickedPlayerID: number, bHoldingCtrl: boolean, bHoldingAlt: boolean )",
      "name": "PlayerPortraitClicked",
      "return": "void",
      "desc": "."
    },
    {
      "func": "( nEntity: number, nBuffSerial: number, bAlert: boolean )",
      "name": "BuffClicked",
      "return": "void",
      "desc": "."
    },
    {
      "func": "()",
      "name": "IsLocalPlayerLiveSpectating",
      "return": "boolean",
      "desc": "Is the local player live spectating?"
    },
    {
      "func": "()",
      "name": "IsLocalPlayerInPerspectiveCamera",
      "return": "boolean",
      "desc": "If local player is in perspective camera, returns true. Else, false"
    },
    {
      "func": "()",
      "name": "GetPerspectivePlayerEntityIndex",
      "return": "number",
      "desc": "If player is in perspective mode, returns the followed players entity index.  Else, -1."
    },
    {
      "func": "()",
      "name": "GetPerspectivePlayerId",
      "return": "number",
      "desc": "If player is in perspective mode, returns the followed players id.  Else, -1."
    }
  ],
  "Entities": [
    {
      "func": "( nEntityIndex: number )",
      "name": "GetAbsOrigin",
      "return": "Vector",
      "desc": "Get the world origin of the entity."
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetAbsAngles",
      "return": "QAngle",
      "desc": "Get the world angles of the entity."
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetForward",
      "return": "Vector",
      "desc": "Get the forward vector of the entity."
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetRight",
      "return": "Vector",
      "desc": "Get the right vector of the entity."
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetUp",
      "return": "Vector",
      "desc": "Get the up vector of the entity."
    },
    {
      "func": "()",
      "name": "GetAllBuildingEntities",
      "return": "number[]",
      "desc": "Get all the building entities."
    },
    {
      "func": "()",
      "name": "GetAllHeroEntities",
      "return": "number[]",
      "desc": "Get all the hero entities."
    },
    {
      "func": "( pszName: string )",
      "name": "GetAllEntitiesByName",
      "return": "number[]",
      "desc": "Get all the entities with a given name."
    },
    {
      "func": "( pszName: string )",
      "name": "GetAllEntitiesByClassname",
      "return": "number[]",
      "desc": "Get all the entities with a given classname."
    },
    {
      "func": "()",
      "name": "GetAllCreatureEntities",
      "return": "number[]",
      "desc": "Get all the creature entities."
    },
    {
      "func": "()",
      "name": "GetAllEntities",
      "return": "number[]",
      "desc": "Get all the entities."
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "CanBeDominated",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "HasAttackCapability",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "HasCastableAbilities",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "HasFlyingVision",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "HasFlyMovementCapability",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "HasGroundMovementCapability",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "HasMovementCapability",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "HasScepter",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "HasUpgradeableAbilities",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "HasUpgradeableAbilitiesThatArentMaxed",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsAlive",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsAncient",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsAttackImmune",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsBarracks",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsBlind",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsBoss",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsRoshan",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsBuilding",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsCommandRestricted",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsConsideredHero",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsControllableByAnyPlayer",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsCourier",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsCreature",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsCreep",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsCreepHero",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsDeniable",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsDominated",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsEnemy",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsEvadeDisabled",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsFort",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsFrozen",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsGeneratedByEconItem",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsHallofFame",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsDisarmed",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsHero",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsHexed",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsIllusion",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsInRangeOfFountain",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsInventoryEnabled",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsInvisible",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsInvulnerable",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsLaneCreep",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsLowAttackPriority",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsMagicImmune",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsMuted",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsNeutralUnitType",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsNightmared",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsOther",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsOutOfGame",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsOwnedByAnyPlayer",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsPhantom",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsRangedAttacker",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsRealHero",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsRooted",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsSelectable",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsShop",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsSilenced",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsSpeciallyDeniable",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsStunned",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsSummoned",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsTower",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsUnselectable",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsWard",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsZombie",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "NoHealthBar",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "NoTeamMoveTo",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "NoTeamSelect",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "NotOnMinimap",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "NotOnMinimapForEnemies",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "NoUnitCollision",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "PassivesDisabled",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "ProvidesVision",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "UsesHeroAbilityNumbers",
      "return": "number[]",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsMoving",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetAbilityCount",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetCombatClassAttack",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetCombatClassDefend",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetCurrentVisionRange",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetDamageBonus",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetDamageMax",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetDamageMin",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetDayTimeVisionRange",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetHealth",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetHealthPercent",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetHealthThinkRegen",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetLevel",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetMaxHealth",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetNightTimeVisionRange",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetPlayerOwnerID",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetStates",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetTotalPurchasedUpgradeGoldCost",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetTeamNumber",
      "return": "DOTATeam_t",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetHealthBarOffset",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetAttackRange",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetAttackSpeed",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetAttacksPerSecond",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetBaseAttackTime",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetBaseMagicalResistanceValue",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetBaseMoveSpeed",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetBonusPhysicalArmor",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetCollisionPadding",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetEffectiveInvisibilityLevel",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetHasteFactor",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetHullRadius",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetIdealSpeed",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetIncreasedAttackSpeed",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetMana",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetManaThinkRegen",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetMaxMana",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetMagicalArmorValue",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetPaddedCollisionRadius",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetPercentInvisible",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetPhysicalArmorValue",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetProjectileCollisionSize",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetRingRadius",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetSecondsPerAttack",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "ManaFraction",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetClassname",
      "return": "string",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetDisplayedUnitName",
      "return": "string",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetSelectionGroup",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetSoundSet",
      "return": "string",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetUnitLabel",
      "return": "string",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetUnitName",
      "return": "string",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetTotalDamageTaken",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number, nPlayerIndex: number )",
      "name": "IsControllableByPlayer",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetChosenTarget",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number, pItemName: string )",
      "name": "HasItemInInventory",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number, nTarget: number )",
      "name": "GetRangeToUnit",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number, nTarget: number, flRange: number )",
      "name": "IsEntityInRange",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number, flBaseSpeed: number )",
      "name": "GetMoveSpeedModifier",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number, nTarget: number )",
      "name": "CanAcceptTargetToAttack",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number, nState: modifierstate )",
      "name": "InState",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number, iDamageType: DAMAGE_TYPES )",
      "name": "GetArmorForDamageType",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number, iDamageType: DAMAGE_TYPES )",
      "name": "GetArmorReductionForDamageType",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number, iShopType: DOTA_SHOP_TYPE, bSpecific: boolean )",
      "name": "IsInRangeOfShop",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetNumItemsInStash",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetNumItemsInInventory",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number, nSlotIndex: number )",
      "name": "GetItemInSlot",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number, nSlotIndex: number )",
      "name": "GetAbility",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number, pszAbilityName: string )",
      "name": "GetAbilityByName",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetNumBuffs",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number, nBufIndex: number )",
      "name": "GetBuff",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetAbilityPoints",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetCurrentXP",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetNeededXPToLevel",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetSelectionEntities",
      "return": "number[]",
      "desc": "Get the currently selected entities"
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsValidEntity",
      "return": "boolean",
      "desc": "Is this a valid entity index?"
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsItemPhysical",
      "return": "boolean",
      "desc": "Is this entity an item container in the world?"
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetContainedItem",
      "return": "number",
      "desc": "Get the item contained in this physical item container."
    }
  ],
  "Abilities": [
    {
      "func": "( nEntityIndex: number )",
      "name": "GetAbilityName",
      "return": "string",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetAbilityTextureName",
      "return": "string",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetAssociatedPrimaryAbilities",
      "return": "string",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetAssociatedSecondaryAbilities",
      "return": "string",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetHotkeyOverride",
      "return": "string",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetIntrinsicModifierName",
      "return": "string",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetSharedCooldownName",
      "return": "string",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "AbilityReady",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "CanAbilityBeUpgraded",
      "return": "AbilityLearnResult_t",
      "desc": "Returns an AbilityLearnResult_t"
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "CanBeExecuted",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetAbilityDamage",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetAbilityDamageType",
      "return": "DAMAGE_TYPES",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetAbilityTargetFlags",
      "return": "DOTA_UNIT_TARGET_FLAGS",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetAbilityTargetTeam",
      "return": "DOTA_UNIT_TARGET_TEAM",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetAbilityTargetType",
      "return": "DOTA_UNIT_TARGET_TYPE",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetAbilityType",
      "return": "ABILITY_TYPES",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetBehavior",
      "return": "DOTA_ABILITY_BEHAVIOR",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetCastRange",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetChannelledManaCostPerSecond",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetCurrentCharges",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetEffectiveLevel",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetHeroLevelRequiredToUpgrade",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetLevel",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetManaCost",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetMaxLevel",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "AttemptToUpgrade",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "CanLearn",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetAutoCastState",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetToggleState",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "HasScepterUpgradeTooltip",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsActivated",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsActivatedChanging",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsAttributeBonus",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsAutocast",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsCooldownReady",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsDisplayedAbility",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsHidden",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsHiddenWhenStolen",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsInAbilityPhase",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsItem",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsMarkedAsDirty",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsMuted",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsOnCastbar",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsOnLearnbar",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsOwnersGoldEnough",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsOwnersGoldEnoughForUpgrade",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsOwnersManaEnough",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsPassive",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsRecipe",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsSharedWithTeammates",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsStealable",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsStolen",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsToggle",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetAOERadius",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetBackswingTime",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetCastPoint",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetChannelStartTime",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetChannelTime",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetCooldown",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetCooldownLength",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetCooldownTime",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetCooldownTimeRemaining",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetDuration",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetUpgradeBlend",
      "return": "number",
      "desc": ""
    },
    {
      "func": "()",
      "name": "GetLocalPlayerActiveAbility",
      "return": "number",
      "desc": "Get the local player&apos;s current active ability. (Pre-cast targetting state.)"
    },
    {
      "func": "( nAbilityIndex: string )",
      "name": "GetCaster",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nAbilityIndex: string, pszAbilityVarName: string )",
      "name": "GetCustomValueFor",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nAbilityIndex: string, szName: string, nLevel: number )",
      "name": "GetLevelSpecialValueFor",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nAbilityIndex: string, szName: string )",
      "name": "GetSpecialValueFor",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nAbilityIndex: string, nTargetEntityIndex: number )",
      "name": "IsCosmetic",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nAbilityEntIndex: number, nCasterEntIndex: number, bIsQuickCast: boolean )",
      "name": "ExecuteAbility",
      "return": "void",
      "desc": "Attempt to execute the specified ability (Equivalent to clicking the ability in the HUD action bar)"
    },
    {
      "func": "( nAbilityEntIndex: number, nCasterEntIndex: number )",
      "name": "CreateDoubleTapCastOrder",
      "return": "void",
      "desc": "Attempt to double-tap (self-cast) the specified ability (Equivalent to double-clicking the ability in the HUD action bar)"
    },
    {
      "func": "( nAbilityIndex: number )",
      "name": "PingAbility",
      "return": "void",
      "desc": "Ping the specified ability (Equivalent to alt-clicking the ability in the HUD action bar)"
    },
    {
      "func": "( nAbilityEntIndex: number )",
      "name": "GetKeybind",
      "return": "string",
      "desc": "Returns the keybind (as a string) for the specified ability."
    }
  ],
  "Items": [
    {
      "func": "( nEntityIndex: number )",
      "name": "ShouldDisplayCharges",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "AlwaysDisplayCharges",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "ShowSecondaryCharges",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "CanBeSoldByLocalPlayer",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "CanDoubleTapCast",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "ForceHideCharges",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsAlertableItem",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsCastOnPickup",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsDisassemblable",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsDroppable",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsInnatelyDisassemblable",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsKillable",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsMuted",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsPermanent",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsPurchasable",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsRecipe",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsRecipeGenerated",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsSellable",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "IsStackable",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "ProRatesChargesWhenSelling",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "RequiresCharges",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "CanBeExecuted",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetCost",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetCurrentCharges",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetSecondaryCharges",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetDisplayedCharges",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetInitialCharges",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetItemColor",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetShareability",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetAbilityTextureSF",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetAssembledTime",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nEntityIndex: number )",
      "name": "GetPurchaseTime",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nItemID: number )",
      "name": "GetPurchaser",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nItem: number )",
      "name": "LocalPlayerDisassembleItem",
      "return": "void",
      "desc": "Attempt to have the local player disassemble the specified item. Returns false if the order wasn&apos;t issued."
    },
    {
      "func": "( nItem: number )",
      "name": "LocalPlayerDropItemFromStash",
      "return": "void",
      "desc": "Attempt to have the local player drop the specified item from its stash. Returns false if the order wasn&apos;t issued."
    },
    {
      "func": "( nItem: number )",
      "name": "LocalPlayerItemAlertAllies",
      "return": "void",
      "desc": "Attempt to have the local player alert allies about the specified item. Returns false if the order wasn&apos;t issued."
    },
    {
      "func": "( nItem: number )",
      "name": "LocalPlayerMoveItemToStash",
      "return": "void",
      "desc": "Attempt to have the local player move the specified item to its stash. Returns false if the order wasn&apos;t issued."
    },
    {
      "func": "( nItem: number )",
      "name": "LocalPlayerSellItem",
      "return": "void",
      "desc": "Attempt to have the local player sell the specified item. Returns false if the order wasn&apos;t issued."
    }
  ],
  "Game": [
    {
      "func": "()",
      "name": "Time",
      "return": "number",
      "desc": ""
    },
    {
      "func": "()",
      "name": "GetGameTime",
      "return": "number",
      "desc": ""
    },
    {
      "func": "()",
      "name": "GetGameFrameTime",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( bIncludePreGame: boolean, bIncludeNegativeTime: boolean )",
      "name": "GetDOTATime",
      "return": "number",
      "desc": ""
    },
    {
      "func": "()",
      "name": "IsGamePaused",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "()",
      "name": "IsInToolsMode",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "()",
      "name": "IsInBanPhase",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "()",
      "name": "GetGameWinner",
      "return": "number",
      "desc": "Return the team id of the winning team."
    },
    {
      "func": "()",
      "name": "GetStateTransitionTime",
      "return": "number",
      "desc": ""
    },
    {
      "func": "()",
      "name": "GetCustomGameDifficulty",
      "return": "number",
      "desc": "Get the difficulty setting of the game."
    },
    {
      "func": "()",
      "name": "IsHUDFlipped",
      "return": "boolean",
      "desc": "Returns true if the user has enabled flipped HUD"
    },
    {
      "func": "()",
      "name": "GetScreenWidth",
      "return": "number",
      "desc": "Returns the width of the display."
    },
    {
      "func": "()",
      "name": "GetScreenHeight",
      "return": "number",
      "desc": "Returns the height of the display."
    },
    {
      "func": "( x: number, y: number, z: number )",
      "name": "WorldToScreenX",
      "return": "number",
      "desc": "Converts the specified x,y,z world co-ordinate into an x screen coordinate. Returns -1 if behind the camera"
    },
    {
      "func": "( x: number, y: number, z: number )",
      "name": "WorldToScreenY",
      "return": "number",
      "desc": "Converts the specified x,y,z world co-ordinate into a y screen coordinate. Returns -1 if behind the camera"
    },
    {
      "func": "( nX: number, nY: number )",
      "name": "ScreenXYToWorld",
      "return": "number[]",
      "desc": "Converts the specified x, y screen coordinates into a x, y, z world coordinates."
    },
    {
      "func": "( iSlot: number )",
      "name": "GetKeybindForAbility",
      "return": "string",
      "desc": "Returns the keybind (as a string) for the requested ability slot."
    },
    {
      "func": "( iSlot: number )",
      "name": "GetKeybindForInventorySlot",
      "return": "string",
      "desc": "Returns the keybind (as a string) for the requested inventory slot."
    },
    {
      "func": "( nCommand: DOTAKeybindCommand_t )",
      "name": "GetKeybindForCommand",
      "return": "string",
      "desc": "Returns the keybind (as a string)."
    },
    {
      "func": "( pszKey: string, pszCommand: string )",
      "name": "CreateCustomKeyBind",
      "return": "void",
      "desc": "Create a new keybind."
    },
    {
      "func": "()",
      "name": "GetNianFightTimeLeft",
      "return": "void",
      "desc": ""
    },
    {
      "func": "()",
      "name": "GetState",
      "return": "DOTA_GameState",
      "desc": ""
    },
    {
      "func": "( nState: DOTA_GameState )",
      "name": "GameStateIs",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nState: DOTA_GameState )",
      "name": "GameStateIsBefore",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( nState: DOTA_GameState )",
      "name": "GameStateIsAfter",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( pszCommandName: string, callback: Function, pszDescription: string, nFlags: number )",
      "name": "AddCommand",
      "return": "void",
      "desc": ""
    },
    {
      "func": "()",
      "name": "GetLocalPlayerID",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( nTeamID: DOTATeam_t )",
      "name": "PlayerJoinTeam",
      "return": "void",
      "desc": "Assign the local player to the specified team"
    },
    {
      "func": "()",
      "name": "AutoAssignPlayersToTeams",
      "return": "void",
      "desc": "Assign the currently unassigned players to teams"
    },
    {
      "func": "()",
      "name": "ShufflePlayerTeamAssignments",
      "return": "void",
      "desc": "Shuffle the team assignments of all of the players currently assigned to a team."
    },
    {
      "func": "( flSeconds: number )",
      "name": "SetRemainingSetupTime",
      "return": "void",
      "desc": "Set the remaining seconds in team setup before the game starts. -1 to stop the countdown timer"
    },
    {
      "func": "( flSeconds: number )",
      "name": "SetAutoLaunchDelay",
      "return": "void",
      "desc": "Set the amount of time in seconds that will be set as the remaining time when all players are assigned to a team."
    },
    {
      "func": "( bEnable: boolean )",
      "name": "SetAutoLaunchEnabled",
      "return": "void",
      "desc": "Enable or disable automatically starting the game once all players are assigned to a team"
    },
    {
      "func": "()",
      "name": "GetAutoLaunchEnabled",
      "return": "boolean",
      "desc": "Return true of false indicating if automatically starting the game is enabled."
    },
    {
      "func": "( bLockTeams: boolean )",
      "name": "SetTeamSelectionLocked",
      "return": "void",
      "desc": "Lock the team selection preventing players from swiching teams."
    },
    {
      "func": "()",
      "name": "GetTeamSelectionLocked",
      "return": "boolean",
      "desc": "Returns true or false to indicate if team selection is locked"
    },
    {
      "func": "()",
      "name": "GetAllTeamIDs",
      "return": "DOTATeam_t[]",
      "desc": "Get all team IDs"
    },
    {
      "func": "()",
      "name": "GetAllPlayerIDs",
      "return": "number[]",
      "desc": "Get all player IDs"
    },
    {
      "func": "()",
      "name": "GetUnassignedPlayerIDs",
      "return": "number[]",
      "desc": "Get unassigned player IDs"
    },
    {
      "func": "( nPlayerID: number )",
      "name": "GetPlayerUltimateStateOrTime",
      "return": "number",
      "desc": "Get info about the player hero ultimate ability"
    },
    {
      "func": "( nPlayerID: number )",
      "name": "IsPlayerMuted",
      "return": "boolean",
      "desc": "Whether the local player has muted text and voice chat for the specified player id"
    },
    {
      "func": "( nPlayerID: number, bMuted: boolean )",
      "name": "SetPlayerMuted",
      "return": "void",
      "desc": "Set whether the local player has muted text and voice chat for the specified player id"
    },
    {
      "func": "( nTeam: DOTATeam_t )",
      "name": "GetTeamDetails",
      "return": "ITeamDetails",
      "desc": "Get detailed information for the given team"
    },
    {
      "func": "()",
      "name": "GetLocalPlayerInfo",
      "return": "IPlayerInfo",
      "desc": "Get details for the local player"
    },
    {
      "func": "( nPlayerID: number )",
      "name": "GetPlayerItems",
      "return": "number[]",
      "desc": "Get info about the player items."
    },
    {
      "func": "( nPlayerID: number )",
      "name": "GetPlayerInfo",
      "return": "IPlayerInfo",
      "desc": "Get info about the given player"
    },
    {
      "func": "( nTeam: DOTATeam_t )",
      "name": "GetPlayerIDsOnTeam",
      "return": "number[]",
      "desc": "Get player IDs for the given team"
    },
    {
      "func": "( pMsg: string )",
      "name": "ServerCmd",
      "return": "void",
      "desc": ""
    },
    {
      "func": "( bEnabled: boolean )",
      "name": "SetDotaRefractHeroes",
      "return": "void",
      "desc": ""
    },
    {
      "func": "()",
      "name": "FinishGame",
      "return": "void",
      "desc": ""
    },
    {
      "func": "()",
      "name": "Disconnect",
      "return": "void",
      "desc": ""
    },
    {
      "func": "()",
      "name": "FindEventMatch",
      "return": "any",
      "desc": ""
    },
    {
      "func": "( pSoundEventName: string )",
      "name": "EmitSound",
      "return": "number",
      "desc": "Emit a sound for the local player. Returns an integer handle that can be passed to StopSound. (Returns 0 on failure.)"
    },
    {
      "func": "( nHandle: number )",
      "name": "StopSound",
      "return": "void",
      "desc": "Stop a current playing sound on the local player. Takes handle from a call to EmitSound."
    },
    {
      "func": "()",
      "name": "IsShopOpen",
      "return": "boolean",
      "desc": "Ask whether the in game shop is open."
    },
    {
      "func": "( pszCustomShopEntityString: string )",
      "name": "SetCustomShopEntityString",
      "return": "string",
      "desc": "Set custom shop context."
    },
    {
      "func": "()",
      "name": "GetMapInfo",
      "return": "IMapInfo",
      "desc": "Return information about the current map."
    },
    {
      "func": "( args: PrepareUnitOrdersArgument )",
      "name": "PrepareUnitOrders",
      "return": "void",
      "desc": "Orders from the local player - takes a single arguments object that supports: dotaunitorder_t OrderType, ent_index TargetIndex, vector Position, ent_index AbilityIndex, OrderIssuer_t OrderIssuer, ent_index UnitIndex, OrderQueueBehavior_t QueueBehavior, bool ShowEffects."
    },
    {
      "func": "( nControlledUnitEnt: number, nItemEnt: number )",
      "name": "DropItemAtCursor",
      "return": "void",
      "desc": "Order a unit to drop the specified item at the current cursor location."
    },
    {
      "func": "( vec1: Vector, vec2: Vector )",
      "name": "Length2D",
      "return": "number",
      "desc": "Calculate 2D length."
    },
    {
      "func": "( vec: Vector )",
      "name": "Normalized",
      "return": "number[]",
      "desc": "Returns normalized vector."
    },
    {
      "func": "()",
      "name": "EnterAbilityLearnMode",
      "return": "void",
      "desc": ""
    },
    {
      "func": "()",
      "name": "EndAbilityLearnMode",
      "return": "void",
      "desc": ""
    },
    {
      "func": "()",
      "name": "IsInAbilityLearnMode",
      "return": "boolean",
      "desc": ""
    }
  ],
  "GameUI": [
    {
      "func": "( nElementType: number, bVisible: boolean )",
      "name": "SetDefaultUIEnabled",
      "return": "void",
      "desc": "Control whether the default UI is enabled"
    },
    {
      "func": "()",
      "name": "CustomUIConfig",
      "return": "any",
      "desc": "Get the current UI configuration"
    },
    {
      "func": "( vec: Vector )",
      "name": "PingMinimapAtLocation",
      "return": "void",
      "desc": "Create a minimap ping at the given location"
    },
    {
      "func": "( callback: (eventName: MouseCallbackEventType, mouseButton: number) => boolean )",
      "name": "SetMouseCallback",
      "return": "void",
      "desc": "Install a mouse input filter"
    },
    {
      "func": "( bEnable: boolean, nPort: number, offsetVal: number, flScale: number )",
      "name": "EnableAliMode",
      "return": "void",
      "desc": ""
    },
    {
      "func": "()",
      "name": "GetCursorPosition",
      "return": "number[]",
      "desc": "Get the current mouse position."
    },
    {
      "func": "( target: Vector )",
      "name": "FindScreenEntities",
      "return": "{entityIndex: number;accurateCollision: boolean;}[]",
      "desc": "Return the entity index of the entity under the given screen position."
    },
    {
      "func": "()",
      "name": "GetScreenWorldPosition",
      "return": "number[]",
      "desc": "Get the world position of the screen position, or null if the cursor is out of the world."
    },
    {
      "func": "( nButtonNum: number )",
      "name": "WasMousePressed",
      "return": "boolean",
      "desc": "Install a mouse input filter"
    },
    {
      "func": "( nButtonNum: number )",
      "name": "WasMouseDoublePressed",
      "return": "boolean",
      "desc": "Install a mouse input filter"
    },
    {
      "func": "( nButtonNum: number )",
      "name": "IsMouseDown",
      "return": "boolean",
      "desc": "Install a mouse input filter"
    },
    {
      "func": "()",
      "name": "IsShiftDown",
      "return": "boolean",
      "desc": "Is the shift button pressed?"
    },
    {
      "func": "()",
      "name": "IsAltDown",
      "return": "boolean",
      "desc": "Is the alt button pressed?"
    },
    {
      "func": "()",
      "name": "IsControlDown",
      "return": "boolean",
      "desc": "Is the control button pressed?"
    },
    {
      "func": "()",
      "name": "GetClickBehaviors",
      "return": "CLICK_BEHAVIORS",
      "desc": "Get the current UI click interaction mode."
    },
    {
      "func": "( nEntityIndex: number, bAddToGroup: boolean )",
      "name": "SelectUnit",
      "return": "void",
      "desc": "Select a unit, adding it to the group or replacing the current selection."
    },
    {
      "func": "()",
      "name": "GetCameraLookAtPosition",
      "return": "number[]",
      "desc": "Get the current look at position."
    },
    {
      "func": "()",
      "name": "GetCameraPosition",
      "return": "number[]",
      "desc": "Get the current camera position."
    },
    {
      "func": "()",
      "name": "GetCameraLookAtPositionHeightOffset",
      "return": "number",
      "desc": "Get the current look at position height offset."
    },
    {
      "func": "( flPitchMin: number )",
      "name": "SetCameraPitchMin",
      "return": "void",
      "desc": "Set the minimum camera pitch angle."
    },
    {
      "func": "( flPitchMax: number )",
      "name": "SetCameraPitchMax",
      "return": "void",
      "desc": "Set the maximum camera pitch angle."
    },
    {
      "func": "( flCameraYaw: number )",
      "name": "SetCameraYaw",
      "return": "void",
      "desc": "Set the camera&apos;s yaw."
    },
    {
      "func": "()",
      "name": "GetCameraYaw",
      "return": "number",
      "desc": "Get the camera&apos;s yaw."
    },
    {
      "func": "( flCameraLookAtHeightOffset: number )",
      "name": "SetCameraLookAtPositionHeightOffset",
      "return": "void",
      "desc": "Offset the camera&apos;s look at point."
    },
    {
      "func": "( x: number, y: number )",
      "name": "SetCameraPositionFromLateralLookAtPosition",
      "return": "void",
      "desc": "Set the camera from a lateral position."
    },
    {
      "func": "( bEnabled: boolean )",
      "name": "SetCameraTerrainAdjustmentEnabled",
      "return": "void",
      "desc": "Set whether the camera should automatically adjust to average terrain height."
    },
    {
      "func": "( flDistance: number )",
      "name": "SetCameraDistance",
      "return": "void",
      "desc": "Set the camera distance from the look at point."
    },
    {
      "func": "( nInset: number )",
      "name": "SetRenderBottomInsetOverride",
      "return": "void",
      "desc": "Set the gap between the bottom of the screen and the game rendering viewport. (Value expressed as pixels in a normalized 1024x768 viewport.)"
    },
    {
      "func": "( nInset: number )",
      "name": "SetRenderTopInsetOverride",
      "return": "void",
      "desc": "Set the gap between the top of the screen and the game rendering viewport. (Value expressed as pixels in a normalized 1024x768 viewport.)"
    },
    {
      "func": "( nTargetEntIndex: number )",
      "name": "SetCameraTarget",
      "return": "void",
      "desc": "Set the camera target for the local player, or -1 to clear."
    },
    {
      "func": "( vec: Vector, flLerp: number )",
      "name": "SetCameraTargetPosition",
      "return": "void",
      "desc": "Set the camera target as position for the local player over specified lerp."
    },
    {
      "func": "( nTargetEntIndex: number )",
      "name": "MoveCameraToEntity",
      "return": "void",
      "desc": "Moves the camera to an entity, but doesn&apos;t lock the camera on that entity."
    },
    {
      "func": "( vec: Vector )",
      "name": "WorldToScreenXYClamped",
      "return": "number[]",
      "desc": "Converts the specified x,y,z world co-ordinate into an x,y screen coordinate. Will clamp position to always be in front of camera.  Position returned as 0-&gt;1.0"
    },
    {
      "func": "( pszScoreboardName: string )",
      "name": "GetPlayerScoreboardScore",
      "return": "any",
      "desc": "Get the current players scoreboard score for the specified zone."
    },
    {
      "func": "( pszErrorText: string, pszErrorSound: string )",
      "name": "SendCustomHUDError",
      "return": "void",
      "desc": "Send a custom client side error message with passed string and soundevent."
    },
    {
      "func": "( ability: number )",
      "name": "ReplaceDOTAAbilitySpecialValues",
      "return": "void",
      "desc": "Given a passed ability, replace the special value variables in the passed localized text."
    }
  ],
  "Particles": [
    {
      "func": "( pParticleName: string, nAttachType: number, nEntityToAttach: number)",
      "name": "CreateParticle",
      "return": "number",
      "desc": "Create a particle system"
    },
    {
      "func": "( iIndex: number )",
      "name": "ReleaseParticleIndex",
      "return": "void",
      "desc": "Release a particle system"
    },
    {
      "func": "( iIndex: number, bDestroyImmediately: boolean )",
      "name": "DestroyParticleEffect",
      "return": "void",
      "desc": "Destroy a particle system"
    },
    {
      "func": "( iIndex: number, iPoint: number, vPosVal: Vector )",
      "name": "SetParticleControl",
      "return": "void",
      "desc": "Set a control point on a particle system"
    },
    {
      "func": "( iIndex: number, iPoint: number, vForwardVal: Vector )",
      "name": "SetParticleControlForward",
      "return": "void",
      "desc": "Set the orientation on a control point on a particle system"
    },
    {
      "func": "( iIndex: number )",
      "name": "SetParticleAlwaysSimulate",
      "return": "void",
      "desc": ""
    },
    {
      "func": "( iIndex: number, iPoint: number, iEntIndex: number, iAttachType: number, pszAttachName: string, vecFallbackPositionVal: Vector, bIncludeWearables: boolean )",
      "name": "SetParticleControlEnt",
      "return": "void",
      "desc": "Set a control point to track an entity on a particle system"
    }
  ],
  "EventData": [
    {
      "func": "( unEventID: number, unActionID: number )",
      "name": "GetEventActionScore",
      "return": "any",
      "desc": "Get the score of an EventAction"
    },
    {
      "func": "( unPeriodicResourceID: number )",
      "name": "GetPeriodicResourceUsed",
      "return": "any",
      "desc": "Get a periodic resource value used"
    },
    {
      "func": "( unPeriodicResourceID: number )",
      "name": "GetPeriodicResourceMax",
      "return": "any",
      "desc": "Get a periodic resource value max"
    }
  ],
  "LocalInventory": [
    {
      "func": "( nDefIndex: number )",
      "name": "HasItemByDefinition",
      "return": "boolean",
      "desc": "Does the player have an inventory item of a given item definition index?"
    }
  ],
  "$": [
    {
      "func": "( ...args: any[] )",
      "name": "Msg",
      "return": "void",
      "desc": "Log a message"
    },
    {
      "func": "( ...args: any[] )",
      "name": "AssertHelper",
      "return": "void",
      "desc": "Trigger an assert"
    },
    {
      "func": "( ...args: any[] )",
      "name": "Warning",
      "return": "void",
      "desc": "Log a warning message to specified channel"
    },
    {
      "func": "( event: string, panel: Panel, ...args: any[] )",
      "name": "DispatchEvent",
      "return": "void",
      "desc": "Dispatch an event"
    },
    {
      "func": "( event: string, panelID?: string, ...args: any[] )",
      "name": "DispatchEvent",
      "return": "void",
      "desc": "Dispatch an event"
    },
    {
      "func": "( delay: number, event: string, panelID?: string, ...args: any[] )",
      "name": "DispatchEventAsync",
      "return": "void",
      "desc": "Dispatch an event to occur later"
    },
    {
      "func": "( delay: number, event: string, panel: Panel, ...args: any[] )",
      "name": "DispatchEventAsync",
      "return": "void",
      "desc": "Dispatch an event to occur later"
    },
    {
      "func": "( event: string, parent: Panel, handler: (...args: any[]) => void )",
      "name": "RegisterEventHandler",
      "return": "void",
      "desc": "Register an event handler"
    },
    {
      "func": "( event: string, handler: (...args: any[]) => void )",
      "name": "RegisterForUnhandledEvent",
      "return": "number",
      "desc": "Register a handler for an event that is not otherwise handled"
    },
    {
      "func": "( event: string, handle: number )",
      "name": "UnregisterForUnhandledEvent",
      "return": "void",
      "desc": "Remove an unhandled event handler"
    },
    {
      "func": "( selector: string )",
      "name": "FindChildInContext",
      "return": "Panel | undefined",
      "desc": "Find an element"
    },
    {
      "func": "( url: string, args: IAsyncWebRequestData )",
      "name": "AsyncWebRequest",
      "return": "void",
      "desc": "Make a web request"
    },
    {
      "func": "( tagName: string, parent: Panel, id: string )",
      "name": "CreatePanel",
      "return": "Panel | undefined",
      "desc": "Create a new panel"
    },
    {
      "func": "( tagName: string, parent: Panel, id: string, properties: {[key: string]: string} )",
      "name": "CreatePanelWithProperties",
      "return": "Panel | undefined",
      "desc": "Create a new panel supplying a JS object as a fourth parameter containing properties to be applied to the panel"
    },
    {
      "func": "( key: string, panel?: Panel )",
      "name": "Localize",
      "return": "string",
      "desc": "Localize a string"
    },
    {
      "func": "()",
      "name": "Language",
      "return": "string",
      "desc": "Get the current language"
    },
    {
      "func": "(delay: number, callback: () => void)",
      "name": "Schedule",
      "return": "number",
      "desc": "Schedule a function to be called later"
    },
    {
      "func": "( scheduledId: number )",
      "name": "CancelScheduled",
      "return": "void",
      "desc": "Cancelse a scheduled function"
    },
    {
      "func": "()",
      "name": "GetContextPanel",
      "return": "Panel",
      "desc": "Get the current panel context"
    },
    {
      "func": "( context: Panel, keyName: string, callback: Function )",
      "name": "RegisterKeyBind",
      "return": "void",
      "desc": "Register a key binding"
    },
    {
      "func": "( ...args: any[] )",
      "name": "Each",
      "return": "void",
      "desc": "Call a function on each given item"
    },
    {
      "func": "()",
      "name": "DbgIsReloadingScript",
      "return": "boolean",
      "desc": "Call during JS startup code to check if script is being reloaded"
    },
    {
      "func": "( text: string )",
      "name": "HTMLEscape",
      "return": "string",
      "desc": "Convert a string to HTML-safe"
    },
    {
      "func": "( ...args: any[] )",
      "name": "LogChannel",
      "return": "any",
      "desc": "Create a logging channel"
    }
  ],
  "Panel": [
    {
      "func": "()",
      "name": "IsValid",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "",
      "name": "visible",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "",
      "name": "enabled",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "",
      "name": "checked",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "",
      "name": "defaultfocus",
      "return": "string",
      "desc": ""
    },
    {
      "func": "",
      "name": "inputnamespace",
      "return": "string",
      "desc": ""
    },
    {
      "func": "",
      "name": "hittest",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "",
      "name": "hittestchildren",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "",
      "name": "tabindex",
      "return": "number",
      "desc": ""
    },
    {
      "func": "",
      "name": "selectionpos_x",
      "return": "number",
      "desc": ""
    },
    {
      "func": "",
      "name": "selectionpos_y",
      "return": "number",
      "desc": ""
    },
    {
      "func": "",
      "name": "id",
      "return": "string",
      "desc": ""
    },
    {
      "func": "",
      "name": "layoutfile",
      "return": "string",
      "desc": ""
    },
    {
      "func": "",
      "name": "contentwidth",
      "return": "number",
      "desc": ""
    },
    {
      "func": "",
      "name": "contentheight",
      "return": "number",
      "desc": ""
    },
    {
      "func": "",
      "name": "desiredlayoutwidth",
      "return": "number",
      "desc": ""
    },
    {
      "func": "",
      "name": "desiredlayoutheight",
      "return": "number",
      "desc": ""
    },
    {
      "func": "",
      "name": "actuallayoutwidth",
      "return": "number",
      "desc": ""
    },
    {
      "func": "",
      "name": "actuallayoutheight",
      "return": "number",
      "desc": ""
    },
    {
      "func": "",
      "name": "actualxoffset",
      "return": "number",
      "desc": ""
    },
    {
      "func": "",
      "name": "actualyoffset",
      "return": "number",
      "desc": ""
    },
    {
      "func": "",
      "name": "scrolloffset_y",
      "return": "number",
      "desc": ""
    },
    {
      "func": "",
      "name": "scrolloffset_x",
      "return": "number",
      "desc": ""
    },
    {
      "func": "",
      "name": "actualuiscale_y",
      "return": "number",
      "desc": ""
    },
    {
      "func": "",
      "name": "actualuiscale_x",
      "return": "number",
      "desc": ""
    },
    {
      "func": "",
      "name": "style",
      "return": "CSSProperties",
      "desc": ""
    },
    {
      "func": "( name: string )",
      "name": "AddClass",
      "return": "void",
      "desc": ""
    },
    {
      "func": "( name: string )",
      "name": "RemoveClass",
      "return": "void",
      "desc": ""
    },
    {
      "func": "( name: string )",
      "name": "BHasClass",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( name: string )",
      "name": "BAscendantHasClass",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( name: string, enable: boolean )",
      "name": "SetHasClass",
      "return": "void",
      "desc": ""
    },
    {
      "func": "( name: string )",
      "name": "ToggleClass",
      "return": "void",
      "desc": ""
    },
    {
      "func": "( name1: string, name2: string )",
      "name": "SwitchClass",
      "return": "void",
      "desc": ""
    },
    {
      "func": "( name: string )",
      "name": "TriggerClass",
      "return": "void",
      "desc": ""
    },
    {
      "func": "( name: string )",
      "name": "ClearPanelEvent",
      "return": "void",
      "desc": ""
    },
    {
      "func": "( enable: boolean )",
      "name": "SetDraggable",
      "return": "void",
      "desc": ""
    },
    {
      "func": "()",
      "name": "IsDraggable",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "()",
      "name": "GetChildCount",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( index: number )",
      "name": "GetChild",
      "return": "Panel",
      "desc": ""
    },
    {
      "func": "(child: Panel)",
      "name": "GetChildIndex",
      "return": "number",
      "desc": ""
    },
    {
      "func": "()",
      "name": "Children",
      "return": "Panel[]",
      "desc": ""
    },
    {
      "func": "( className: string )",
      "name": "FindChildrenWithClassTraverse",
      "return": "Panel[] | undefined",
      "desc": ""
    },
    {
      "func": "()",
      "name": "GetParent",
      "return": "Panel",
      "desc": ""
    },
    {
      "func": "( panel: Panel )",
      "name": "SetParent",
      "return": "void",
      "desc": ""
    },
    {
      "func": "( id: string )",
      "name": "FindChild",
      "return": "Panel",
      "desc": ""
    },
    {
      "func": "( id: string )",
      "name": "FindChildTraverse",
      "return": "Panel",
      "desc": ""
    },
    {
      "func": "( f: string )",
      "name": "FindChildInLayoutFile",
      "return": "Panel",
      "desc": ""
    },
    {
      "func": "( f: string )",
      "name": "FindPanelInLayoutFile",
      "return": "Panel",
      "desc": ""
    },
    {
      "func": "()",
      "name": "RemoveAndDeleteChildren",
      "return": "void",
      "desc": ""
    },
    {
      "func": "( source: Panel, target: Panel )",
      "name": "MoveChildBefore",
      "return": "void",
      "desc": ""
    },
    {
      "func": "( source: Panel, target: Panel )",
      "name": "MoveChildAfter",
      "return": "void",
      "desc": ""
    },
    {
      "func": "()",
      "name": "GetPositionWithinWindow",
      "return": "number[]",
      "desc": ""
    },
    {
      "func": "( b: boolean )",
      "name": "ApplyStyles",
      "return": "void",
      "desc": ""
    },
    {
      "func": "( ...args: any[] )",
      "name": "ClearPropertyFromCode",
      "return": "void",
      "desc": ""
    },
    {
      "func": "( delay: number )",
      "name": "DeleteAsync",
      "return": "void",
      "desc": ""
    },
    {
      "func": "()",
      "name": "BIsTransparent",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "()",
      "name": "BAcceptsInput",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "()",
      "name": "BAcceptsFocus",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "()",
      "name": "SetFocus",
      "return": "void",
      "desc": ""
    },
    {
      "func": "()",
      "name": "UpdateFocusInContext",
      "return": "void",
      "desc": ""
    },
    {
      "func": "()",
      "name": "BHasHoverStyle",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( b: boolean )",
      "name": "SetAcceptsFocus",
      "return": "void",
      "desc": ""
    },
    {
      "func": "( b: boolean )",
      "name": "SetDisableFocusOnMouseDown",
      "return": "void",
      "desc": ""
    },
    {
      "func": "()",
      "name": "BHasKeyFocus",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( b: boolean )",
      "name": "SetScrollParentToFitWhenFocused",
      "return": "void",
      "desc": ""
    },
    {
      "func": "()",
      "name": "BScrollParentToFitWhenFocused",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "()",
      "name": "IsSelected",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "()",
      "name": "BHasDescendantKeyFocus",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( filePath: string, reload: boolean, usingParentContext: boolean )",
      "name": "BLoadLayout",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( content: string, reload: boolean, usingParentContext: boolean )",
      "name": "BLoadLayoutFromString",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( content: string, reload: boolean, usingParentContext: boolean )",
      "name": "LoadLayoutFromStringAsync",
      "return": "void",
      "desc": ""
    },
    {
      "func": "( filePath: string, reload: boolean, usingParentContext: boolean )",
      "name": "LoadLayoutAsync",
      "return": "void",
      "desc": ""
    },
    {
      "func": "( name: string )",
      "name": "BLoadLayoutSnippet",
      "return": "void",
      "desc": ""
    },
    {
      "func": "( name: string )",
      "name": "BHasLayoutSnippet",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( content: string )",
      "name": "BCreateChildren",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( b: boolean )",
      "name": "SetTopOfInputContext",
      "return": "void",
      "desc": ""
    },
    {
      "func": "( key: string, value: string )",
      "name": "SetDialogVariable",
      "return": "void",
      "desc": ""
    },
    {
      "func": "( key: string, value: number )",
      "name": "SetDialogVariableInt",
      "return": "void",
      "desc": ""
    },
    {
      "func": "( key: string, value: number )",
      "name": "SetDialogVariableTime",
      "return": "void",
      "desc": ""
    },
    {
      "func": "()",
      "name": "ScrollToTop",
      "return": "void",
      "desc": ""
    },
    {
      "func": "()",
      "name": "ScrollToBottom",
      "return": "void",
      "desc": ""
    },
    {
      "func": "()",
      "name": "ScrollToLeftEdge",
      "return": "void",
      "desc": ""
    },
    {
      "func": "()",
      "name": "ScrollToRightEdge",
      "return": "void",
      "desc": ""
    },
    {
      "func": "( unknownParam: any, b: boolean )",
      "name": "ScrollParentToMakePanelFit",
      "return": "void",
      "desc": ""
    },
    {
      "func": "()",
      "name": "BCanSeeInParentScroll",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( key: string, defaultValue: number )",
      "name": "GetAttributeInt",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( key: string, defaultValue: string )",
      "name": "GetAttributeString",
      "return": "string",
      "desc": ""
    },
    {
      "func": "( key: string, defaultValue: number )",
      "name": "GetAttributeUInt32",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( key: string, value: number )",
      "name": "SetAttributeInt",
      "return": "void",
      "desc": ""
    },
    {
      "func": "( key: string, value: string )",
      "name": "SetAttributeString",
      "return": "void",
      "desc": ""
    },
    {
      "func": "( key: string, value: number )",
      "name": "SetAttributeUInt32",
      "return": "void",
      "desc": ""
    },
    {
      "func": "( name: string )",
      "name": "SetInputNamespace",
      "return": "void",
      "desc": ""
    },
    {
      "func": "( b: boolean )",
      "name": "RegisterForReadyEvents",
      "return": "void",
      "desc": ""
    },
    {
      "func": "()",
      "name": "BReadyForDisplay",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( b: boolean )",
      "name": "SetReadyForDisplay",
      "return": "void",
      "desc": ""
    },
    {
      "func": "( x: number, y: number, z: number )",
      "name": "SetPositionInPixels",
      "return": "void",
      "desc": ""
    },
    {
      "func": "()",
      "name": "Data",
      "return": "any",
      "desc": ""
    },
    {
      "func": "( eventName: PanelEvent, callback: Function)",
      "name": "SetPanelEvent",
      "return": "void",
      "desc": ""
    },
    {
      "func": "( ...args: any[] )",
      "name": "RunScriptInPanelContext",
      "return": "void",
      "desc": ""
    },
    {
      "func": "",
      "name": "rememberchildfocus",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "",
      "name": "paneltype",
      "return": "string",
      "desc": ""
    }
  ],
  "TabButton": [
    {
			"func": "",
			"name": "visible",
			"return": "boolean",
			"desc": ""
		},
		{
			"func": "",
			"name": "enabled",
			"return": "boolean",
			"desc": ""
		},
		{
			"func": "",
			"name": "checked",
			"return": "boolean",
			"desc": ""
		},
		{
			"func": "",
			"name": "defaultfocus",
			"return": "string",
			"desc": ""
		},
		{
			"func": "",
			"name": "inputnamespace",
			"return": "string",
			"desc": ""
		},
		{
			"func": "",
			"name": "hittest",
			"return": "boolean",
			"desc": ""
		},
		{
			"func": "",
			"name": "hittestchildren",
			"return": "boolean",
			"desc": ""
		},
		{
			"func": "",
			"name": "tabindex",
			"return": "number",
			"desc": ""
		},
		{
			"func": "",
			"name": "selectionpos_x",
			"return": "number",
			"desc": ""
		},
		{
			"func": "",
			"name": "selectionpos_y",
			"return": "number",
			"desc": ""
		},
		{
			"func": "",
			"name": "id",
			"return": "string",
			"desc": ""
		},
		{
			"func": "",
			"name": "layoutfile",
			"return": "string",
			"desc": ""
		},
		{
			"func": "",
			"name": "contentwidth",
			"return": "number",
			"desc": ""
		},
		{
			"func": "",
			"name": "contentheight",
			"return": "number",
			"desc": ""
		},
		{
			"func": "",
			"name": "desiredlayoutwidth",
			"return": "number",
			"desc": ""
		},
		{
			"func": "",
			"name": "desiredlayoutheight",
			"return": "number",
			"desc": ""
		},
		{
			"func": "",
			"name": "actuallayoutwidth",
			"return": "number",
			"desc": ""
		},
		{
			"func": "",
			"name": "actuallayoutheight",
			"return": "number",
			"desc": ""
		},
		{
			"func": "",
			"name": "actualxoffset",
			"return": "number",
			"desc": ""
		},
		{
			"func": "",
			"name": "actualyoffset",
			"return": "number",
			"desc": ""
		},
		{
			"func": "",
			"name": "scrolloffset_y",
			"return": "number",
			"desc": ""
		},
		{
			"func": "",
			"name": "scrolloffset_x",
			"return": "number",
			"desc": ""
		},
		{
			"func": "",
			"name": "actualuiscale_y",
			"return": "number",
			"desc": ""
		},
		{
			"func": "",
			"name": "actualuiscale_x",
			"return": "number",
			"desc": ""
		},
		{
			"func": "",
			"name": "style",
			"return": "CSSProperties",
			"desc": ""
		},
		{
			"func": "( name: string )",
			"name": "AddClass",
			"return": "void",
			"desc": ""
		},
		{
			"func": "( name: string )",
			"name": "RemoveClass",
			"return": "void",
			"desc": ""
		},
		{
			"func": "( name: string )",
			"name": "BHasClass",
			"return": "boolean",
			"desc": ""
		},
		{
			"func": "( name: string )",
			"name": "BAscendantHasClass",
			"return": "boolean",
			"desc": ""
		},
		{
			"func": "( name: string, enable: boolean )",
			"name": "SetHasClass",
			"return": "void",
			"desc": ""
		},
		{
			"func": "( name: string )",
			"name": "ToggleClass",
			"return": "void",
			"desc": ""
		},
		{
			"func": "( name1: string, name2: string )",
			"name": "SwitchClass",
			"return": "void",
			"desc": ""
		},
		{
			"func": "( name: string )",
			"name": "TriggerClass",
			"return": "void",
			"desc": ""
		},
		{
			"func": "( name: string )",
			"name": "ClearPanelEvent",
			"return": "void",
			"desc": ""
		},
		{
			"func": "( b?: boolean )",
			"name": "SetDraggable",
			"return": "void",
			"desc": ""
		},
		{
			"func": "()",
			"name": "IsDraggable",
			"return": "boolean",
			"desc": ""
		},
		{
			"func": "()",
			"name": "GetChildCount",
			"return": "number",
			"desc": ""
		},
		{
			"func": "( index: number )",
			"name": "GetChild",
			"return": "Panel",
			"desc": ""
		},
		{
			"func": "(child: Panel)",
			"name": "GetChildIndex",
			"return": "number",
			"desc": ""
		},
		{
			"func": "()",
			"name": "Children",
			"return": "Panel[]",
			"desc": ""
		},
		{
			"func": "( className: string )",
			"name": "FindChildrenWithClassTraverse",
			"return": "Panel | undefined",
			"desc": ""
		},
		{
			"func": "()",
			"name": "GetParent",
			"return": "Panel",
			"desc": ""
		},
		{
			"func": "( panel: Panel )",
			"name": "SetParent",
			"return": "void",
			"desc": ""
		},
		{
			"func": "( id: string )",
			"name": "FindChild",
			"return": "Panel",
			"desc": ""
		},
		{
			"func": "( id: string )",
			"name": "FindChildTraverse",
			"return": "Panel",
			"desc": ""
		},
		{
			"func": "( f: string )",
			"name": "FindChildInLayoutFile",
			"return": "Panel",
			"desc": ""
		},
		{
			"func": "( f: string )",
			"name": "FindPanelInLayoutFile",
			"return": "Panel",
			"desc": ""
		},
		{
			"func": "()",
			"name": "RemoveAndDeleteChildren",
			"return": "void",
			"desc": ""
		},
		{
			"func": "( source: Panel, target: Panel )",
			"name": "MoveChildBefore",
			"return": "void",
			"desc": ""
		},
		{
			"func": "( source: Panel, target: Panel )",
			"name": "MoveChildAfter",
			"return": "void",
			"desc": ""
		},
		{
			"func": "()",
			"name": "GetPositionWithinWindow",
			"return": "number[]",
			"desc": ""
		},
		{
			"func": "( b: boolean )",
			"name": "ApplyStyles",
			"return": "void",
			"desc": ""
		},
		{
			"func": "( ...args: any[] )",
			"name": "ClearPropertyFromCode",
			"return": "void",
			"desc": ""
		},
		{
			"func": "( delay: number )",
			"name": "DeleteAsync",
			"return": "void",
			"desc": ""
		},
		{
			"func": "()",
			"name": "BIsTransparent",
			"return": "boolean",
			"desc": ""
		},
		{
			"func": "()",
			"name": "BAcceptsInput",
			"return": "boolean",
			"desc": ""
		},
		{
			"func": "()",
			"name": "BAcceptsFocus",
			"return": "boolean",
			"desc": ""
		},
		{
			"func": "()",
			"name": "SetFocus",
			"return": "void",
			"desc": ""
		},
		{
			"func": "()",
			"name": "UpdateFocusInContext",
			"return": "void",
			"desc": ""
		},
		{
			"func": "()",
			"name": "BHasHoverStyle",
			"return": "boolean",
			"desc": ""
		},
		{
			"func": "( b: boolean )",
			"name": "SetAcceptsFocus",
			"return": "void",
			"desc": ""
		},
		{
			"func": "( b: boolean )",
			"name": "SetDisableFocusOnMouseDown",
			"return": "void",
			"desc": ""
		},
		{
			"func": "()",
			"name": "BHasKeyFocus",
			"return": "boolean",
			"desc": ""
		},
		{
			"func": "( b: boolean )",
			"name": "SetScrollParentToFitWhenFocused",
			"return": "void",
			"desc": ""
		},
		{
			"func": "()",
			"name": "BScrollParentToFitWhenFocused",
			"return": "boolean",
			"desc": ""
		},
		{
			"func": "()",
			"name": "IsSelected",
			"return": "boolean",
			"desc": ""
		},
		{
			"func": "()",
			"name": "BHasDescendantKeyFocus",
			"return": "boolean",
			"desc": ""
		},
		{
			"func": "( filePath: string, reload: boolean, usingParentContext: boolean )",
			"name": "BLoadLayout",
			"return": "boolean",
			"desc": ""
		},
		{
			"func": "( content: string, reload: boolean, usingParentContext: boolean )",
			"name": "BLoadLayoutFromString",
			"return": "boolean",
			"desc": ""
		},
		{
			"func": "( content: string, reload: boolean, usingParentContext: boolean )",
			"name": "LoadLayoutFromStringAsync",
			"return": "void",
			"desc": ""
		},
		{
			"func": "( filePath: string, reload: boolean, usingParentContext: boolean )",
			"name": "LoadLayoutAsync",
			"return": "void",
			"desc": ""
		},
		{
			"func": "( name: string )",
			"name": "BLoadLayoutSnippet",
			"return": "void",
			"desc": ""
		},
		{
			"func": "( name: string )",
			"name": "BHasLayoutSnippet",
			"return": "boolean",
			"desc": ""
		},
		{
			"func": "( content: string )",
			"name": "BCreateChildren",
			"return": "boolean",
			"desc": ""
		},
		{
			"func": "( b: boolean )",
			"name": "SetTopOfInputContext",
			"return": "void",
			"desc": ""
		},
		{
			"func": "( key: string, value: string )",
			"name": "SetDialogVariable",
			"return": "void",
			"desc": ""
		},
		{
			"func": "( key: string, value: number )",
			"name": "SetDialogVariableInt",
			"return": "void",
			"desc": ""
		},
		{
			"func": "( key: string, value: number )",
			"name": "SetDialogVariableTime",
			"return": "void",
			"desc": ""
		},
		{
			"func": "()",
			"name": "ScrollToTop",
			"return": "void",
			"desc": ""
		},
		{
			"func": "()",
			"name": "ScrollToBottom",
			"return": "void",
			"desc": ""
		},
		{
			"func": "()",
			"name": "ScrollToLeftEdge",
			"return": "void",
			"desc": ""
		},
		{
			"func": "()",
			"name": "ScrollToRightEdge",
			"return": "void",
			"desc": ""
		},
		{
			"func": "( unknownParam: any, b: boolean )",
			"name": "ScrollParentToMakePanelFit",
			"return": "void",
			"desc": ""
		},
		{
			"func": "()",
			"name": "BCanSeeInParentScroll",
			"return": "boolean",
			"desc": ""
		},
		{
			"func": "( key: string, defaultValue: number )",
			"name": "GetAttributeInt",
			"return": "number",
			"desc": ""
		},
		{
			"func": "( key: string, defaultValue: string )",
			"name": "GetAttributeString",
			"return": "string",
			"desc": ""
		},
		{
			"func": "( key: string, defaultValue: number )",
			"name": "GetAttributeUInt32",
			"return": "number",
			"desc": ""
		},
		{
			"func": "( key: string, value: number )",
			"name": "SetAttributeInt",
			"return": "void",
			"desc": ""
		},
		{
			"func": "( key: string, value: string )",
			"name": "SetAttributeString",
			"return": "void",
			"desc": ""
		},
		{
			"func": "( key: string, value: number )",
			"name": "SetAttributeUInt32",
			"return": "void",
			"desc": ""
		},
		{
			"func": "( name: string )",
			"name": "SetInputNamespace",
			"return": "void",
			"desc": ""
		},
		{
			"func": "( b: boolean )",
			"name": "RegisterForReadyEvents",
			"return": "void",
			"desc": ""
		},
		{
			"func": "()",
			"name": "BReadyForDisplay",
			"return": "boolean",
			"desc": ""
		},
		{
			"func": "( b: boolean )",
			"name": "SetReadyForDisplay",
			"return": "void",
			"desc": ""
		},
		{
			"func": "( x: number, y: number, z: number )",
			"name": "SetPositionInPixels",
			"return": "void",
			"desc": ""
		},
		{
			"func": "()",
			"name": "Data",
			"return": "any",
			"desc": ""
		},
		{
			"func": "( eventName: string, callback: Function)",
			"name": "SetPanelEvent",
			"return": "void",
			"desc": ""
		},
		{
			"func": "( ...args: any[] )",
			"name": "RunScriptInPanelContext",
			"return": "void",
			"desc": ""
		},
		{
			"func": "",
			"name": "rememberchildfocus",
			"return": "boolean",
			"desc": ""
		},
		{
			"func": "",
			"name": "paneltype",
			"return": "string",
			"desc": ""
		}
  ],
  "Button": [
  ],
  "Label": [
    {
      "func": "",
      "name": "text",
      "return": "string",
      "desc": ""
    },
    {
      "func": "",
      "name": "html",
      "return": "boolean",
      "desc": ""
    }
  ],
  "TextButton": [
    {
      "func": "",
      "name": "text",
      "return": "string",
      "desc": ""
    }
  ],
  "RadioButton": [
    {
      "func": "()",
      "name": "GetSelectedButton",
      "return": "RadioButton",
      "desc": ""
    }
  ],
  "ToggleButton": [
    {
      "func": "( b: boolean )",
      "name": "SetSelected",
      "return": "void",
      "desc": ""
    },
    {
      "func": "",
      "name": "text",
      "return": "string",
      "desc": ""
    }
  ],
  "DropDown": [
    {
      "func": "( id: string, text: string )",
      "name": "AddOption",
      "return": "void",
      "desc": ""
    },
    {
      "func": "( id: string )",
      "name": "HasOption",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( id: string )",
      "name": "RemoveOption",
      "return": "void",
      "desc": ""
    },
    {
      "func": "()",
      "name": "RemoveAllOptions",
      "return": "void",
      "desc": ""
    },
    {
      "func": "()",
      "name": "GetSelected",
      "return": "string",
      "desc": ""
    },
    {
      "func": "( id: string )",
      "name": "SetSelected",
      "return": "void",
      "desc": ""
    },
    {
      "func": "( id: string )",
      "name": "FindDropDownMenuChild",
      "return": "Panel",
      "desc": ""
    },
    {
      "func": "()",
      "name": "AccessDropDownMenu",
      "return": "void",
      "desc": ""
    }
  ],
  "ProgressBar": [
    {
      "func": "",
      "name": "value",
      "return": "number",
      "desc": ""
    },
    {
      "func": "",
      "name": "min",
      "return": "number",
      "desc": ""
    },
    {
      "func": "",
      "name": "max",
      "return": "number",
      "desc": ""
    }
  ],
  "TextEntry": [
    {
      "func": "",
      "name": "text",
      "return": "string",
      "desc": ""
    },
    {
      "func": "( count: number )",
      "name": "SetMaxChars",
      "return": "void",
      "desc": ""
    },
    {
      "func": "()",
      "name": "GetMaxCharCount",
      "return": "number",
      "desc": ""
    },
    {
      "func": "()",
      "name": "GetCursorOffset",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( offset: number )",
      "name": "SetCursorOffset",
      "return": "void",
      "desc": ""
    },
    {
      "func": "()",
      "name": "ClearSelection",
      "return": "void",
      "desc": ""
    },
    {
      "func": "()",
      "name": "SelectAll",
      "return": "void",
      "desc": ""
    },
    {
      "func": "( b: boolean )",
      "name": "RaiseChangeEvents",
      "return": "void",
      "desc": ""
    }
  ],
  "SlottedSlider": [
    {
      "func": "",
      "name": "paneltype",
      "return": "string",
      "desc": ""
    },
    {
      "func": "",
      "name": "rememberchildfocus",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "",
      "name": "value",
      "return": "number",
      "desc": ""
    },
    {
      "func": "",
      "name": "min",
      "return": "number",
      "desc": ""
    },
    {
      "func": "",
      "name": "max",
      "return": "number",
      "desc": ""
    },
    {
      "func": "",
      "name": "increment",
      "return": "number",
      "desc": ""
    },
    {
      "func": "",
      "name": "default",
      "return": "number",
      "desc": ""
    },
    {
      "func": "",
      "name": "mousedown",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( str: 'horizontal' | 'vertical' )",
      "name": "SetDirection",
      "return": "void",
      "desc": ""
    },
    {
      "func": "( b: boolean )",
      "name": "SetShowDefaultValue",
      "return": "void",
      "desc": ""
    },
    {
      "func": "( b: boolean )",
      "name": "SetRequiresSelection",
      "return": "void",
      "desc": ""
    },
    {
      "func": "( v: number )",
      "name": "SetValueNoEvents",
      "return": "void",
      "desc": ""
    },
		{
      "func": "( event: string, callback: Function )",
      "name": "SetPanelEvent",
      "return": "void",
      "desc": ""
		},
		{
      "func": "()",
      "name": "RunScriptInPanelContext",
      "return": "void",
      "desc": ""
    }
  ],
  "Slider": [
    {
      "func": "",
      "name": "paneltype",
      "return": "string",
      "desc": ""
    },
    {
      "func": "",
      "name": "rememberchildfocus",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "",
      "name": "value",
      "return": "number",
      "desc": ""
    },
    {
      "func": "",
      "name": "min",
      "return": "number",
      "desc": ""
    },
    {
      "func": "",
      "name": "max",
      "return": "number",
      "desc": ""
    },
    {
      "func": "",
      "name": "increment",
      "return": "number",
      "desc": ""
    },
    {
      "func": "",
      "name": "default",
      "return": "number",
      "desc": ""
    },
    {
      "func": "",
      "name": "mousedown",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( str: 'horizontal' | 'vertical' )",
      "name": "SetDirection",
      "return": "void",
      "desc": ""
    },
    {
      "func": "( b: boolean )",
      "name": "SetShowDefaultValue",
      "return": "void",
      "desc": ""
    },
    {
      "func": "( b: boolean )",
      "name": "SetRequiresSelection",
      "return": "void",
      "desc": ""
    },
    {
      "func": "( v: number )",
      "name": "SetValueNoEvents",
      "return": "void",
      "desc": ""
		},
		{
      "func": "( event: string, callback: Function )",
      "name": "SetPanelEvent",
      "return": "void",
      "desc": ""
		},
		{
      "func": "()",
      "name": "RunScriptInPanelContext",
      "return": "void",
      "desc": ""
    }
  ],
  "NumberEntry": [
    {
      "func": "",
      "name": "value",
      "return": "number",
      "desc": ""
    },
    {
      "func": "",
      "name": "min",
      "return": "number",
      "desc": ""
    },
    {
      "func": "",
      "name": "max",
      "return": "number",
      "desc": ""
    },
    {
      "func": "",
      "name": "increment",
      "return": "number",
      "desc": ""
    }
  ],
  "Image": [
    {
      "func": "( path: string )",
      "name": "SetImage",
      "return": "void",
      "desc": ""
    },
    {
      "func": "( v: string )",
      "name": "SetScaling",
      "return": "void",
      "desc": ""
    }
  ],
  "Carousel": [
    {
      "func": "( ...args: any[] )",
      "name": "SetSelectedChild",
      "return": "void",
      "desc": ""
    },
    {
      "func": "()",
      "name": "GetFocusChild",
      "return": "Panel",
      "desc": ""
    },
    {
      "func": "()",
      "name": "GetFocusIndex",
      "return": "number",
      "desc": ""
    }
  ],
  "Movie": [
    {
      "func": "( path: string )",
      "name": "SetMovie",
      "return": "void",
      "desc": ""
    },
    {
      "func": "( v: string )",
      "name": "SetControls",
      "return": "void",
      "desc": ""
    },
    {
      "func": "( v: string )",
      "name": "SetTitle",
      "return": "void",
      "desc": ""
    },
    {
      "func": "()",
      "name": "Play",
      "return": "void",
      "desc": ""
    },
    {
      "func": "()",
      "name": "Pause",
      "return": "void",
      "desc": ""
    },
    {
      "func": "()",
      "name": "Stop",
      "return": "void",
      "desc": ""
    },
    {
      "func": "( bEnable: boolean )",
      "name": "SetRepeat",
      "return": "void",
      "desc": ""
    },
    {
      "func": "( v: number )",
      "name": "SetPlaybackVolume",
      "return": "void",
      "desc": ""
    },
    {
      "func": "()",
      "name": "BAdjustingVolume",
      "return": "boolean",
      "desc": ""
    }
  ],
  "DOTAAvatarImage": [
    {
      "func": "",
      "name": "steamid",
      "return": "string",
      "desc": ""
    },
    {
      "func": "",
      "name": "accountid",
      "return": "number",
      "desc": ""
    },
    {
      "func": "( id: number )",
      "name": "SetAccountID",
      "return": "void",
      "desc": ""
    }
  ],
  "DOTAAbilityImage": [
    {
      "func": "",
      "name": "abilityid",
      "return": "number",
      "desc": ""
    },
    {
      "func": "",
      "name": "abilityname",
      "return": "string",
      "desc": ""
    },
    {
      "func": "",
      "name": "abilitylevel",
      "return": "number",
      "desc": ""
    },
    {
      "func": "",
      "name": "contextEntityIndex",
      "return": "number",
      "desc": ""
    }
  ],
  "DOTAItemImage": [
    {
      "func": "",
      "name": "itemname",
      "return": "string",
      "desc": ""
    },
    {
      "func": "",
      "name": "contextEntityIndex",
      "return": "number",
      "desc": ""
    }
  ],
  "DOTAHeroImage": [
    {
      "func": "",
      "name": "heroid",
      "return": "number",
      "desc": ""
    },
    {
      "func": "",
      "name": "heroname",
      "return": "string",
      "desc": ""
    },
    {
      "func": "",
      "name": "persona",
      "return": "any",
      "desc": ""
    },
    {
      "func": "",
      "name": "heroimagestyle",
      "return": "'portrait' | 'landscape' | 'icon'",
      "desc": "Default landscape"
    }
  ],
  "DOTAUserName": [
    {
      "func": "",
      "name": "steamid",
      "return": "string",
      "desc": ""
    },
    {
      "func": "",
      "name": "accountid",
      "return": "string",
      "desc": ""
    }
  ],
  "DOTAScenePanel": [
    {
      "func": "( entityName: string, event: string, param: string )",
      "name": "FireEntityInput",
      "return": "void",
      "desc": ""
    },
    {
      "func": "( entityName: string, sound: string )",
      "name": "PlayEntitySoundEvent",
      "return": "void",
      "desc": ""
    },
    {
      "func": "( sUnitName: string, sEnvironmentName: string, bShowPortraitBackground: boolean )",
      "name": "SetUnit",
      "return": "void",
      "desc": ""
    },
    {
      "func": "()",
      "name": "GetPanoramaSurfacePanel",
      "return": "Panel",
      "desc": ""
    },
    {
      "func": "( pitch: number, yaw: number, roll: number, unknow: number )",
      "name": "SetRotateParams",
      "return": "void",
      "desc": ""
    }
  ],
  "DOTAAbilityPanel": [
    {
      "func": "",
      "name": "overrideentityindex",
      "return": "number",
      "desc": ""
    },
    {
      "func": "",
      "name": "overridedisplaykeybind",
      "return": "number",
      "desc": ""
    }
  ],
  "DOTAHTMLPanel": [
    {
      "func": "( url: string )",
      "name": "SetURL",
      "return": "void",
      "desc": ""
    }
  ],
  "DOTAHUDOverlayMap": [
    {
      "func": "",
      "name": "mapscroll",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "",
      "name": "maptexture",
      "return": "string",
      "desc": "materials/overviews/[map_name].vtex"
    },
    {
      "func": "",
      "name": "mapscale",
      "return": "number",
      "desc": ""
    },
    {
      "func": "",
      "name": "fixedoffsetenabled",
      "return": "boolean",
      "desc": ""
    },
    {
      "func": "( x: number, y: number )",
      "name": "SetFixedOffset",
      "return": "void",
      "desc": ""
    },
    {
      "func": "( size: number, x: number, y: number )",
      "name": "SetFixedBackgroundTexturePosition",
      "return": "boolean",
      "desc": ""
    }
  ],
  "Constants": {
    "SteamUGCQuery": [
      {
        "value": "0",
        "name": "RankedByVote",
        "desc": ""
      },
      {
        "value": "1",
        "name": "RankedByPublicationDate",
        "desc": ""
      },
      {
        "value": "2",
        "name": "AcceptedForGameRankedByAcceptanceDate",
        "desc": ""
      },
      {
        "value": "3",
        "name": "RankedByTrend",
        "desc": ""
      },
      {
        "value": "4",
        "name": "FavoritedByFriendsRankedByPublicationDate",
        "desc": ""
      },
      {
        "value": "5",
        "name": "CreatedByFriendsRankedByPublicationDate",
        "desc": ""
      },
      {
        "value": "6",
        "name": "RankedByNumTimesReported",
        "desc": ""
      },
      {
        "value": "7",
        "name": "CreatedByFollowedUsersRankedByPublicationDate",
        "desc": ""
      },
      {
        "value": "8",
        "name": "NotYetRated",
        "desc": ""
      },
      {
        "value": "9",
        "name": "RankedByTotalVotesAsc",
        "desc": ""
      },
      {
        "value": "10",
        "name": "RankedByVotesUp",
        "desc": ""
      },
      {
        "value": "11",
        "name": "RankedByTextSearch",
        "desc": ""
      },
      {
        "value": "12",
        "name": "RankedByTotalUniqueSubscriptions",
        "desc": ""
      },
      {
        "value": "13",
        "name": "RankedByPlaytimeTrend",
        "desc": ""
      },
      {
        "value": "14",
        "name": "RankedByTotalPlaytime",
        "desc": ""
      },
      {
        "value": "15",
        "name": "RankedByAveragePlaytimeTrend",
        "desc": ""
      },
      {
        "value": "16",
        "name": "RankedByLifetimeAveragePlaytime",
        "desc": ""
      },
      {
        "value": "17",
        "name": "RankedByPlaytimeSessionsTrend",
        "desc": ""
      },
      {
        "value": "18",
        "name": "RankedByLifetimePlaytimeSessions",
        "desc": ""
      }
    ],
    "SteamUGCMatchingUGCType": [
      {
        "value": "0",
        "name": "Items",
        "desc": ""
      },
      {
        "value": "1",
        "name": "Items_Mtx",
        "desc": ""
      },
      {
        "value": "2",
        "name": "Items_ReadyToUse",
        "desc": ""
      },
      {
        "value": "3",
        "name": "Collections",
        "desc": ""
      },
      {
        "value": "4",
        "name": "Artwork",
        "desc": ""
      },
      {
        "value": "5",
        "name": "Videos",
        "desc": ""
      },
      {
        "value": "6",
        "name": "Screenshots",
        "desc": ""
      },
      {
        "value": "7",
        "name": "AllGuides",
        "desc": ""
      },
      {
        "value": "8",
        "name": "WebGuides",
        "desc": ""
      },
      {
        "value": "9",
        "name": "IntegratedGuides",
        "desc": ""
      },
      {
        "value": "10",
        "name": "UsableInGame",
        "desc": ""
      },
      {
        "value": "11",
        "name": "ControllerBindings",
        "desc": ""
      },
      {
        "value": "12",
        "name": "GameManagedItems",
        "desc": ""
      },
      {
        "value": "-1",
        "name": "All",
        "desc": ""
      }
    ],
    "SteamUniverse": [
      {
        "value": "0",
        "name": "Invalid",
        "desc": ""
      },
      {
        "value": "3",
        "name": "Internal",
        "desc": ""
      },
      {
        "value": "4",
        "name": "Dev",
        "desc": ""
      },
      {
        "value": "2",
        "name": "Beta",
        "desc": ""
      },
      {
        "value": "1",
        "name": "Public",
        "desc": ""
      }
    ],
    "DOTA_GameState": [
      {
        "value": "0",
        "name": "DOTA_GAMERULES_STATE_INIT",
        "desc": ""
      },
      {
        "value": "1",
        "name": "DOTA_GAMERULES_STATE_WAIT_FOR_PLAYERS_TO_LOAD",
        "desc": ""
      },
      {
        "value": "3",
        "name": "DOTA_GAMERULES_STATE_HERO_SELECTION",
        "desc": ""
      },
      {
        "value": "4",
        "name": "DOTA_GAMERULES_STATE_STRATEGY_TIME",
        "desc": ""
      },
      {
        "value": "7",
        "name": "DOTA_GAMERULES_STATE_PRE_GAME",
        "desc": ""
      },
      {
        "value": "8",
        "name": "DOTA_GAMERULES_STATE_GAME_IN_PROGRESS",
        "desc": ""
      },
      {
        "value": "9",
        "name": "DOTA_GAMERULES_STATE_POST_GAME",
        "desc": ""
      },
      {
        "value": "10",
        "name": "DOTA_GAMERULES_STATE_DISCONNECT",
        "desc": ""
      },
      {
        "value": "5",
        "name": "DOTA_GAMERULES_STATE_TEAM_SHOWCASE",
        "desc": ""
      },
      {
        "value": "2",
        "name": "DOTA_GAMERULES_STATE_CUSTOM_GAME_SETUP",
        "desc": ""
      },
      {
        "value": "6",
        "name": "DOTA_GAMERULES_STATE_WAIT_FOR_MAP_TO_LOAD",
        "desc": ""
      },
      {
        "value": "0",
        "name": "DOTA_GAMERULES_STATE_LAST",
        "desc": ""
      }
    ],
    "DOTA_GC_TEAM": [
      {
        "value": "0",
        "name": "DOTA_GC_TEAM_GOOD_GUYS",
        "desc": ""
      },
      {
        "value": "1",
        "name": "DOTA_GC_TEAM_BAD_GUYS",
        "desc": ""
      },
      {
        "value": "2",
        "name": "DOTA_GC_TEAM_BROADCASTER",
        "desc": ""
      },
      {
        "value": "3",
        "name": "DOTA_GC_TEAM_SPECTATOR",
        "desc": ""
      },
      {
        "value": "4",
        "name": "DOTA_GC_TEAM_PLAYER_POOL",
        "desc": ""
      },
      {
        "value": "5",
        "name": "DOTA_GC_TEAM_NOTEAM",
        "desc": ""
      }
    ],
    "DOTAConnectionState_t": [
      {
        "value": "0",
        "name": "DOTA_CONNECTION_STATE_UNKNOWN",
        "desc": ""
      },
      {
        "value": "1",
        "name": "DOTA_CONNECTION_STATE_NOT_YET_CONNECTED",
        "desc": ""
      },
      {
        "value": "2",
        "name": "DOTA_CONNECTION_STATE_CONNECTED",
        "desc": ""
      },
      {
        "value": "3",
        "name": "DOTA_CONNECTION_STATE_DISCONNECTED",
        "desc": ""
      },
      {
        "value": "4",
        "name": "DOTA_CONNECTION_STATE_ABANDONED",
        "desc": ""
      },
      {
        "value": "5",
        "name": "DOTA_CONNECTION_STATE_LOADING",
        "desc": ""
      },
      {
        "value": "6",
        "name": "DOTA_CONNECTION_STATE_FAILED",
        "desc": ""
      }
    ],
    "dotaunitorder_t": [
      {
        "value": "0",
        "name": "DOTA_UNIT_ORDER_NONE",
        "desc": ""
      },
      {
        "value": "1",
        "name": "DOTA_UNIT_ORDER_MOVE_TO_POSITION",
        "desc": ""
      },
      {
        "value": "2",
        "name": "DOTA_UNIT_ORDER_MOVE_TO_TARGET",
        "desc": ""
      },
      {
        "value": "3",
        "name": "DOTA_UNIT_ORDER_ATTACK_MOVE",
        "desc": ""
      },
      {
        "value": "4",
        "name": "DOTA_UNIT_ORDER_ATTACK_TARGET",
        "desc": ""
      },
      {
        "value": "5",
        "name": "DOTA_UNIT_ORDER_CAST_POSITION",
        "desc": ""
      },
      {
        "value": "6",
        "name": "DOTA_UNIT_ORDER_CAST_TARGET",
        "desc": ""
      },
      {
        "value": "7",
        "name": "DOTA_UNIT_ORDER_CAST_TARGET_TREE",
        "desc": ""
      },
      {
        "value": "8",
        "name": "DOTA_UNIT_ORDER_CAST_NO_TARGET",
        "desc": ""
      },
      {
        "value": "9",
        "name": "DOTA_UNIT_ORDER_CAST_TOGGLE",
        "desc": ""
      },
      {
        "value": "10",
        "name": "DOTA_UNIT_ORDER_HOLD_POSITION",
        "desc": ""
      },
      {
        "value": "11",
        "name": "DOTA_UNIT_ORDER_TRAIN_ABILITY",
        "desc": ""
      },
      {
        "value": "12",
        "name": "DOTA_UNIT_ORDER_DROP_ITEM",
        "desc": ""
      },
      {
        "value": "13",
        "name": "DOTA_UNIT_ORDER_GIVE_ITEM",
        "desc": ""
      },
      {
        "value": "14",
        "name": "DOTA_UNIT_ORDER_PICKUP_ITEM",
        "desc": ""
      },
      {
        "value": "15",
        "name": "DOTA_UNIT_ORDER_PICKUP_RUNE",
        "desc": ""
      },
      {
        "value": "16",
        "name": "DOTA_UNIT_ORDER_PURCHASE_ITEM",
        "desc": ""
      },
      {
        "value": "17",
        "name": "DOTA_UNIT_ORDER_SELL_ITEM",
        "desc": ""
      },
      {
        "value": "18",
        "name": "DOTA_UNIT_ORDER_DISASSEMBLE_ITEM",
        "desc": ""
      },
      {
        "value": "19",
        "name": "DOTA_UNIT_ORDER_MOVE_ITEM",
        "desc": ""
      },
      {
        "value": "20",
        "name": "DOTA_UNIT_ORDER_CAST_TOGGLE_AUTO",
        "desc": ""
      },
      {
        "value": "21",
        "name": "DOTA_UNIT_ORDER_STOP",
        "desc": ""
      },
      {
        "value": "22",
        "name": "DOTA_UNIT_ORDER_TAUNT",
        "desc": ""
      },
      {
        "value": "23",
        "name": "DOTA_UNIT_ORDER_BUYBACK",
        "desc": ""
      },
      {
        "value": "24",
        "name": "DOTA_UNIT_ORDER_GLYPH",
        "desc": ""
      },
      {
        "value": "25",
        "name": "DOTA_UNIT_ORDER_EJECT_ITEM_FROM_STASH",
        "desc": ""
      },
      {
        "value": "26",
        "name": "DOTA_UNIT_ORDER_CAST_RUNE",
        "desc": ""
      },
      {
        "value": "27",
        "name": "DOTA_UNIT_ORDER_PING_ABILITY",
        "desc": ""
      },
      {
        "value": "28",
        "name": "DOTA_UNIT_ORDER_MOVE_TO_DIRECTION",
        "desc": ""
      },
      {
        "value": "29",
        "name": "DOTA_UNIT_ORDER_PATROL",
        "desc": ""
      },
      {
        "value": "30",
        "name": "DOTA_UNIT_ORDER_VECTOR_TARGET_POSITION",
        "desc": ""
      },
      {
        "value": "31",
        "name": "DOTA_UNIT_ORDER_RADAR",
        "desc": ""
      },
      {
        "value": "32",
        "name": "DOTA_UNIT_ORDER_SET_ITEM_COMBINE_LOCK",
        "desc": ""
      },
      {
        "value": "33",
        "name": "DOTA_UNIT_ORDER_CONTINUE",
        "desc": ""
      },
      {
        "value": "34",
        "name": "DOTA_UNIT_ORDER_VECTOR_TARGET_CANCELED",
        "desc": ""
      },
      {
        "value": "35",
        "name": "DOTA_UNIT_ORDER_CAST_RIVER_PAINT",
        "desc": ""
      },
      {
        "value": "36",
        "name": "DOTA_UNIT_ORDER_PREGAME_ADJUST_ITEM_ASSIGNMENT",
        "desc": ""
      },
      {
        "value": "37",
        "name": "DOTA_UNIT_ORDER_DROP_ITEM_AT_FOUNTAIN",
        "desc": ""
      },
      {
        "value": "38",
        "name": "DOTA_UNIT_ORDER_TAKE_ITEM_FROM_NEUTRAL_ITEM_STASH",
        "desc": ""
      }
    ],
    "DOTA_OVERHEAD_ALERT": [
      {
        "value": "0",
        "name": "OVERHEAD_ALERT_GOLD",
        "desc": ""
      },
      {
        "value": "1",
        "name": "OVERHEAD_ALERT_DENY",
        "desc": ""
      },
      {
        "value": "2",
        "name": "OVERHEAD_ALERT_CRITICAL",
        "desc": ""
      },
      {
        "value": "3",
        "name": "OVERHEAD_ALERT_XP",
        "desc": ""
      },
      {
        "value": "4",
        "name": "OVERHEAD_ALERT_BONUS_SPELL_DAMAGE",
        "desc": ""
      },
      {
        "value": "5",
        "name": "OVERHEAD_ALERT_MISS",
        "desc": ""
      },
      {
        "value": "6",
        "name": "OVERHEAD_ALERT_DAMAGE",
        "desc": ""
      },
      {
        "value": "7",
        "name": "OVERHEAD_ALERT_EVADE",
        "desc": ""
      },
      {
        "value": "8",
        "name": "OVERHEAD_ALERT_BLOCK",
        "desc": ""
      },
      {
        "value": "9",
        "name": "OVERHEAD_ALERT_BONUS_POISON_DAMAGE",
        "desc": ""
      },
      {
        "value": "10",
        "name": "OVERHEAD_ALERT_HEAL",
        "desc": ""
      },
      {
        "value": "11",
        "name": "OVERHEAD_ALERT_MANA_ADD",
        "desc": ""
      },
      {
        "value": "12",
        "name": "OVERHEAD_ALERT_MANA_LOSS",
        "desc": ""
      },
      {
        "value": "13",
        "name": "OVERHEAD_ALERT_LAST_HIT_EARLY",
        "desc": ""
      },
      {
        "value": "14",
        "name": "OVERHEAD_ALERT_LAST_HIT_CLOSE",
        "desc": ""
      },
      {
        "value": "15",
        "name": "OVERHEAD_ALERT_LAST_HIT_MISS",
        "desc": ""
      },
      {
        "value": "16",
        "name": "OVERHEAD_ALERT_MAGICAL_BLOCK",
        "desc": ""
      },
      {
        "value": "17",
        "name": "OVERHEAD_ALERT_INCOMING_DAMAGE",
        "desc": ""
      },
      {
        "value": "18",
        "name": "OVERHEAD_ALERT_OUTGOING_DAMAGE",
        "desc": ""
      },
      {
        "value": "19",
        "name": "OVERHEAD_ALERT_DISABLE_RESIST",
        "desc": ""
      },
      {
        "value": "20",
        "name": "OVERHEAD_ALERT_DEATH",
        "desc": ""
      },
      {
        "value": "21",
        "name": "OVERHEAD_ALERT_BLOCKED",
        "desc": ""
      }
    ],
    "DOTA_HeroPickState": [
      {
        "value": "0",
        "name": "DOTA_HEROPICK_STATE_NONE",
        "desc": ""
      },
      {
        "value": "1",
        "name": "DOTA_HEROPICK_STATE_AP_SELECT",
        "desc": ""
      },
      {
        "value": "2",
        "name": "DOTA_HEROPICK_STATE_SD_SELECT",
        "desc": ""
      },
      {
        "value": "3",
        "name": "DOTA_HEROPICK_STATE_INTRO_SELECT_UNUSED",
        "desc": ""
      },
      {
        "value": "4",
        "name": "DOTA_HEROPICK_STATE_RD_SELECT_UNUSED",
        "desc": ""
      },
      {
        "value": "5",
        "name": "DOTA_HEROPICK_STATE_CM_INTRO",
        "desc": ""
      },
      {
        "value": "6",
        "name": "DOTA_HEROPICK_STATE_CM_CAPTAINPICK",
        "desc": ""
      },
      {
        "value": "7",
        "name": "DOTA_HEROPICK_STATE_CM_BAN1",
        "desc": ""
      },
      {
        "value": "8",
        "name": "DOTA_HEROPICK_STATE_CM_BAN2",
        "desc": ""
      },
      {
        "value": "9",
        "name": "DOTA_HEROPICK_STATE_CM_BAN3",
        "desc": ""
      },
      {
        "value": "10",
        "name": "DOTA_HEROPICK_STATE_CM_BAN4",
        "desc": ""
      },
      {
        "value": "11",
        "name": "DOTA_HEROPICK_STATE_CM_BAN5",
        "desc": ""
      },
      {
        "value": "12",
        "name": "DOTA_HEROPICK_STATE_CM_BAN6",
        "desc": ""
      },
      {
        "value": "13",
        "name": "DOTA_HEROPICK_STATE_CM_BAN7",
        "desc": ""
      },
      {
        "value": "14",
        "name": "DOTA_HEROPICK_STATE_CM_BAN8",
        "desc": ""
      },
      {
        "value": "15",
        "name": "DOTA_HEROPICK_STATE_CM_BAN9",
        "desc": ""
      },
      {
        "value": "16",
        "name": "DOTA_HEROPICK_STATE_CM_BAN10",
        "desc": ""
      },
      {
        "value": "17",
        "name": "DOTA_HEROPICK_STATE_CM_BAN11",
        "desc": ""
      },
      {
        "value": "18",
        "name": "DOTA_HEROPICK_STATE_CM_BAN12",
        "desc": ""
      },
      {
        "value": "19",
        "name": "DOTA_HEROPICK_STATE_CM_BAN13",
        "desc": ""
      },
      {
        "value": "20",
        "name": "DOTA_HEROPICK_STATE_CM_BAN14",
        "desc": ""
      },
      {
        "value": "21",
        "name": "DOTA_HEROPICK_STATE_CM_SELECT1",
        "desc": ""
      },
      {
        "value": "22",
        "name": "DOTA_HEROPICK_STATE_CM_SELECT2",
        "desc": ""
      },
      {
        "value": "23",
        "name": "DOTA_HEROPICK_STATE_CM_SELECT3",
        "desc": ""
      },
      {
        "value": "24",
        "name": "DOTA_HEROPICK_STATE_CM_SELECT4",
        "desc": ""
      },
      {
        "value": "25",
        "name": "DOTA_HEROPICK_STATE_CM_SELECT5",
        "desc": ""
      },
      {
        "value": "26",
        "name": "DOTA_HEROPICK_STATE_CM_SELECT6",
        "desc": ""
      },
      {
        "value": "27",
        "name": "DOTA_HEROPICK_STATE_CM_SELECT7",
        "desc": ""
      },
      {
        "value": "28",
        "name": "DOTA_HEROPICK_STATE_CM_SELECT8",
        "desc": ""
      },
      {
        "value": "29",
        "name": "DOTA_HEROPICK_STATE_CM_SELECT9",
        "desc": ""
      },
      {
        "value": "30",
        "name": "DOTA_HEROPICK_STATE_CM_SELECT10",
        "desc": ""
      },
      {
        "value": "31",
        "name": "DOTA_HEROPICK_STATE_CM_PICK",
        "desc": ""
      },
      {
        "value": "32",
        "name": "DOTA_HEROPICK_STATE_AR_SELECT",
        "desc": ""
      },
      {
        "value": "33",
        "name": "DOTA_HEROPICK_STATE_MO_SELECT",
        "desc": ""
      },
      {
        "value": "34",
        "name": "DOTA_HEROPICK_STATE_FH_SELECT",
        "desc": ""
      },
      {
        "value": "35",
        "name": "DOTA_HEROPICK_STATE_CD_INTRO",
        "desc": ""
      },
      {
        "value": "36",
        "name": "DOTA_HEROPICK_STATE_CD_CAPTAINPICK",
        "desc": ""
      },
      {
        "value": "37",
        "name": "DOTA_HEROPICK_STATE_CD_BAN1",
        "desc": ""
      },
      {
        "value": "38",
        "name": "DOTA_HEROPICK_STATE_CD_BAN2",
        "desc": ""
      },
      {
        "value": "39",
        "name": "DOTA_HEROPICK_STATE_CD_BAN3",
        "desc": ""
      },
      {
        "value": "40",
        "name": "DOTA_HEROPICK_STATE_CD_BAN4",
        "desc": ""
      },
      {
        "value": "41",
        "name": "DOTA_HEROPICK_STATE_CD_BAN5",
        "desc": ""
      },
      {
        "value": "42",
        "name": "DOTA_HEROPICK_STATE_CD_BAN6",
        "desc": ""
      },
      {
        "value": "43",
        "name": "DOTA_HEROPICK_STATE_CD_SELECT1",
        "desc": ""
      },
      {
        "value": "44",
        "name": "DOTA_HEROPICK_STATE_CD_SELECT2",
        "desc": ""
      },
      {
        "value": "45",
        "name": "DOTA_HEROPICK_STATE_CD_SELECT3",
        "desc": ""
      },
      {
        "value": "46",
        "name": "DOTA_HEROPICK_STATE_CD_SELECT4",
        "desc": ""
      },
      {
        "value": "47",
        "name": "DOTA_HEROPICK_STATE_CD_SELECT5",
        "desc": ""
      },
      {
        "value": "48",
        "name": "DOTA_HEROPICK_STATE_CD_SELECT6",
        "desc": ""
      },
      {
        "value": "49",
        "name": "DOTA_HEROPICK_STATE_CD_SELECT7",
        "desc": ""
      },
      {
        "value": "50",
        "name": "DOTA_HEROPICK_STATE_CD_SELECT8",
        "desc": ""
      },
      {
        "value": "51",
        "name": "DOTA_HEROPICK_STATE_CD_SELECT9",
        "desc": ""
      },
      {
        "value": "52",
        "name": "DOTA_HEROPICK_STATE_CD_SELECT10",
        "desc": ""
      },
      {
        "value": "53",
        "name": "DOTA_HEROPICK_STATE_CD_PICK",
        "desc": ""
      },
      {
        "value": "54",
        "name": "DOTA_HEROPICK_STATE_BD_SELECT",
        "desc": ""
      },
      {
        "value": "55",
        "name": "DOTA_HERO_PICK_STATE_ABILITY_DRAFT_SELECT",
        "desc": ""
      },
      {
        "value": "56",
        "name": "DOTA_HERO_PICK_STATE_ARDM_SELECT",
        "desc": ""
      },
      {
        "value": "57",
        "name": "DOTA_HEROPICK_STATE_ALL_DRAFT_SELECT",
        "desc": ""
      },
      {
        "value": "58",
        "name": "DOTA_HERO_PICK_STATE_CUSTOMGAME_SELECT",
        "desc": ""
      },
      {
        "value": "59",
        "name": "DOTA_HEROPICK_STATE_SELECT_PENALTY",
        "desc": ""
      },
      {
        "value": "60",
        "name": "DOTA_HEROPICK_STATE_CUSTOM_PICK_RULES",
        "desc": ""
      },
      {
        "value": "61",
        "name": "DOTA_HEROPICK_STATE_COUNT",
        "desc": ""
      }
    ],
    "DOTATeam_t": [
      {
        "value": "2",
        "name": "DOTA_TEAM_FIRST",
        "desc": ""
      },
      {
        "value": "2",
        "name": "DOTA_TEAM_GOODGUYS",
        "desc": ""
      },
      {
        "value": "3",
        "name": "DOTA_TEAM_BADGUYS",
        "desc": ""
      },
      {
        "value": "4",
        "name": "DOTA_TEAM_NEUTRALS",
        "desc": ""
      },
      {
        "value": "5",
        "name": "DOTA_TEAM_NOTEAM",
        "desc": ""
      },
      {
        "value": "6",
        "name": "DOTA_TEAM_CUSTOM_1",
        "desc": ""
      },
      {
        "value": "7",
        "name": "DOTA_TEAM_CUSTOM_2",
        "desc": ""
      },
      {
        "value": "8",
        "name": "DOTA_TEAM_CUSTOM_3",
        "desc": ""
      },
      {
        "value": "9",
        "name": "DOTA_TEAM_CUSTOM_4",
        "desc": ""
      },
      {
        "value": "10",
        "name": "DOTA_TEAM_CUSTOM_5",
        "desc": ""
      },
      {
        "value": "11",
        "name": "DOTA_TEAM_CUSTOM_6",
        "desc": ""
      },
      {
        "value": "12",
        "name": "DOTA_TEAM_CUSTOM_7",
        "desc": ""
      },
      {
        "value": "13",
        "name": "DOTA_TEAM_CUSTOM_8",
        "desc": ""
      },
      {
        "value": "14",
        "name": "DOTA_TEAM_COUNT",
        "desc": ""
      },
      {
        "value": "6",
        "name": "DOTA_TEAM_CUSTOM_MIN",
        "desc": ""
      },
      {
        "value": "13",
        "name": "DOTA_TEAM_CUSTOM_MAX",
        "desc": ""
      },
      {
        "value": "8",
        "name": "DOTA_TEAM_CUSTOM_COUNT",
        "desc": ""
      }
    ],
    "DOTA_RUNES": [
      {
        "value": "-1",
        "name": "DOTA_RUNE_INVALID",
        "desc": ""
      },
      {
        "value": "0",
        "name": "DOTA_RUNE_DOUBLEDAMAGE",
        "desc": ""
      },
      {
        "value": "1",
        "name": "DOTA_RUNE_HASTE",
        "desc": ""
      },
      {
        "value": "2",
        "name": "DOTA_RUNE_ILLUSION",
        "desc": ""
      },
      {
        "value": "3",
        "name": "DOTA_RUNE_INVISIBILITY",
        "desc": ""
      },
      {
        "value": "4",
        "name": "DOTA_RUNE_REGENERATION",
        "desc": ""
      },
      {
        "value": "5",
        "name": "DOTA_RUNE_BOUNTY",
        "desc": ""
      },
      {
        "value": "6",
        "name": "DOTA_RUNE_ARCANE",
        "desc": ""
      },
      {
        "value": "7",
        "name": "DOTA_RUNE_XP",
        "desc": ""
      },
      {
        "value": "8",
        "name": "DOTA_RUNE_COUNT",
        "desc": ""
      }
    ],
    "DOTA_UNIT_TARGET_TEAM": [
      {
        "value": "0",
        "name": "DOTA_UNIT_TARGET_TEAM_NONE",
        "desc": ""
      },
      {
        "value": "1",
        "name": "DOTA_UNIT_TARGET_TEAM_FRIENDLY",
        "desc": ""
      },
      {
        "value": "2",
        "name": "DOTA_UNIT_TARGET_TEAM_ENEMY",
        "desc": ""
      },
      {
        "value": "4",
        "name": "DOTA_UNIT_TARGET_TEAM_CUSTOM",
        "desc": ""
      },
      {
        "value": "3",
        "name": "DOTA_UNIT_TARGET_TEAM_BOTH",
        "desc": ""
      }
    ],
    "DOTA_UNIT_TARGET_TYPE": [
      {
        "value": "0",
        "name": "DOTA_UNIT_TARGET_NONE",
        "desc": ""
      },
      {
        "value": "1",
        "name": "DOTA_UNIT_TARGET_HERO",
        "desc": ""
      },
      {
        "value": "2",
        "name": "DOTA_UNIT_TARGET_CREEP",
        "desc": ""
      },
      {
        "value": "4",
        "name": "DOTA_UNIT_TARGET_BUILDING",
        "desc": ""
      },
      {
        "value": "16",
        "name": "DOTA_UNIT_TARGET_COURIER",
        "desc": ""
      },
      {
        "value": "32",
        "name": "DOTA_UNIT_TARGET_OTHER",
        "desc": ""
      },
      {
        "value": "64",
        "name": "DOTA_UNIT_TARGET_TREE",
        "desc": ""
      },
      {
        "value": "128",
        "name": "DOTA_UNIT_TARGET_CUSTOM",
        "desc": ""
      },
      {
        "value": "18",
        "name": "DOTA_UNIT_TARGET_BASIC",
        "desc": ""
      },
      {
        "value": "55",
        "name": "DOTA_UNIT_TARGET_ALL",
        "desc": ""
      }
    ],
    "DOTA_UNIT_TARGET_FLAGS": [
      {
        "value": "0",
        "name": "DOTA_UNIT_TARGET_FLAG_NONE",
        "desc": ""
      },
      {
        "value": "2",
        "name": "DOTA_UNIT_TARGET_FLAG_RANGED_ONLY",
        "desc": ""
      },
      {
        "value": "4",
        "name": "DOTA_UNIT_TARGET_FLAG_MELEE_ONLY",
        "desc": ""
      },
      {
        "value": "8",
        "name": "DOTA_UNIT_TARGET_FLAG_DEAD",
        "desc": ""
      },
      {
        "value": "16",
        "name": "DOTA_UNIT_TARGET_FLAG_MAGIC_IMMUNE_ENEMIES",
        "desc": ""
      },
      {
        "value": "32",
        "name": "DOTA_UNIT_TARGET_FLAG_NOT_MAGIC_IMMUNE_ALLIES",
        "desc": ""
      },
      {
        "value": "64",
        "name": "DOTA_UNIT_TARGET_FLAG_INVULNERABLE",
        "desc": ""
      },
      {
        "value": "128",
        "name": "DOTA_UNIT_TARGET_FLAG_FOW_VISIBLE",
        "desc": ""
      },
      {
        "value": "256",
        "name": "DOTA_UNIT_TARGET_FLAG_NO_INVIS",
        "desc": ""
      },
      {
        "value": "512",
        "name": "DOTA_UNIT_TARGET_FLAG_NOT_ANCIENTS",
        "desc": ""
      },
      {
        "value": "1024",
        "name": "DOTA_UNIT_TARGET_FLAG_PLAYER_CONTROLLED",
        "desc": ""
      },
      {
        "value": "2048",
        "name": "DOTA_UNIT_TARGET_FLAG_NOT_DOMINATED",
        "desc": ""
      },
      {
        "value": "4096",
        "name": "DOTA_UNIT_TARGET_FLAG_NOT_SUMMONED",
        "desc": ""
      },
      {
        "value": "8192",
        "name": "DOTA_UNIT_TARGET_FLAG_NOT_ILLUSIONS",
        "desc": ""
      },
      {
        "value": "16384",
        "name": "DOTA_UNIT_TARGET_FLAG_NOT_ATTACK_IMMUNE",
        "desc": ""
      },
      {
        "value": "32768",
        "name": "DOTA_UNIT_TARGET_FLAG_MANA_ONLY",
        "desc": ""
      },
      {
        "value": "65536",
        "name": "DOTA_UNIT_TARGET_FLAG_CHECK_DISABLE_HELP",
        "desc": ""
      },
      {
        "value": "131072",
        "name": "DOTA_UNIT_TARGET_FLAG_NOT_CREEP_HERO",
        "desc": ""
      },
      {
        "value": "262144",
        "name": "DOTA_UNIT_TARGET_FLAG_OUT_OF_WORLD",
        "desc": ""
      },
      {
        "value": "524288",
        "name": "DOTA_UNIT_TARGET_FLAG_NOT_NIGHTMARED",
        "desc": ""
      },
      {
        "value": "1048576",
        "name": "DOTA_UNIT_TARGET_FLAG_PREFER_ENEMIES",
        "desc": ""
      },
      {
        "value": "2097152",
        "name": "DOTA_UNIT_TARGET_FLAG_RESPECT_OBSTRUCTIONS",
        "desc": ""
      }
    ],
    "DOTALimits_t": [
      {
        "value": "64",
        "name": "DOTA_MAX_PLAYERS",
        "desc": "Max number of players connected to the server including spectators."
      },
      {
        "value": "24",
        "name": "DOTA_MAX_TEAM",
        "desc": "Max number of players per team."
      },
      {
        "value": "10",
        "name": "DOTA_MAX_PLAYER_TEAMS",
        "desc": "Max number of player teams supported."
      },
      {
        "value": "24",
        "name": "DOTA_MAX_TEAM_PLAYERS",
        "desc": "Max number of non-spectator players supported."
      },
      {
        "value": "40",
        "name": "DOTA_MAX_SPECTATOR_TEAM_SIZE",
        "desc": "How many spectators can watch."
      },
      {
        "value": "15",
        "name": "DOTA_MAX_SPECTATOR_LOBBY_SIZE",
        "desc": "Max number of viewers in a spectator lobby."
      },
      {
        "value": "5",
        "name": "DOTA_DEFAULT_MAX_TEAM",
        "desc": "Default number of players per team."
      },
      {
        "value": "10",
        "name": "DOTA_DEFAULT_MAX_TEAM_PLAYERS",
        "desc": "Default number of non-spectator players supported."
      }
    ],
    "DOTAInventoryFlags_t": [
      {
        "value": "0",
        "name": "DOTA_INVENTORY_ALLOW_NONE",
        "desc": ""
      },
      {
        "value": "1",
        "name": "DOTA_INVENTORY_ALLOW_MAIN",
        "desc": ""
      },
      {
        "value": "2",
        "name": "DOTA_INVENTORY_ALLOW_STASH",
        "desc": ""
      },
      {
        "value": "4",
        "name": "DOTA_INVENTORY_ALLOW_DROP_ON_GROUND",
        "desc": ""
      },
      {
        "value": "8",
        "name": "DOTA_INVENTORY_ALLOW_DROP_AT_FOUNTAIN",
        "desc": ""
      },
      {
        "value": "16",
        "name": "DOTA_INVENTORY_LIMIT_DROP_ON_GROUND",
        "desc": ""
      },
      {
        "value": "3",
        "name": "DOTA_INVENTORY_ALL_ACCESS",
        "desc": ""
      }
    ],
    "EDOTA_ModifyGold_Reason": [
      {
        "value": "0",
        "name": "DOTA_ModifyGold_Unspecified",
        "desc": ""
      },
      {
        "value": "1",
        "name": "DOTA_ModifyGold_Death",
        "desc": ""
      },
      {
        "value": "2",
        "name": "DOTA_ModifyGold_Buyback",
        "desc": ""
      },
      {
        "value": "3",
        "name": "DOTA_ModifyGold_PurchaseConsumable",
        "desc": ""
      },
      {
        "value": "4",
        "name": "DOTA_ModifyGold_PurchaseItem",
        "desc": ""
      },
      {
        "value": "5",
        "name": "DOTA_ModifyGold_AbandonedRedistribute",
        "desc": ""
      },
      {
        "value": "6",
        "name": "DOTA_ModifyGold_SellItem",
        "desc": ""
      },
      {
        "value": "7",
        "name": "DOTA_ModifyGold_AbilityCost",
        "desc": ""
      },
      {
        "value": "8",
        "name": "DOTA_ModifyGold_CheatCommand",
        "desc": ""
      },
      {
        "value": "9",
        "name": "DOTA_ModifyGold_SelectionPenalty",
        "desc": ""
      },
      {
        "value": "10",
        "name": "DOTA_ModifyGold_GameTick",
        "desc": ""
      },
      {
        "value": "11",
        "name": "DOTA_ModifyGold_Building",
        "desc": ""
      },
      {
        "value": "12",
        "name": "DOTA_ModifyGold_HeroKill",
        "desc": ""
      },
      {
        "value": "13",
        "name": "DOTA_ModifyGold_CreepKill",
        "desc": ""
      },
      {
        "value": "14",
        "name": "DOTA_ModifyGold_NeutralKill",
        "desc": ""
      },
      {
        "value": "15",
        "name": "DOTA_ModifyGold_RoshanKill",
        "desc": ""
      },
      {
        "value": "16",
        "name": "DOTA_ModifyGold_CourierKill",
        "desc": ""
      },
      {
        "value": "17",
        "name": "DOTA_ModifyGold_BountyRune",
        "desc": ""
      },
      {
        "value": "18",
        "name": "DOTA_ModifyGold_SharedGold",
        "desc": ""
      },
      {
        "value": "19",
        "name": "DOTA_ModifyGold_AbilityGold",
        "desc": ""
      },
      {
        "value": "20",
        "name": "DOTA_ModifyGold_WardKill",
        "desc": ""
      }
    ],
    "DOTAUnitAttackCapability_t": [
      {
        "value": "0",
        "name": "DOTA_UNIT_CAP_NO_ATTACK",
        "desc": ""
      },
      {
        "value": "1",
        "name": "DOTA_UNIT_CAP_MELEE_ATTACK",
        "desc": ""
      },
      {
        "value": "2",
        "name": "DOTA_UNIT_CAP_RANGED_ATTACK",
        "desc": ""
      },
      {
        "value": "4",
        "name": "DOTA_UNIT_CAP_RANGED_ATTACK_DIRECTIONAL",
        "desc": ""
      },
      {
        "value": "3",
        "name": "DOTA_UNIT_ATTACK_CAPABILITY_BIT_COUNT",
        "desc": ""
      }
    ],
    "DOTAUnitMoveCapability_t": [
      {
        "value": "0",
        "name": "DOTA_UNIT_CAP_MOVE_NONE",
        "desc": ""
      },
      {
        "value": "1",
        "name": "DOTA_UNIT_CAP_MOVE_GROUND",
        "desc": ""
      },
      {
        "value": "2",
        "name": "DOTA_UNIT_CAP_MOVE_FLY",
        "desc": ""
      }
    ],
    "EShareAbility": [
      {
        "value": "0",
        "name": "ITEM_FULLY_SHAREABLE",
        "desc": ""
      },
      {
        "value": "1",
        "name": "ITEM_PARTIALLY_SHAREABLE",
        "desc": ""
      },
      {
        "value": "2",
        "name": "ITEM_NOT_SHAREABLE",
        "desc": ""
      }
    ],
    "DOTAMusicStatus_t": [
      {
        "value": "0",
        "name": "DOTA_MUSIC_STATUS_NONE",
        "desc": ""
      },
      {
        "value": "1",
        "name": "DOTA_MUSIC_STATUS_EXPLORATION",
        "desc": ""
      },
      {
        "value": "2",
        "name": "DOTA_MUSIC_STATUS_BATTLE",
        "desc": ""
      },
      {
        "value": "3",
        "name": "DOTA_MUSIC_STATUS_PRE_GAME_EXPLORATION",
        "desc": ""
      },
      {
        "value": "4",
        "name": "DOTA_MUSIC_STATUS_DEAD",
        "desc": ""
      },
      {
        "value": "5",
        "name": "DOTA_MUSIC_STATUS_LAST",
        "desc": ""
      }
    ],
    "DOTA_ABILITY_BEHAVIOR": [
      {
        "value": "0",
        "name": "DOTA_ABILITY_BEHAVIOR_NONE",
        "desc": ""
      },
      {
        "value": "1",
        "name": "DOTA_ABILITY_BEHAVIOR_HIDDEN",
        "desc": ""
      },
      {
        "value": "2",
        "name": "DOTA_ABILITY_BEHAVIOR_PASSIVE",
        "desc": ""
      },
      {
        "value": "4",
        "name": "DOTA_ABILITY_BEHAVIOR_NO_TARGET",
        "desc": ""
      },
      {
        "value": "8",
        "name": "DOTA_ABILITY_BEHAVIOR_UNIT_TARGET",
        "desc": ""
      },
      {
        "value": "16",
        "name": "DOTA_ABILITY_BEHAVIOR_POINT",
        "desc": ""
      },
      {
        "value": "32",
        "name": "DOTA_ABILITY_BEHAVIOR_AOE",
        "desc": ""
      },
      {
        "value": "64",
        "name": "DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE",
        "desc": ""
      },
      {
        "value": "128",
        "name": "DOTA_ABILITY_BEHAVIOR_CHANNELLED",
        "desc": ""
      },
      {
        "value": "256",
        "name": "DOTA_ABILITY_BEHAVIOR_ITEM",
        "desc": ""
      },
      {
        "value": "512",
        "name": "DOTA_ABILITY_BEHAVIOR_TOGGLE",
        "desc": ""
      },
      {
        "value": "1024",
        "name": "DOTA_ABILITY_BEHAVIOR_DIRECTIONAL",
        "desc": ""
      },
      {
        "value": "2048",
        "name": "DOTA_ABILITY_BEHAVIOR_IMMEDIATE",
        "desc": ""
      },
      {
        "value": "4096",
        "name": "DOTA_ABILITY_BEHAVIOR_AUTOCAST",
        "desc": ""
      },
      {
        "value": "8192",
        "name": "DOTA_ABILITY_BEHAVIOR_OPTIONAL_UNIT_TARGET",
        "desc": ""
      },
      {
        "value": "16384",
        "name": "DOTA_ABILITY_BEHAVIOR_OPTIONAL_POINT",
        "desc": ""
      },
      {
        "value": "32768",
        "name": "DOTA_ABILITY_BEHAVIOR_OPTIONAL_NO_TARGET",
        "desc": ""
      },
      {
        "value": "65536",
        "name": "DOTA_ABILITY_BEHAVIOR_AURA",
        "desc": ""
      },
      {
        "value": "131072",
        "name": "DOTA_ABILITY_BEHAVIOR_ATTACK",
        "desc": ""
      },
      {
        "value": "262144",
        "name": "DOTA_ABILITY_BEHAVIOR_DONT_RESUME_MOVEMENT",
        "desc": ""
      },
      {
        "value": "524288",
        "name": "DOTA_ABILITY_BEHAVIOR_ROOT_DISABLES",
        "desc": ""
      },
      {
        "value": "1048576",
        "name": "DOTA_ABILITY_BEHAVIOR_UNRESTRICTED",
        "desc": ""
      },
      {
        "value": "2097152",
        "name": "DOTA_ABILITY_BEHAVIOR_IGNORE_PSEUDO_QUEUE",
        "desc": ""
      },
      {
        "value": "4194304",
        "name": "DOTA_ABILITY_BEHAVIOR_IGNORE_CHANNEL",
        "desc": ""
      },
      {
        "value": "8388608",
        "name": "DOTA_ABILITY_BEHAVIOR_DONT_CANCEL_MOVEMENT",
        "desc": ""
      },
      {
        "value": "16777216",
        "name": "DOTA_ABILITY_BEHAVIOR_DONT_ALERT_TARGET",
        "desc": ""
      },
      {
        "value": "33554432",
        "name": "DOTA_ABILITY_BEHAVIOR_DONT_RESUME_ATTACK",
        "desc": ""
      },
      {
        "value": "67108864",
        "name": "DOTA_ABILITY_BEHAVIOR_NORMAL_WHEN_STOLEN",
        "desc": ""
      },
      {
        "value": "134217728",
        "name": "DOTA_ABILITY_BEHAVIOR_IGNORE_BACKSWING",
        "desc": ""
      },
      {
        "value": "268435456",
        "name": "DOTA_ABILITY_BEHAVIOR_RUNE_TARGET",
        "desc": ""
      },
      {
        "value": "536870912",
        "name": "DOTA_ABILITY_BEHAVIOR_DONT_CANCEL_CHANNEL",
        "desc": ""
      },
      {
        "value": "1073741824",
        "name": "DOTA_ABILITY_BEHAVIOR_VECTOR_TARGETING",
        "desc": ""
      },
      {
        "value": "2147483648",
        "name": "DOTA_ABILITY_BEHAVIOR_LAST_RESORT_POINT",
        "desc": ""
      },
      {
        "value": "4294967296",
        "name": "DOTA_ABILITY_BEHAVIOR_CAN_SELF_CAST",
        "desc": ""
      },
      {
        "value": "8589934592",
        "name": "DOTA_ABILITY_BEHAVIOR_SHOW_IN_GUIDES",
        "desc": ""
      },
      {
        "value": "17179869184",
        "name": "DOTA_ABILITY_BEHAVIOR_UNLOCKED_BY_EFFECT_INDEX",
        "desc": ""
      },
      {
        "value": "34359738368",
        "name": "DOTA_ABILITY_BEHAVIOR_SUPPRESS_ASSOCIATED_CONSUMABLE",
        "desc": ""
      },
      {
        "value": "68719476736",
        "name": "DOTA_ABILITY_BEHAVIOR_FREE_DRAW_TARGETING",
        "desc": ""
      }
    ],
    "DAMAGE_TYPES": [
      {
        "value": "0",
        "name": "DAMAGE_TYPE_NONE",
        "desc": ""
      },
      {
        "value": "1",
        "name": "DAMAGE_TYPE_PHYSICAL",
        "desc": ""
      },
      {
        "value": "2",
        "name": "DAMAGE_TYPE_MAGICAL",
        "desc": ""
      },
      {
        "value": "4",
        "name": "DAMAGE_TYPE_PURE",
        "desc": ""
      },
      {
        "value": "8",
        "name": "DAMAGE_TYPE_HP_REMOVAL",
        "desc": ""
      },
      {
        "value": "7",
        "name": "DAMAGE_TYPE_ALL",
        "desc": ""
      }
    ],
    "ABILITY_TYPES": [
      {
        "value": "0",
        "name": "ABILITY_TYPE_BASIC",
        "desc": ""
      },
      {
        "value": "1",
        "name": "ABILITY_TYPE_ULTIMATE",
        "desc": ""
      },
      {
        "value": "2",
        "name": "ABILITY_TYPE_ATTRIBUTES",
        "desc": ""
      },
      {
        "value": "3",
        "name": "ABILITY_TYPE_HIDDEN",
        "desc": ""
      }
    ],
    "SPELL_IMMUNITY_TYPES": [
      {
        "value": "0",
        "name": "SPELL_IMMUNITY_NONE",
        "desc": ""
      },
      {
        "value": "1",
        "name": "SPELL_IMMUNITY_ALLIES_YES",
        "desc": ""
      },
      {
        "value": "2",
        "name": "SPELL_IMMUNITY_ALLIES_NO",
        "desc": ""
      },
      {
        "value": "3",
        "name": "SPELL_IMMUNITY_ENEMIES_YES",
        "desc": ""
      },
      {
        "value": "4",
        "name": "SPELL_IMMUNITY_ENEMIES_NO",
        "desc": ""
      },
      {
        "value": "5",
        "name": "SPELL_IMMUNITY_ALLIES_YES_ENEMIES_NO",
        "desc": ""
      }
    ],
    "DOTADamageFlag_t": [
      {
        "value": "0",
        "name": "DOTA_DAMAGE_FLAG_NONE",
        "desc": ""
      },
      {
        "value": "1",
        "name": "DOTA_DAMAGE_FLAG_IGNORES_MAGIC_ARMOR",
        "desc": ""
      },
      {
        "value": "2",
        "name": "DOTA_DAMAGE_FLAG_IGNORES_PHYSICAL_ARMOR",
        "desc": ""
      },
      {
        "value": "4",
        "name": "DOTA_DAMAGE_FLAG_BYPASSES_INVULNERABILITY",
        "desc": ""
      },
      {
        "value": "8",
        "name": "DOTA_DAMAGE_FLAG_BYPASSES_BLOCK",
        "desc": ""
      },
      {
        "value": "16",
        "name": "DOTA_DAMAGE_FLAG_REFLECTION",
        "desc": ""
      },
      {
        "value": "32",
        "name": "DOTA_DAMAGE_FLAG_HPLOSS",
        "desc": ""
      },
      {
        "value": "64",
        "name": "DOTA_DAMAGE_FLAG_NO_DIRECTOR_EVENT",
        "desc": ""
      },
      {
        "value": "128",
        "name": "DOTA_DAMAGE_FLAG_NON_LETHAL",
        "desc": ""
      },
      {
        "value": "256",
        "name": "DOTA_DAMAGE_FLAG_USE_COMBAT_PROFICIENCY",
        "desc": ""
      },
      {
        "value": "512",
        "name": "DOTA_DAMAGE_FLAG_NO_DAMAGE_MULTIPLIERS",
        "desc": ""
      },
      {
        "value": "1024",
        "name": "DOTA_DAMAGE_FLAG_NO_SPELL_AMPLIFICATION",
        "desc": ""
      },
      {
        "value": "2048",
        "name": "DOTA_DAMAGE_FLAG_DONT_DISPLAY_DAMAGE_IF_SOURCE_HIDDEN",
        "desc": ""
      },
      {
        "value": "4096",
        "name": "DOTA_DAMAGE_FLAG_NO_SPELL_LIFESTEAL",
        "desc": ""
      },
      {
        "value": "8192",
        "name": "DOTA_DAMAGE_FLAG_PROPERTY_FIRE",
        "desc": ""
      },
      {
        "value": "16384",
        "name": "DOTA_DAMAGE_FLAG_IGNORES_BASE_PHYSICAL_ARMOR",
        "desc": ""
      }
    ],
    "EDOTA_ModifyXP_Reason": [
      {
        "value": "0",
        "name": "DOTA_ModifyXP_Unspecified",
        "desc": ""
      },
      {
        "value": "1",
        "name": "DOTA_ModifyXP_HeroKill",
        "desc": ""
      },
      {
        "value": "2",
        "name": "DOTA_ModifyXP_CreepKill",
        "desc": ""
      },
      {
        "value": "3",
        "name": "DOTA_ModifyXP_RoshanKill",
        "desc": ""
      },
      {
        "value": "4",
        "name": "DOTA_ModifyXP_TomeOfKnowledge",
        "desc": ""
      },
      {
        "value": "5",
        "name": "DOTA_ModifyXP_Outpost",
        "desc": ""
      },
      {
        "value": "6",
        "name": "DOTA_ModifyXP_MAX",
        "desc": ""
      }
    ],
    "GameActivity_t": [
      {
        "value": "1500",
        "name": "ACT_DOTA_IDLE",
        "desc": ""
      },
      {
        "value": "1501",
        "name": "ACT_DOTA_IDLE_RARE",
        "desc": ""
      },
      {
        "value": "1502",
        "name": "ACT_DOTA_RUN",
        "desc": ""
      },
      {
        "value": "1503",
        "name": "ACT_DOTA_ATTACK",
        "desc": ""
      },
      {
        "value": "1504",
        "name": "ACT_DOTA_ATTACK2",
        "desc": ""
      },
      {
        "value": "1505",
        "name": "ACT_DOTA_ATTACK_EVENT",
        "desc": ""
      },
      {
        "value": "1506",
        "name": "ACT_DOTA_DIE",
        "desc": ""
      },
      {
        "value": "1507",
        "name": "ACT_DOTA_FLINCH",
        "desc": ""
      },
      {
        "value": "1508",
        "name": "ACT_DOTA_FLAIL",
        "desc": ""
      },
      {
        "value": "1509",
        "name": "ACT_DOTA_DISABLED",
        "desc": ""
      },
      {
        "value": "1510",
        "name": "ACT_DOTA_CAST_ABILITY_1",
        "desc": ""
      },
      {
        "value": "1511",
        "name": "ACT_DOTA_CAST_ABILITY_2",
        "desc": ""
      },
      {
        "value": "1512",
        "name": "ACT_DOTA_CAST_ABILITY_3",
        "desc": ""
      },
      {
        "value": "1513",
        "name": "ACT_DOTA_CAST_ABILITY_4",
        "desc": ""
      },
      {
        "value": "1514",
        "name": "ACT_DOTA_CAST_ABILITY_5",
        "desc": ""
      },
      {
        "value": "1515",
        "name": "ACT_DOTA_CAST_ABILITY_6",
        "desc": ""
      },
      {
        "value": "1516",
        "name": "ACT_DOTA_OVERRIDE_ABILITY_1",
        "desc": ""
      },
      {
        "value": "1517",
        "name": "ACT_DOTA_OVERRIDE_ABILITY_2",
        "desc": ""
      },
      {
        "value": "1518",
        "name": "ACT_DOTA_OVERRIDE_ABILITY_3",
        "desc": ""
      },
      {
        "value": "1519",
        "name": "ACT_DOTA_OVERRIDE_ABILITY_4",
        "desc": ""
      },
      {
        "value": "1520",
        "name": "ACT_DOTA_CHANNEL_ABILITY_1",
        "desc": ""
      },
      {
        "value": "1521",
        "name": "ACT_DOTA_CHANNEL_ABILITY_2",
        "desc": ""
      },
      {
        "value": "1522",
        "name": "ACT_DOTA_CHANNEL_ABILITY_3",
        "desc": ""
      },
      {
        "value": "1523",
        "name": "ACT_DOTA_CHANNEL_ABILITY_4",
        "desc": ""
      },
      {
        "value": "1524",
        "name": "ACT_DOTA_CHANNEL_ABILITY_5",
        "desc": ""
      },
      {
        "value": "1525",
        "name": "ACT_DOTA_CHANNEL_ABILITY_6",
        "desc": ""
      },
      {
        "value": "1526",
        "name": "ACT_DOTA_CHANNEL_END_ABILITY_1",
        "desc": ""
      },
      {
        "value": "1527",
        "name": "ACT_DOTA_CHANNEL_END_ABILITY_2",
        "desc": ""
      },
      {
        "value": "1528",
        "name": "ACT_DOTA_CHANNEL_END_ABILITY_3",
        "desc": ""
      },
      {
        "value": "1529",
        "name": "ACT_DOTA_CHANNEL_END_ABILITY_4",
        "desc": ""
      },
      {
        "value": "1530",
        "name": "ACT_DOTA_CHANNEL_END_ABILITY_5",
        "desc": ""
      },
      {
        "value": "1531",
        "name": "ACT_DOTA_CHANNEL_END_ABILITY_6",
        "desc": ""
      },
      {
        "value": "1532",
        "name": "ACT_DOTA_CONSTANT_LAYER",
        "desc": ""
      },
      {
        "value": "1533",
        "name": "ACT_DOTA_CAPTURE",
        "desc": ""
      },
      {
        "value": "1534",
        "name": "ACT_DOTA_SPAWN",
        "desc": ""
      },
      {
        "value": "1535",
        "name": "ACT_DOTA_KILLTAUNT",
        "desc": ""
      },
      {
        "value": "1536",
        "name": "ACT_DOTA_TAUNT",
        "desc": ""
      },
      {
        "value": "1537",
        "name": "ACT_DOTA_THIRST",
        "desc": ""
      },
      {
        "value": "1538",
        "name": "ACT_DOTA_CAST_DRAGONBREATH",
        "desc": ""
      },
      {
        "value": "1539",
        "name": "ACT_DOTA_ECHO_SLAM",
        "desc": ""
      },
      {
        "value": "1540",
        "name": "ACT_DOTA_CAST_ABILITY_1_END",
        "desc": ""
      },
      {
        "value": "1541",
        "name": "ACT_DOTA_CAST_ABILITY_2_END",
        "desc": ""
      },
      {
        "value": "1542",
        "name": "ACT_DOTA_CAST_ABILITY_3_END",
        "desc": ""
      },
      {
        "value": "1543",
        "name": "ACT_DOTA_CAST_ABILITY_4_END",
        "desc": ""
      },
      {
        "value": "1544",
        "name": "ACT_MIRANA_LEAP_END",
        "desc": ""
      },
      {
        "value": "1545",
        "name": "ACT_WAVEFORM_START",
        "desc": ""
      },
      {
        "value": "1546",
        "name": "ACT_WAVEFORM_END",
        "desc": ""
      },
      {
        "value": "1547",
        "name": "ACT_DOTA_CAST_ABILITY_ROT",
        "desc": ""
      },
      {
        "value": "1548",
        "name": "ACT_DOTA_DIE_SPECIAL",
        "desc": ""
      },
      {
        "value": "1549",
        "name": "ACT_DOTA_RATTLETRAP_BATTERYASSAULT",
        "desc": ""
      },
      {
        "value": "1550",
        "name": "ACT_DOTA_RATTLETRAP_POWERCOGS",
        "desc": ""
      },
      {
        "value": "1551",
        "name": "ACT_DOTA_RATTLETRAP_HOOKSHOT_START",
        "desc": ""
      },
      {
        "value": "1552",
        "name": "ACT_DOTA_RATTLETRAP_HOOKSHOT_LOOP",
        "desc": ""
      },
      {
        "value": "1553",
        "name": "ACT_DOTA_RATTLETRAP_HOOKSHOT_END",
        "desc": ""
      },
      {
        "value": "1554",
        "name": "ACT_STORM_SPIRIT_OVERLOAD_RUN_OVERRIDE",
        "desc": ""
      },
      {
        "value": "1555",
        "name": "ACT_DOTA_TINKER_REARM1",
        "desc": ""
      },
      {
        "value": "1556",
        "name": "ACT_DOTA_TINKER_REARM2",
        "desc": ""
      },
      {
        "value": "1557",
        "name": "ACT_DOTA_TINKER_REARM3",
        "desc": ""
      },
      {
        "value": "1558",
        "name": "ACT_TINY_AVALANCHE",
        "desc": ""
      },
      {
        "value": "1559",
        "name": "ACT_TINY_TOSS",
        "desc": ""
      },
      {
        "value": "1560",
        "name": "ACT_TINY_GROWL",
        "desc": ""
      },
      {
        "value": "1561",
        "name": "ACT_DOTA_WEAVERBUG_ATTACH",
        "desc": ""
      },
      {
        "value": "1562",
        "name": "ACT_DOTA_CAST_WILD_AXES_END",
        "desc": ""
      },
      {
        "value": "1563",
        "name": "ACT_DOTA_CAST_LIFE_BREAK_START",
        "desc": ""
      },
      {
        "value": "1564",
        "name": "ACT_DOTA_CAST_LIFE_BREAK_END",
        "desc": ""
      },
      {
        "value": "1565",
        "name": "ACT_DOTA_NIGHTSTALKER_TRANSITION",
        "desc": ""
      },
      {
        "value": "1566",
        "name": "ACT_DOTA_LIFESTEALER_RAGE",
        "desc": ""
      },
      {
        "value": "1567",
        "name": "ACT_DOTA_LIFESTEALER_OPEN_WOUNDS",
        "desc": ""
      },
      {
        "value": "1568",
        "name": "ACT_DOTA_SAND_KING_BURROW_IN",
        "desc": ""
      },
      {
        "value": "1569",
        "name": "ACT_DOTA_SAND_KING_BURROW_OUT",
        "desc": ""
      },
      {
        "value": "1570",
        "name": "ACT_DOTA_EARTHSHAKER_TOTEM_ATTACK",
        "desc": ""
      },
      {
        "value": "1571",
        "name": "ACT_DOTA_WHEEL_LAYER",
        "desc": ""
      },
      {
        "value": "1572",
        "name": "ACT_DOTA_ALCHEMIST_CHEMICAL_RAGE_START",
        "desc": ""
      },
      {
        "value": "1573",
        "name": "ACT_DOTA_ALCHEMIST_CONCOCTION",
        "desc": ""
      },
      {
        "value": "1574",
        "name": "ACT_DOTA_JAKIRO_LIQUIDFIRE_START",
        "desc": ""
      },
      {
        "value": "1575",
        "name": "ACT_DOTA_JAKIRO_LIQUIDFIRE_LOOP",
        "desc": ""
      },
      {
        "value": "1576",
        "name": "ACT_DOTA_LIFESTEALER_INFEST",
        "desc": ""
      },
      {
        "value": "1577",
        "name": "ACT_DOTA_LIFESTEALER_INFEST_END",
        "desc": ""
      },
      {
        "value": "1578",
        "name": "ACT_DOTA_LASSO_LOOP",
        "desc": ""
      },
      {
        "value": "1579",
        "name": "ACT_DOTA_ALCHEMIST_CONCOCTION_THROW",
        "desc": ""
      },
      {
        "value": "1580",
        "name": "ACT_DOTA_ALCHEMIST_CHEMICAL_RAGE_END",
        "desc": ""
      },
      {
        "value": "1581",
        "name": "ACT_DOTA_CAST_COLD_SNAP",
        "desc": ""
      },
      {
        "value": "1582",
        "name": "ACT_DOTA_CAST_GHOST_WALK",
        "desc": ""
      },
      {
        "value": "1583",
        "name": "ACT_DOTA_CAST_TORNADO",
        "desc": ""
      },
      {
        "value": "1584",
        "name": "ACT_DOTA_CAST_EMP",
        "desc": ""
      },
      {
        "value": "1585",
        "name": "ACT_DOTA_CAST_ALACRITY",
        "desc": ""
      },
      {
        "value": "1586",
        "name": "ACT_DOTA_CAST_CHAOS_METEOR",
        "desc": ""
      },
      {
        "value": "1587",
        "name": "ACT_DOTA_CAST_SUN_STRIKE",
        "desc": ""
      },
      {
        "value": "1588",
        "name": "ACT_DOTA_CAST_FORGE_SPIRIT",
        "desc": ""
      },
      {
        "value": "1589",
        "name": "ACT_DOTA_CAST_ICE_WALL",
        "desc": ""
      },
      {
        "value": "1590",
        "name": "ACT_DOTA_CAST_DEAFENING_BLAST",
        "desc": ""
      },
      {
        "value": "1591",
        "name": "ACT_DOTA_VICTORY",
        "desc": ""
      },
      {
        "value": "1592",
        "name": "ACT_DOTA_DEFEAT",
        "desc": ""
      },
      {
        "value": "1593",
        "name": "ACT_DOTA_SPIRIT_BREAKER_CHARGE_POSE",
        "desc": ""
      },
      {
        "value": "1594",
        "name": "ACT_DOTA_SPIRIT_BREAKER_CHARGE_END",
        "desc": ""
      },
      {
        "value": "1595",
        "name": "ACT_DOTA_TELEPORT",
        "desc": ""
      },
      {
        "value": "1596",
        "name": "ACT_DOTA_TELEPORT_END",
        "desc": ""
      },
      {
        "value": "1597",
        "name": "ACT_DOTA_CAST_REFRACTION",
        "desc": ""
      },
      {
        "value": "1598",
        "name": "ACT_DOTA_CAST_ABILITY_7",
        "desc": ""
      },
      {
        "value": "1599",
        "name": "ACT_DOTA_CANCEL_SIREN_SONG",
        "desc": ""
      },
      {
        "value": "1600",
        "name": "ACT_DOTA_CHANNEL_ABILITY_7",
        "desc": ""
      },
      {
        "value": "1601",
        "name": "ACT_DOTA_LOADOUT",
        "desc": ""
      },
      {
        "value": "1602",
        "name": "ACT_DOTA_FORCESTAFF_END",
        "desc": ""
      },
      {
        "value": "1603",
        "name": "ACT_DOTA_POOF_END",
        "desc": ""
      },
      {
        "value": "1604",
        "name": "ACT_DOTA_SLARK_POUNCE",
        "desc": ""
      },
      {
        "value": "1605",
        "name": "ACT_DOTA_MAGNUS_SKEWER_START",
        "desc": ""
      },
      {
        "value": "1606",
        "name": "ACT_DOTA_MAGNUS_SKEWER_END",
        "desc": ""
      },
      {
        "value": "1607",
        "name": "ACT_DOTA_MEDUSA_STONE_GAZE",
        "desc": ""
      },
      {
        "value": "1608",
        "name": "ACT_DOTA_RELAX_START",
        "desc": ""
      },
      {
        "value": "1609",
        "name": "ACT_DOTA_RELAX_LOOP",
        "desc": ""
      },
      {
        "value": "1610",
        "name": "ACT_DOTA_RELAX_END",
        "desc": ""
      },
      {
        "value": "1611",
        "name": "ACT_DOTA_CENTAUR_STAMPEDE",
        "desc": ""
      },
      {
        "value": "1612",
        "name": "ACT_DOTA_BELLYACHE_START",
        "desc": ""
      },
      {
        "value": "1613",
        "name": "ACT_DOTA_BELLYACHE_LOOP",
        "desc": ""
      },
      {
        "value": "1614",
        "name": "ACT_DOTA_BELLYACHE_END",
        "desc": ""
      },
      {
        "value": "1615",
        "name": "ACT_DOTA_ROQUELAIRE_LAND",
        "desc": ""
      },
      {
        "value": "1616",
        "name": "ACT_DOTA_ROQUELAIRE_LAND_IDLE",
        "desc": ""
      },
      {
        "value": "1617",
        "name": "ACT_DOTA_GREEVIL_CAST",
        "desc": ""
      },
      {
        "value": "1618",
        "name": "ACT_DOTA_GREEVIL_OVERRIDE_ABILITY",
        "desc": ""
      },
      {
        "value": "1619",
        "name": "ACT_DOTA_GREEVIL_HOOK_START",
        "desc": ""
      },
      {
        "value": "1620",
        "name": "ACT_DOTA_GREEVIL_HOOK_END",
        "desc": ""
      },
      {
        "value": "1621",
        "name": "ACT_DOTA_GREEVIL_BLINK_BONE",
        "desc": ""
      },
      {
        "value": "1622",
        "name": "ACT_DOTA_IDLE_SLEEPING",
        "desc": ""
      },
      {
        "value": "1623",
        "name": "ACT_DOTA_INTRO",
        "desc": ""
      },
      {
        "value": "1624",
        "name": "ACT_DOTA_GESTURE_POINT",
        "desc": ""
      },
      {
        "value": "1625",
        "name": "ACT_DOTA_GESTURE_ACCENT",
        "desc": ""
      },
      {
        "value": "1626",
        "name": "ACT_DOTA_SLEEPING_END",
        "desc": ""
      },
      {
        "value": "1627",
        "name": "ACT_DOTA_AMBUSH",
        "desc": ""
      },
      {
        "value": "1628",
        "name": "ACT_DOTA_ITEM_LOOK",
        "desc": ""
      },
      {
        "value": "1629",
        "name": "ACT_DOTA_STARTLE",
        "desc": ""
      },
      {
        "value": "1630",
        "name": "ACT_DOTA_FRUSTRATION",
        "desc": ""
      },
      {
        "value": "1631",
        "name": "ACT_DOTA_TELEPORT_REACT",
        "desc": ""
      },
      {
        "value": "1632",
        "name": "ACT_DOTA_TELEPORT_END_REACT",
        "desc": ""
      },
      {
        "value": "1633",
        "name": "ACT_DOTA_SHRUG",
        "desc": ""
      },
      {
        "value": "1634",
        "name": "ACT_DOTA_RELAX_LOOP_END",
        "desc": ""
      },
      {
        "value": "1635",
        "name": "ACT_DOTA_PRESENT_ITEM",
        "desc": ""
      },
      {
        "value": "1636",
        "name": "ACT_DOTA_IDLE_IMPATIENT",
        "desc": ""
      },
      {
        "value": "1637",
        "name": "ACT_DOTA_SHARPEN_WEAPON",
        "desc": ""
      },
      {
        "value": "1638",
        "name": "ACT_DOTA_SHARPEN_WEAPON_OUT",
        "desc": ""
      },
      {
        "value": "1639",
        "name": "ACT_DOTA_IDLE_SLEEPING_END",
        "desc": ""
      },
      {
        "value": "1640",
        "name": "ACT_DOTA_BRIDGE_DESTROY",
        "desc": ""
      },
      {
        "value": "1641",
        "name": "ACT_DOTA_TAUNT_SNIPER",
        "desc": ""
      },
      {
        "value": "1642",
        "name": "ACT_DOTA_DEATH_BY_SNIPER",
        "desc": ""
      },
      {
        "value": "1643",
        "name": "ACT_DOTA_LOOK_AROUND",
        "desc": ""
      },
      {
        "value": "1644",
        "name": "ACT_DOTA_CAGED_CREEP_RAGE",
        "desc": ""
      },
      {
        "value": "1645",
        "name": "ACT_DOTA_CAGED_CREEP_RAGE_OUT",
        "desc": ""
      },
      {
        "value": "1646",
        "name": "ACT_DOTA_CAGED_CREEP_SMASH",
        "desc": ""
      },
      {
        "value": "1647",
        "name": "ACT_DOTA_CAGED_CREEP_SMASH_OUT",
        "desc": ""
      },
      {
        "value": "1648",
        "name": "ACT_DOTA_IDLE_IMPATIENT_SWORD_TAP",
        "desc": ""
      },
      {
        "value": "1649",
        "name": "ACT_DOTA_INTRO_LOOP",
        "desc": ""
      },
      {
        "value": "1650",
        "name": "ACT_DOTA_BRIDGE_THREAT",
        "desc": ""
      },
      {
        "value": "1651",
        "name": "ACT_DOTA_DAGON",
        "desc": ""
      },
      {
        "value": "1652",
        "name": "ACT_DOTA_CAST_ABILITY_2_ES_ROLL_START",
        "desc": ""
      },
      {
        "value": "1653",
        "name": "ACT_DOTA_CAST_ABILITY_2_ES_ROLL",
        "desc": ""
      },
      {
        "value": "1654",
        "name": "ACT_DOTA_CAST_ABILITY_2_ES_ROLL_END",
        "desc": ""
      },
      {
        "value": "1655",
        "name": "ACT_DOTA_NIAN_PIN_START",
        "desc": ""
      },
      {
        "value": "1656",
        "name": "ACT_DOTA_NIAN_PIN_LOOP",
        "desc": ""
      },
      {
        "value": "1657",
        "name": "ACT_DOTA_NIAN_PIN_END",
        "desc": ""
      },
      {
        "value": "1658",
        "name": "ACT_DOTA_LEAP_STUN",
        "desc": ""
      },
      {
        "value": "1659",
        "name": "ACT_DOTA_LEAP_SWIPE",
        "desc": ""
      },
      {
        "value": "1660",
        "name": "ACT_DOTA_NIAN_INTRO_LEAP",
        "desc": ""
      },
      {
        "value": "1661",
        "name": "ACT_DOTA_AREA_DENY",
        "desc": ""
      },
      {
        "value": "1662",
        "name": "ACT_DOTA_NIAN_PIN_TO_STUN",
        "desc": ""
      },
      {
        "value": "1663",
        "name": "ACT_DOTA_RAZE_1",
        "desc": ""
      },
      {
        "value": "1664",
        "name": "ACT_DOTA_RAZE_2",
        "desc": ""
      },
      {
        "value": "1665",
        "name": "ACT_DOTA_RAZE_3",
        "desc": ""
      },
      {
        "value": "1666",
        "name": "ACT_DOTA_UNDYING_DECAY",
        "desc": ""
      },
      {
        "value": "1667",
        "name": "ACT_DOTA_UNDYING_SOUL_RIP",
        "desc": ""
      },
      {
        "value": "1668",
        "name": "ACT_DOTA_UNDYING_TOMBSTONE",
        "desc": ""
      },
      {
        "value": "1669",
        "name": "ACT_DOTA_WHIRLING_AXES_RANGED",
        "desc": ""
      },
      {
        "value": "1670",
        "name": "ACT_DOTA_SHALLOW_GRAVE",
        "desc": ""
      },
      {
        "value": "1671",
        "name": "ACT_DOTA_COLD_FEET",
        "desc": ""
      },
      {
        "value": "1672",
        "name": "ACT_DOTA_ICE_VORTEX",
        "desc": ""
      },
      {
        "value": "1673",
        "name": "ACT_DOTA_CHILLING_TOUCH",
        "desc": ""
      },
      {
        "value": "1674",
        "name": "ACT_DOTA_ENFEEBLE",
        "desc": ""
      },
      {
        "value": "1675",
        "name": "ACT_DOTA_FATAL_BONDS",
        "desc": ""
      },
      {
        "value": "1676",
        "name": "ACT_DOTA_MIDNIGHT_PULSE",
        "desc": ""
      },
      {
        "value": "1677",
        "name": "ACT_DOTA_ANCESTRAL_SPIRIT",
        "desc": ""
      },
      {
        "value": "1678",
        "name": "ACT_DOTA_THUNDER_STRIKE",
        "desc": ""
      },
      {
        "value": "1679",
        "name": "ACT_DOTA_KINETIC_FIELD",
        "desc": ""
      },
      {
        "value": "1680",
        "name": "ACT_DOTA_STATIC_STORM",
        "desc": ""
      },
      {
        "value": "1681",
        "name": "ACT_DOTA_MINI_TAUNT",
        "desc": ""
      },
      {
        "value": "1682",
        "name": "ACT_DOTA_ARCTIC_BURN_END",
        "desc": ""
      },
      {
        "value": "1683",
        "name": "ACT_DOTA_LOADOUT_RARE",
        "desc": ""
      },
      {
        "value": "1684",
        "name": "ACT_DOTA_SWIM",
        "desc": ""
      },
      {
        "value": "1685",
        "name": "ACT_DOTA_FLEE",
        "desc": ""
      },
      {
        "value": "1686",
        "name": "ACT_DOTA_TROT",
        "desc": ""
      },
      {
        "value": "1687",
        "name": "ACT_DOTA_SHAKE",
        "desc": ""
      },
      {
        "value": "1688",
        "name": "ACT_DOTA_SWIM_IDLE",
        "desc": ""
      },
      {
        "value": "1689",
        "name": "ACT_DOTA_WAIT_IDLE",
        "desc": ""
      },
      {
        "value": "1690",
        "name": "ACT_DOTA_GREET",
        "desc": ""
      },
      {
        "value": "1691",
        "name": "ACT_DOTA_TELEPORT_COOP_START",
        "desc": ""
      },
      {
        "value": "1692",
        "name": "ACT_DOTA_TELEPORT_COOP_WAIT",
        "desc": ""
      },
      {
        "value": "1693",
        "name": "ACT_DOTA_TELEPORT_COOP_END",
        "desc": ""
      },
      {
        "value": "1694",
        "name": "ACT_DOTA_TELEPORT_COOP_EXIT",
        "desc": ""
      },
      {
        "value": "1695",
        "name": "ACT_DOTA_SHOPKEEPER_PET_INTERACT",
        "desc": ""
      },
      {
        "value": "1696",
        "name": "ACT_DOTA_ITEM_PICKUP",
        "desc": ""
      },
      {
        "value": "1697",
        "name": "ACT_DOTA_ITEM_DROP",
        "desc": ""
      },
      {
        "value": "1698",
        "name": "ACT_DOTA_CAPTURE_PET",
        "desc": ""
      },
      {
        "value": "1699",
        "name": "ACT_DOTA_PET_WARD_OBSERVER",
        "desc": ""
      },
      {
        "value": "1700",
        "name": "ACT_DOTA_PET_WARD_SENTRY",
        "desc": ""
      },
      {
        "value": "1701",
        "name": "ACT_DOTA_PET_LEVEL",
        "desc": ""
      },
      {
        "value": "1702",
        "name": "ACT_DOTA_CAST_BURROW_END",
        "desc": ""
      },
      {
        "value": "1703",
        "name": "ACT_DOTA_LIFESTEALER_ASSIMILATE",
        "desc": ""
      },
      {
        "value": "1704",
        "name": "ACT_DOTA_LIFESTEALER_EJECT",
        "desc": ""
      },
      {
        "value": "1705",
        "name": "ACT_DOTA_ATTACK_EVENT_BASH",
        "desc": ""
      },
      {
        "value": "1706",
        "name": "ACT_DOTA_CAPTURE_RARE",
        "desc": ""
      },
      {
        "value": "1707",
        "name": "ACT_DOTA_AW_MAGNETIC_FIELD",
        "desc": ""
      },
      {
        "value": "1708",
        "name": "ACT_DOTA_CAST_GHOST_SHIP",
        "desc": ""
      },
      {
        "value": "1709",
        "name": "ACT_DOTA_FXANIM",
        "desc": ""
      },
      {
        "value": "1710",
        "name": "ACT_DOTA_VICTORY_START",
        "desc": ""
      },
      {
        "value": "1711",
        "name": "ACT_DOTA_DEFEAT_START",
        "desc": ""
      },
      {
        "value": "1712",
        "name": "ACT_DOTA_DP_SPIRIT_SIPHON",
        "desc": ""
      },
      {
        "value": "1713",
        "name": "ACT_DOTA_TRICKS_END",
        "desc": ""
      },
      {
        "value": "1714",
        "name": "ACT_DOTA_ES_STONE_CALLER",
        "desc": ""
      },
      {
        "value": "1715",
        "name": "ACT_DOTA_MK_STRIKE",
        "desc": ""
      },
      {
        "value": "1716",
        "name": "ACT_DOTA_VERSUS",
        "desc": ""
      },
      {
        "value": "1717",
        "name": "ACT_DOTA_CAPTURE_CARD",
        "desc": ""
      },
      {
        "value": "1718",
        "name": "ACT_DOTA_MK_SPRING_SOAR",
        "desc": ""
      },
      {
        "value": "1719",
        "name": "ACT_DOTA_MK_SPRING_END",
        "desc": ""
      },
      {
        "value": "1720",
        "name": "ACT_DOTA_MK_TREE_SOAR",
        "desc": ""
      },
      {
        "value": "1721",
        "name": "ACT_DOTA_MK_TREE_END",
        "desc": ""
      },
      {
        "value": "1722",
        "name": "ACT_DOTA_MK_FUR_ARMY",
        "desc": ""
      },
      {
        "value": "1723",
        "name": "ACT_DOTA_MK_SPRING_CAST",
        "desc": ""
      },
      {
        "value": "1724",
        "name": "ACT_DOTA_NECRO_GHOST_SHROUD",
        "desc": ""
      },
      {
        "value": "1725",
        "name": "ACT_DOTA_OVERRIDE_ARCANA",
        "desc": ""
      },
      {
        "value": "1726",
        "name": "ACT_DOTA_SLIDE",
        "desc": ""
      },
      {
        "value": "1727",
        "name": "ACT_DOTA_SLIDE_LOOP",
        "desc": ""
      },
      {
        "value": "1728",
        "name": "ACT_DOTA_GENERIC_CHANNEL_1",
        "desc": ""
      },
      {
        "value": "1729",
        "name": "ACT_DOTA_GS_SOUL_CHAIN",
        "desc": ""
      },
      {
        "value": "1730",
        "name": "ACT_DOTA_GS_INK_CREATURE",
        "desc": ""
      },
      {
        "value": "1731",
        "name": "ACT_DOTA_TRANSITION",
        "desc": ""
      },
      {
        "value": "1732",
        "name": "ACT_DOTA_BLINK_DAGGER",
        "desc": ""
      },
      {
        "value": "1733",
        "name": "ACT_DOTA_BLINK_DAGGER_END",
        "desc": ""
      },
      {
        "value": "1734",
        "name": "ACT_DOTA_CUSTOM_TOWER_ATTACK",
        "desc": ""
      },
      {
        "value": "1735",
        "name": "ACT_DOTA_CUSTOM_TOWER_IDLE",
        "desc": ""
      },
      {
        "value": "1736",
        "name": "ACT_DOTA_CUSTOM_TOWER_DIE",
        "desc": ""
      },
      {
        "value": "1737",
        "name": "ACT_DOTA_CAST_COLD_SNAP_ORB",
        "desc": ""
      },
      {
        "value": "1738",
        "name": "ACT_DOTA_CAST_GHOST_WALK_ORB",
        "desc": ""
      },
      {
        "value": "1739",
        "name": "ACT_DOTA_CAST_TORNADO_ORB",
        "desc": ""
      },
      {
        "value": "1740",
        "name": "ACT_DOTA_CAST_EMP_ORB",
        "desc": ""
      },
      {
        "value": "1741",
        "name": "ACT_DOTA_CAST_ALACRITY_ORB",
        "desc": ""
      },
      {
        "value": "1742",
        "name": "ACT_DOTA_CAST_CHAOS_METEOR_ORB",
        "desc": ""
      },
      {
        "value": "1743",
        "name": "ACT_DOTA_CAST_SUN_STRIKE_ORB",
        "desc": ""
      },
      {
        "value": "1744",
        "name": "ACT_DOTA_CAST_FORGE_SPIRIT_ORB",
        "desc": ""
      },
      {
        "value": "1745",
        "name": "ACT_DOTA_CAST_ICE_WALL_ORB",
        "desc": ""
      },
      {
        "value": "1746",
        "name": "ACT_DOTA_CAST_DEAFENING_BLAST_ORB",
        "desc": ""
      },
      {
        "value": "1747",
        "name": "ACT_DOTA_NOTICE",
        "desc": ""
      },
      {
        "value": "1748",
        "name": "ACT_DOTA_CAST_ABILITY_2_ALLY",
        "desc": ""
      },
      {
        "value": "1749",
        "name": "ACT_DOTA_SHUFFLE_L",
        "desc": ""
      },
      {
        "value": "1750",
        "name": "ACT_DOTA_SHUFFLE_R",
        "desc": ""
      },
      {
        "value": "1751",
        "name": "ACT_DOTA_OVERRIDE_LOADOUT",
        "desc": ""
      },
      {
        "value": "1752",
        "name": "ACT_DOTA_TAUNT_SPECIAL",
        "desc": ""
      }
    ],
    "DOTAMinimapEvent_t": [
      {
        "value": "2",
        "name": "DOTA_MINIMAP_EVENT_ANCIENT_UNDER_ATTACK",
        "desc": ""
      },
      {
        "value": "4",
        "name": "DOTA_MINIMAP_EVENT_BASE_UNDER_ATTACK",
        "desc": ""
      },
      {
        "value": "8",
        "name": "DOTA_MINIMAP_EVENT_BASE_GLYPHED",
        "desc": ""
      },
      {
        "value": "16",
        "name": "DOTA_MINIMAP_EVENT_TEAMMATE_UNDER_ATTACK",
        "desc": ""
      },
      {
        "value": "32",
        "name": "DOTA_MINIMAP_EVENT_TEAMMATE_TELEPORTING",
        "desc": ""
      },
      {
        "value": "64",
        "name": "DOTA_MINIMAP_EVENT_TEAMMATE_DIED",
        "desc": ""
      },
      {
        "value": "128",
        "name": "DOTA_MINIMAP_EVENT_TUTORIAL_TASK_ACTIVE",
        "desc": ""
      },
      {
        "value": "256",
        "name": "DOTA_MINIMAP_EVENT_TUTORIAL_TASK_FINISHED",
        "desc": ""
      },
      {
        "value": "512",
        "name": "DOTA_MINIMAP_EVENT_HINT_LOCATION",
        "desc": ""
      },
      {
        "value": "1024",
        "name": "DOTA_MINIMAP_EVENT_ENEMY_TELEPORTING",
        "desc": ""
      },
      {
        "value": "2048",
        "name": "DOTA_MINIMAP_EVENT_CANCEL_TELEPORTING",
        "desc": ""
      },
      {
        "value": "4096",
        "name": "DOTA_MINIMAP_EVENT_RADAR",
        "desc": ""
      },
      {
        "value": "8192",
        "name": "DOTA_MINIMAP_EVENT_RADAR_TARGET",
        "desc": ""
      },
      {
        "value": "16384",
        "name": "DOTA_MINIMAP_EVENT_MOVE_TO_TARGET",
        "desc": ""
      }
    ],
    "DOTASlotType_t": [
      {
        "value": "-1",
        "name": "DOTA_LOADOUT_TYPE_INVALID",
        "desc": ""
      },
      {
        "value": "0",
        "name": "DOTA_LOADOUT_TYPE_WEAPON",
        "desc": ""
      },
      {
        "value": "1",
        "name": "DOTA_LOADOUT_TYPE_OFFHAND_WEAPON",
        "desc": ""
      },
      {
        "value": "2",
        "name": "DOTA_LOADOUT_TYPE_WEAPON2",
        "desc": ""
      },
      {
        "value": "3",
        "name": "DOTA_LOADOUT_TYPE_OFFHAND_WEAPON2",
        "desc": ""
      },
      {
        "value": "4",
        "name": "DOTA_LOADOUT_TYPE_HEAD",
        "desc": ""
      },
      {
        "value": "5",
        "name": "DOTA_LOADOUT_TYPE_SHOULDER",
        "desc": ""
      },
      {
        "value": "6",
        "name": "DOTA_LOADOUT_TYPE_ARMS",
        "desc": ""
      },
      {
        "value": "7",
        "name": "DOTA_LOADOUT_TYPE_ARMOR",
        "desc": ""
      },
      {
        "value": "8",
        "name": "DOTA_LOADOUT_TYPE_BELT",
        "desc": ""
      },
      {
        "value": "9",
        "name": "DOTA_LOADOUT_TYPE_NECK",
        "desc": ""
      },
      {
        "value": "10",
        "name": "DOTA_LOADOUT_TYPE_BACK",
        "desc": ""
      },
      {
        "value": "11",
        "name": "DOTA_LOADOUT_TYPE_LEGS",
        "desc": ""
      },
      {
        "value": "12",
        "name": "DOTA_LOADOUT_TYPE_GLOVES",
        "desc": ""
      },
      {
        "value": "13",
        "name": "DOTA_LOADOUT_TYPE_TAIL",
        "desc": ""
      },
      {
        "value": "14",
        "name": "DOTA_LOADOUT_TYPE_MISC",
        "desc": ""
      },
      {
        "value": "15",
        "name": "DOTA_LOADOUT_TYPE_BODY_HEAD",
        "desc": ""
      },
      {
        "value": "16",
        "name": "DOTA_LOADOUT_TYPE_MOUNT",
        "desc": ""
      },
      {
        "value": "17",
        "name": "DOTA_LOADOUT_TYPE_SUMMON",
        "desc": ""
      },
      {
        "value": "18",
        "name": "DOTA_LOADOUT_TYPE_SHAPESHIFT",
        "desc": ""
      },
      {
        "value": "19",
        "name": "DOTA_LOADOUT_TYPE_TAUNT",
        "desc": ""
      },
      {
        "value": "20",
        "name": "DOTA_LOADOUT_TYPE_AMBIENT_EFFECTS",
        "desc": ""
      },
      {
        "value": "21",
        "name": "DOTA_LOADOUT_TYPE_ABILITY_ATTACK",
        "desc": ""
      },
      {
        "value": "22",
        "name": "DOTA_LOADOUT_TYPE_ABILITY1",
        "desc": ""
      },
      {
        "value": "23",
        "name": "DOTA_LOADOUT_TYPE_ABILITY2",
        "desc": ""
      },
      {
        "value": "24",
        "name": "DOTA_LOADOUT_TYPE_ABILITY3",
        "desc": ""
      },
      {
        "value": "25",
        "name": "DOTA_LOADOUT_TYPE_ABILITY4",
        "desc": ""
      },
      {
        "value": "26",
        "name": "DOTA_LOADOUT_TYPE_ABILITY_ULTIMATE",
        "desc": ""
      },
      {
        "value": "27",
        "name": "DOTA_LOADOUT_TYPE_VOICE",
        "desc": ""
      },
      {
        "value": "28",
        "name": "DOTA_LOADOUT_TYPE_WEAPON_PERSONA_1",
        "desc": ""
      },
      {
        "value": "29",
        "name": "DOTA_LOADOUT_TYPE_OFFHAND_WEAPON_PERSONA_1",
        "desc": ""
      },
      {
        "value": "30",
        "name": "DOTA_LOADOUT_TYPE_WEAPON2_PERSONA_1",
        "desc": ""
      },
      {
        "value": "31",
        "name": "DOTA_LOADOUT_TYPE_OFFHAND_WEAPON2_PERSONA_1",
        "desc": ""
      },
      {
        "value": "32",
        "name": "DOTA_LOADOUT_TYPE_HEAD_PERSONA_1",
        "desc": ""
      },
      {
        "value": "33",
        "name": "DOTA_LOADOUT_TYPE_SHOULDER_PERSONA_1",
        "desc": ""
      },
      {
        "value": "34",
        "name": "DOTA_LOADOUT_TYPE_ARMS_PERSONA_1",
        "desc": ""
      },
      {
        "value": "35",
        "name": "DOTA_LOADOUT_TYPE_ARMOR_PERSONA_1",
        "desc": ""
      },
      {
        "value": "36",
        "name": "DOTA_LOADOUT_TYPE_BELT_PERSONA_1",
        "desc": ""
      },
      {
        "value": "37",
        "name": "DOTA_LOADOUT_TYPE_NECK_PERSONA_1",
        "desc": ""
      },
      {
        "value": "38",
        "name": "DOTA_LOADOUT_TYPE_BACK_PERSONA_1",
        "desc": ""
      },
      {
        "value": "39",
        "name": "DOTA_LOADOUT_TYPE_LEGS_PERSONA_1",
        "desc": ""
      },
      {
        "value": "40",
        "name": "DOTA_LOADOUT_TYPE_GLOVES_PERSONA_1",
        "desc": ""
      },
      {
        "value": "41",
        "name": "DOTA_LOADOUT_TYPE_TAIL_PERSONA_1",
        "desc": ""
      },
      {
        "value": "42",
        "name": "DOTA_LOADOUT_TYPE_MISC_PERSONA_1",
        "desc": ""
      },
      {
        "value": "43",
        "name": "DOTA_LOADOUT_TYPE_BODY_HEAD_PERSONA_1",
        "desc": ""
      },
      {
        "value": "44",
        "name": "DOTA_LOADOUT_TYPE_MOUNT_PERSONA_1",
        "desc": ""
      },
      {
        "value": "45",
        "name": "DOTA_LOADOUT_TYPE_SUMMON_PERSONA_1",
        "desc": ""
      },
      {
        "value": "46",
        "name": "DOTA_LOADOUT_TYPE_SHAPESHIFT_PERSONA_1",
        "desc": ""
      },
      {
        "value": "47",
        "name": "DOTA_LOADOUT_TYPE_TAUNT_PERSONA_1",
        "desc": ""
      },
      {
        "value": "48",
        "name": "DOTA_LOADOUT_TYPE_AMBIENT_EFFECTS_PERSONA_1",
        "desc": ""
      },
      {
        "value": "49",
        "name": "DOTA_LOADOUT_TYPE_ABILITY_ATTACK_PERSONA_1",
        "desc": ""
      },
      {
        "value": "50",
        "name": "DOTA_LOADOUT_TYPE_ABILITY1_PERSONA_1",
        "desc": ""
      },
      {
        "value": "51",
        "name": "DOTA_LOADOUT_TYPE_ABILITY2_PERSONA_1",
        "desc": ""
      },
      {
        "value": "52",
        "name": "DOTA_LOADOUT_TYPE_ABILITY3_PERSONA_1",
        "desc": ""
      },
      {
        "value": "53",
        "name": "DOTA_LOADOUT_TYPE_ABILITY4_PERSONA_1",
        "desc": ""
      },
      {
        "value": "54",
        "name": "DOTA_LOADOUT_TYPE_ABILITY_ULTIMATE_PERSONA_1",
        "desc": ""
      },
      {
        "value": "55",
        "name": "DOTA_LOADOUT_TYPE_VOICE_PERSONA_1",
        "desc": ""
      },
      {
        "value": "28",
        "name": "DOTA_LOADOUT_PERSONA_1_START",
        "desc": ""
      },
      {
        "value": "55",
        "name": "DOTA_LOADOUT_PERSONA_1_END",
        "desc": ""
      },
      {
        "value": "56",
        "name": "DOTA_LOADOUT_TYPE_PERSONA_SELECTOR",
        "desc": ""
      },
      {
        "value": "57",
        "name": "DOTA_LOADOUT_TYPE_COURIER",
        "desc": ""
      },
      {
        "value": "58",
        "name": "DOTA_LOADOUT_TYPE_ANNOUNCER",
        "desc": ""
      },
      {
        "value": "59",
        "name": "DOTA_LOADOUT_TYPE_MEGA_KILLS",
        "desc": ""
      },
      {
        "value": "60",
        "name": "DOTA_LOADOUT_TYPE_MUSIC",
        "desc": ""
      },
      {
        "value": "61",
        "name": "DOTA_LOADOUT_TYPE_WARD",
        "desc": ""
      },
      {
        "value": "62",
        "name": "DOTA_LOADOUT_TYPE_HUD_SKIN",
        "desc": ""
      },
      {
        "value": "63",
        "name": "DOTA_LOADOUT_TYPE_LOADING_SCREEN",
        "desc": ""
      },
      {
        "value": "64",
        "name": "DOTA_LOADOUT_TYPE_WEATHER",
        "desc": ""
      },
      {
        "value": "65",
        "name": "DOTA_LOADOUT_TYPE_HEROIC_STATUE",
        "desc": ""
      },
      {
        "value": "66",
        "name": "DOTA_LOADOUT_TYPE_MULTIKILL_BANNER",
        "desc": ""
      },
      {
        "value": "67",
        "name": "DOTA_LOADOUT_TYPE_CURSOR_PACK",
        "desc": ""
      },
      {
        "value": "68",
        "name": "DOTA_LOADOUT_TYPE_TELEPORT_EFFECT",
        "desc": ""
      },
      {
        "value": "69",
        "name": "DOTA_LOADOUT_TYPE_BLINK_EFFECT",
        "desc": ""
      },
      {
        "value": "70",
        "name": "DOTA_LOADOUT_TYPE_EMBLEM",
        "desc": ""
      },
      {
        "value": "71",
        "name": "DOTA_LOADOUT_TYPE_TERRAIN",
        "desc": ""
      },
      {
        "value": "72",
        "name": "DOTA_LOADOUT_TYPE_RADIANT_CREEPS",
        "desc": ""
      },
      {
        "value": "73",
        "name": "DOTA_LOADOUT_TYPE_DIRE_CREEPS",
        "desc": ""
      },
      {
        "value": "74",
        "name": "DOTA_LOADOUT_TYPE_RADIANT_TOWER",
        "desc": ""
      },
      {
        "value": "75",
        "name": "DOTA_LOADOUT_TYPE_DIRE_TOWER",
        "desc": ""
      },
      {
        "value": "76",
        "name": "DOTA_LOADOUT_TYPE_VERSUS_SCREEN",
        "desc": ""
      },
      {
        "value": "77",
        "name": "DOTA_LOADOUT_TYPE_STREAK_EFFECT",
        "desc": ""
      },
      {
        "value": "57",
        "name": "DOTA_PLAYER_LOADOUT_START",
        "desc": ""
      },
      {
        "value": "77",
        "name": "DOTA_PLAYER_LOADOUT_END",
        "desc": ""
      },
      {
        "value": "78",
        "name": "DOTA_LOADOUT_TYPE_NONE",
        "desc": ""
      },
      {
        "value": "79",
        "name": "DOTA_LOADOUT_TYPE_COUNT",
        "desc": ""
      }
    ],
    "modifierstate": [
      {
        "value": "0",
        "name": "MODIFIER_STATE_ROOTED",
        "desc": ""
      },
      {
        "value": "1",
        "name": "MODIFIER_STATE_DISARMED",
        "desc": ""
      },
      {
        "value": "2",
        "name": "MODIFIER_STATE_ATTACK_IMMUNE",
        "desc": ""
      },
      {
        "value": "3",
        "name": "MODIFIER_STATE_SILENCED",
        "desc": ""
      },
      {
        "value": "4",
        "name": "MODIFIER_STATE_MUTED",
        "desc": ""
      },
      {
        "value": "5",
        "name": "MODIFIER_STATE_STUNNED",
        "desc": ""
      },
      {
        "value": "6",
        "name": "MODIFIER_STATE_HEXED",
        "desc": ""
      },
      {
        "value": "7",
        "name": "MODIFIER_STATE_INVISIBLE",
        "desc": ""
      },
      {
        "value": "8",
        "name": "MODIFIER_STATE_INVULNERABLE",
        "desc": ""
      },
      {
        "value": "9",
        "name": "MODIFIER_STATE_MAGIC_IMMUNE",
        "desc": ""
      },
      {
        "value": "10",
        "name": "MODIFIER_STATE_PROVIDES_VISION",
        "desc": ""
      },
      {
        "value": "11",
        "name": "MODIFIER_STATE_NIGHTMARED",
        "desc": ""
      },
      {
        "value": "12",
        "name": "MODIFIER_STATE_BLOCK_DISABLED",
        "desc": ""
      },
      {
        "value": "13",
        "name": "MODIFIER_STATE_EVADE_DISABLED",
        "desc": ""
      },
      {
        "value": "14",
        "name": "MODIFIER_STATE_UNSELECTABLE",
        "desc": ""
      },
      {
        "value": "15",
        "name": "MODIFIER_STATE_CANNOT_TARGET_ENEMIES",
        "desc": ""
      },
      {
        "value": "16",
        "name": "MODIFIER_STATE_CANNOT_MISS",
        "desc": ""
      },
      {
        "value": "17",
        "name": "MODIFIER_STATE_SPECIALLY_DENIABLE",
        "desc": ""
      },
      {
        "value": "18",
        "name": "MODIFIER_STATE_FROZEN",
        "desc": ""
      },
      {
        "value": "19",
        "name": "MODIFIER_STATE_COMMAND_RESTRICTED",
        "desc": ""
      },
      {
        "value": "20",
        "name": "MODIFIER_STATE_NOT_ON_MINIMAP",
        "desc": ""
      },
      {
        "value": "21",
        "name": "MODIFIER_STATE_LOW_ATTACK_PRIORITY",
        "desc": ""
      },
      {
        "value": "22",
        "name": "MODIFIER_STATE_NO_HEALTH_BAR",
        "desc": ""
      },
      {
        "value": "23",
        "name": "MODIFIER_STATE_FLYING",
        "desc": ""
      },
      {
        "value": "24",
        "name": "MODIFIER_STATE_NO_UNIT_COLLISION",
        "desc": ""
      },
      {
        "value": "25",
        "name": "MODIFIER_STATE_NO_TEAM_MOVE_TO",
        "desc": ""
      },
      {
        "value": "26",
        "name": "MODIFIER_STATE_NO_TEAM_SELECT",
        "desc": ""
      },
      {
        "value": "27",
        "name": "MODIFIER_STATE_PASSIVES_DISABLED",
        "desc": ""
      },
      {
        "value": "28",
        "name": "MODIFIER_STATE_DOMINATED",
        "desc": ""
      },
      {
        "value": "29",
        "name": "MODIFIER_STATE_BLIND",
        "desc": ""
      },
      {
        "value": "30",
        "name": "MODIFIER_STATE_OUT_OF_GAME",
        "desc": ""
      },
      {
        "value": "31",
        "name": "MODIFIER_STATE_FAKE_ALLY",
        "desc": ""
      },
      {
        "value": "32",
        "name": "MODIFIER_STATE_FLYING_FOR_PATHING_PURPOSES_ONLY",
        "desc": ""
      },
      {
        "value": "33",
        "name": "MODIFIER_STATE_TRUESIGHT_IMMUNE",
        "desc": ""
      },
      {
        "value": "34",
        "name": "MODIFIER_STATE_UNTARGETABLE",
        "desc": ""
      },
      {
        "value": "35",
        "name": "MODIFIER_STATE_IGNORING_MOVE_AND_ATTACK_ORDERS",
        "desc": ""
      },
      {
        "value": "36",
        "name": "MODIFIER_STATE_ALLOW_PATHING_TROUGH_TREES",
        "desc": ""
      },
      {
        "value": "37",
        "name": "MODIFIER_STATE_NOT_ON_MINIMAP_FOR_ENEMIES",
        "desc": ""
      },
      {
        "value": "38",
        "name": "MODIFIER_STATE_UNSLOWABLE",
        "desc": ""
      },
      {
        "value": "39",
        "name": "MODIFIER_STATE_TETHERED",
        "desc": ""
      },
      {
        "value": "40",
        "name": "MODIFIER_STATE_IGNORING_STOP_ORDERS",
        "desc": ""
      },
      {
        "value": "41",
        "name": "MODIFIER_STATE_FEARED",
        "desc": ""
      },
      {
        "value": "42",
        "name": "MODIFIER_STATE_TAUNTED",
        "desc": ""
      },
      {
        "value": "43",
        "name": "MODIFIER_STATE_CANNOT_BE_MOTION_CONTROLLED",
        "desc": ""
      },
      {
        "value": "44",
        "name": "MODIFIER_STATE_LAST",
        "desc": ""
      }
    ],
    "DOTAModifierAttribute_t": [
      {
        "value": "0",
        "name": "MODIFIER_ATTRIBUTE_NONE",
        "desc": ""
      },
      {
        "value": "1",
        "name": "MODIFIER_ATTRIBUTE_PERMANENT",
        "desc": ""
      },
      {
        "value": "2",
        "name": "MODIFIER_ATTRIBUTE_MULTIPLE",
        "desc": ""
      },
      {
        "value": "4",
        "name": "MODIFIER_ATTRIBUTE_IGNORE_INVULNERABLE",
        "desc": ""
      },
      {
        "value": "8",
        "name": "MODIFIER_ATTRIBUTE_AURA_PRIORITY",
        "desc": ""
      }
    ],
    "Attributes": [
      {
        "value": "0",
        "name": "DOTA_ATTRIBUTE_STRENGTH",
        "desc": ""
      },
      {
        "value": "1",
        "name": "DOTA_ATTRIBUTE_AGILITY",
        "desc": ""
      },
      {
        "value": "2",
        "name": "DOTA_ATTRIBUTE_INTELLECT",
        "desc": ""
      },
      {
        "value": "3",
        "name": "DOTA_ATTRIBUTE_MAX",
        "desc": ""
      },
      {
        "value": "-1",
        "name": "DOTA_ATTRIBUTE_INVALID",
        "desc": ""
      }
    ],
    "ParticleAttachment_t": [
      {
        "value": "-1",
        "name": "PATTACH_INVALID",
        "desc": ""
      },
      {
        "value": "0",
        "name": "PATTACH_ABSORIGIN",
        "desc": ""
      },
      {
        "value": "1",
        "name": "PATTACH_ABSORIGIN_FOLLOW",
        "desc": ""
      },
      {
        "value": "2",
        "name": "PATTACH_CUSTOMORIGIN",
        "desc": ""
      },
      {
        "value": "3",
        "name": "PATTACH_CUSTOMORIGIN_FOLLOW",
        "desc": ""
      },
      {
        "value": "4",
        "name": "PATTACH_POINT",
        "desc": ""
      },
      {
        "value": "5",
        "name": "PATTACH_POINT_FOLLOW",
        "desc": ""
      },
      {
        "value": "6",
        "name": "PATTACH_EYES_FOLLOW",
        "desc": ""
      },
      {
        "value": "7",
        "name": "PATTACH_OVERHEAD_FOLLOW",
        "desc": ""
      },
      {
        "value": "8",
        "name": "PATTACH_WORLDORIGIN",
        "desc": ""
      },
      {
        "value": "9",
        "name": "PATTACH_ROOTBONE_FOLLOW",
        "desc": ""
      },
      {
        "value": "10",
        "name": "PATTACH_RENDERORIGIN_FOLLOW",
        "desc": ""
      },
      {
        "value": "11",
        "name": "PATTACH_MAIN_VIEW",
        "desc": ""
      },
      {
        "value": "12",
        "name": "PATTACH_WATERWAKE",
        "desc": ""
      },
      {
        "value": "13",
        "name": "PATTACH_CENTER_FOLLOW",
        "desc": ""
      },
      {
        "value": "14",
        "name": "PATTACH_CUSTOM_GAME_STATE_1",
        "desc": ""
      },
      {
        "value": "15",
        "name": "PATTACH_HEALTHBAR",
        "desc": ""
      },
      {
        "value": "16",
        "name": "MAX_PATTACH_TYPES",
        "desc": ""
      }
    ],
    "DOTA_MOTION_CONTROLLER_PRIORITY": [
      {
        "value": "0",
        "name": "DOTA_MOTION_CONTROLLER_PRIORITY_LOWEST",
        "desc": ""
      },
      {
        "value": "1",
        "name": "DOTA_MOTION_CONTROLLER_PRIORITY_LOW",
        "desc": ""
      },
      {
        "value": "2",
        "name": "DOTA_MOTION_CONTROLLER_PRIORITY_MEDIUM",
        "desc": ""
      },
      {
        "value": "3",
        "name": "DOTA_MOTION_CONTROLLER_PRIORITY_HIGH",
        "desc": ""
      },
      {
        "value": "4",
        "name": "DOTA_MOTION_CONTROLLER_PRIORITY_HIGHEST",
        "desc": ""
      }
    ],
    "DOTASpeechType_t": [
      {
        "value": "0",
        "name": "DOTA_SPEECH_USER_INVALID",
        "desc": ""
      },
      {
        "value": "1",
        "name": "DOTA_SPEECH_USER_SINGLE",
        "desc": ""
      },
      {
        "value": "2",
        "name": "DOTA_SPEECH_USER_TEAM",
        "desc": ""
      },
      {
        "value": "3",
        "name": "DOTA_SPEECH_USER_TEAM_NEARBY",
        "desc": ""
      },
      {
        "value": "4",
        "name": "DOTA_SPEECH_USER_NEARBY",
        "desc": ""
      },
      {
        "value": "5",
        "name": "DOTA_SPEECH_USER_ALL",
        "desc": ""
      },
      {
        "value": "6",
        "name": "DOTA_SPEECH_GOOD_TEAM",
        "desc": ""
      },
      {
        "value": "7",
        "name": "DOTA_SPEECH_BAD_TEAM",
        "desc": ""
      },
      {
        "value": "8",
        "name": "DOTA_SPEECH_SPECTATOR",
        "desc": ""
      },
      {
        "value": "9",
        "name": "DOTA_SPEECH_RECIPIENT_TYPE_MAX",
        "desc": ""
      }
    ],
    "DOTAAbilitySpeakTrigger_t": [
      {
        "value": "0",
        "name": "DOTA_ABILITY_SPEAK_START_ACTION_PHASE",
        "desc": ""
      },
      {
        "value": "1",
        "name": "DOTA_ABILITY_SPEAK_CAST",
        "desc": ""
      }
    ],
    "DotaCustomUIType_t": [
      {
        "value": "0",
        "name": "DOTA_CUSTOM_UI_TYPE_HUD",
        "desc": ""
      },
      {
        "value": "1",
        "name": "DOTA_CUSTOM_UI_TYPE_HERO_SELECTION",
        "desc": ""
      },
      {
        "value": "2",
        "name": "DOTA_CUSTOM_UI_TYPE_GAME_INFO",
        "desc": ""
      },
      {
        "value": "3",
        "name": "DOTA_CUSTOM_UI_TYPE_GAME_SETUP",
        "desc": ""
      },
      {
        "value": "4",
        "name": "DOTA_CUSTOM_UI_TYPE_FLYOUT_SCOREBOARD",
        "desc": ""
      },
      {
        "value": "5",
        "name": "DOTA_CUSTOM_UI_TYPE_HUD_TOP_BAR",
        "desc": ""
      },
      {
        "value": "6",
        "name": "DOTA_CUSTOM_UI_TYPE_END_SCREEN",
        "desc": ""
      },
      {
        "value": "7",
        "name": "DOTA_CUSTOM_UI_TYPE_COUNT",
        "desc": ""
      },
      {
        "value": "-1",
        "name": "DOTA_CUSTOM_UI_TYPE_INVALID",
        "desc": ""
      }
    ],
    "DotaDefaultUIElement_t": [
      {
        "value": "-1",
        "name": "DOTA_DEFAULT_UI_INVALID",
        "desc": ""
      },
      {
        "value": "0",
        "name": "DOTA_DEFAULT_UI_TOP_TIMEOFDAY",
        "desc": ""
      },
      {
        "value": "1",
        "name": "DOTA_DEFAULT_UI_TOP_HEROES",
        "desc": ""
      },
      {
        "value": "2",
        "name": "DOTA_DEFAULT_UI_FLYOUT_SCOREBOARD",
        "desc": ""
      },
      {
        "value": "3",
        "name": "DOTA_DEFAULT_UI_ACTION_PANEL",
        "desc": ""
      },
      {
        "value": "4",
        "name": "DOTA_DEFAULT_UI_ACTION_MINIMAP",
        "desc": ""
      },
      {
        "value": "5",
        "name": "DOTA_DEFAULT_UI_INVENTORY_PANEL",
        "desc": ""
      },
      {
        "value": "6",
        "name": "DOTA_DEFAULT_UI_INVENTORY_SHOP",
        "desc": ""
      },
      {
        "value": "7",
        "name": "DOTA_DEFAULT_UI_INVENTORY_ITEMS",
        "desc": ""
      },
      {
        "value": "8",
        "name": "DOTA_DEFAULT_UI_INVENTORY_QUICKBUY",
        "desc": ""
      },
      {
        "value": "9",
        "name": "DOTA_DEFAULT_UI_INVENTORY_COURIER",
        "desc": ""
      },
      {
        "value": "10",
        "name": "DOTA_DEFAULT_UI_INVENTORY_PROTECT",
        "desc": ""
      },
      {
        "value": "11",
        "name": "DOTA_DEFAULT_UI_INVENTORY_GOLD",
        "desc": ""
      },
      {
        "value": "12",
        "name": "DOTA_DEFAULT_UI_SHOP_SUGGESTEDITEMS",
        "desc": ""
      },
      {
        "value": "13",
        "name": "DOTA_DEFAULT_UI_SHOP_COMMONITEMS",
        "desc": ""
      },
      {
        "value": "14",
        "name": "DOTA_DEFAULT_UI_HERO_SELECTION_TEAMS",
        "desc": ""
      },
      {
        "value": "15",
        "name": "DOTA_DEFAULT_UI_HERO_SELECTION_GAME_NAME",
        "desc": ""
      },
      {
        "value": "16",
        "name": "DOTA_DEFAULT_UI_HERO_SELECTION_CLOCK",
        "desc": ""
      },
      {
        "value": "17",
        "name": "DOTA_DEFAULT_UI_TOP_MENU_BUTTONS",
        "desc": ""
      },
      {
        "value": "18",
        "name": "DOTA_DEFAULT_UI_TOP_BAR_BACKGROUND",
        "desc": ""
      },
      {
        "value": "19",
        "name": "DOTA_DEFAULT_UI_TOP_BAR_RADIANT_TEAM",
        "desc": ""
      },
      {
        "value": "20",
        "name": "DOTA_DEFAULT_UI_TOP_BAR_DIRE_TEAM",
        "desc": ""
      },
      {
        "value": "21",
        "name": "DOTA_DEFAULT_UI_TOP_BAR_SCORE",
        "desc": ""
      },
      {
        "value": "22",
        "name": "DOTA_DEFAULT_UI_ENDGAME",
        "desc": ""
      },
      {
        "value": "23",
        "name": "DOTA_DEFAULT_UI_ENDGAME_CHAT",
        "desc": ""
      },
      {
        "value": "24",
        "name": "DOTA_DEFAULT_UI_QUICK_STATS",
        "desc": ""
      },
      {
        "value": "25",
        "name": "DOTA_DEFAULT_UI_PREGAME_STRATEGYUI",
        "desc": ""
      },
      {
        "value": "26",
        "name": "DOTA_DEFAULT_UI_KILLCAM",
        "desc": ""
      },
      {
        "value": "27",
        "name": "DOTA_DEFAULT_UI_TOP_BAR",
        "desc": ""
      },
      {
        "value": "28",
        "name": "DOTA_DEFAULT_UI_CUSTOMUI_BEHIND_HUD_ELEMENTS",
        "desc": ""
      },
      {
        "value": "29",
        "name": "DOTA_DEFAULT_UI_ELEMENT_COUNT",
        "desc": ""
      }
    ],
    "PlayerUltimateStateOrTime_t": [
      {
        "value": "0",
        "name": "PLAYER_ULTIMATE_STATE_READY",
        "desc": ""
      },
      {
        "value": "-1",
        "name": "PLAYER_ULTIMATE_STATE_NO_MANA",
        "desc": ""
      },
      {
        "value": "-2",
        "name": "PLAYER_ULTIMATE_STATE_NOT_LEVELED",
        "desc": ""
      },
      {
        "value": "-3",
        "name": "PLAYER_ULTIMATE_STATE_HIDDEN",
        "desc": ""
      }
    ],
    "PlayerOrderIssuer_t": [
      {
        "value": "0",
        "name": "DOTA_ORDER_ISSUER_SELECTED_UNITS",
        "desc": ""
      },
      {
        "value": "1",
        "name": "DOTA_ORDER_ISSUER_CURRENT_UNIT_ONLY",
        "desc": ""
      },
      {
        "value": "2",
        "name": "DOTA_ORDER_ISSUER_HERO_ONLY",
        "desc": ""
      },
      {
        "value": "3",
        "name": "DOTA_ORDER_ISSUER_PASSED_UNIT_ONLY",
        "desc": ""
      }
    ],
    "OrderQueueBehavior_t": [
      {
        "value": "0",
        "name": "DOTA_ORDER_QUEUE_DEFAULT",
        "desc": ""
      },
      {
        "value": "1",
        "name": "DOTA_ORDER_QUEUE_NEVER",
        "desc": ""
      },
      {
        "value": "2",
        "name": "DOTA_ORDER_QUEUE_ALWAYS",
        "desc": ""
      }
    ],
    "CLICK_BEHAVIORS": [
      {
        "value": "0",
        "name": "DOTA_CLICK_BEHAVIOR_NONE",
        "desc": ""
      },
      {
        "value": "1",
        "name": "DOTA_CLICK_BEHAVIOR_MOVE",
        "desc": ""
      },
      {
        "value": "2",
        "name": "DOTA_CLICK_BEHAVIOR_ATTACK",
        "desc": ""
      },
      {
        "value": "3",
        "name": "DOTA_CLICK_BEHAVIOR_CAST",
        "desc": ""
      },
      {
        "value": "4",
        "name": "DOTA_CLICK_BEHAVIOR_DROP_ITEM",
        "desc": ""
      },
      {
        "value": "5",
        "name": "DOTA_CLICK_BEHAVIOR_DROP_SHOP_ITEM",
        "desc": ""
      },
      {
        "value": "6",
        "name": "DOTA_CLICK_BEHAVIOR_DRAG",
        "desc": ""
      },
      {
        "value": "7",
        "name": "DOTA_CLICK_BEHAVIOR_LEARN_ABILITY",
        "desc": ""
      },
      {
        "value": "8",
        "name": "DOTA_CLICK_BEHAVIOR_PATROL",
        "desc": ""
      },
      {
        "value": "9",
        "name": "DOTA_CLICK_BEHAVIOR_VECTOR_CAST",
        "desc": ""
      },
      {
        "value": "10",
        "name": "DOTA_CLICK_BEHAVIOR_UNUSED",
        "desc": ""
      },
      {
        "value": "11",
        "name": "DOTA_CLICK_BEHAVIOR_RADAR",
        "desc": ""
      },
      {
        "value": "12",
        "name": "DOTA_CLICK_BEHAVIOR_LAST",
        "desc": ""
      }
    ],
    "AbilityLearnResult_t": [
      {
        "value": "0",
        "name": "ABILITY_CAN_BE_UPGRADED",
        "desc": ""
      },
      {
        "value": "1",
        "name": "ABILITY_CANNOT_BE_UPGRADED_NOT_UPGRADABLE",
        "desc": ""
      },
      {
        "value": "2",
        "name": "ABILITY_CANNOT_BE_UPGRADED_AT_MAX",
        "desc": ""
      },
      {
        "value": "3",
        "name": "ABILITY_CANNOT_BE_UPGRADED_REQUIRES_LEVEL",
        "desc": ""
      },
      {
        "value": "4",
        "name": "ABILITY_NOT_LEARNABLE",
        "desc": ""
      }
    ],
    "DOTAKeybindCommand_t": [
      {
        "value": "0",
        "name": "DOTA_KEYBIND_NONE",
        "desc": ""
      },
      {
        "value": "1",
        "name": "DOTA_KEYBIND_FIRST",
        "desc": ""
      },
      {
        "value": "1",
        "name": "DOTA_KEYBIND_CAMERA_UP",
        "desc": ""
      },
      {
        "value": "2",
        "name": "DOTA_KEYBIND_CAMERA_DOWN",
        "desc": ""
      },
      {
        "value": "3",
        "name": "DOTA_KEYBIND_CAMERA_LEFT",
        "desc": ""
      },
      {
        "value": "4",
        "name": "DOTA_KEYBIND_CAMERA_RIGHT",
        "desc": ""
      },
      {
        "value": "5",
        "name": "DOTA_KEYBIND_CAMERA_GRIP",
        "desc": ""
      },
      {
        "value": "6",
        "name": "DOTA_KEYBIND_CAMERA_YAW_GRIP",
        "desc": ""
      },
      {
        "value": "7",
        "name": "DOTA_KEYBIND_CAMERA_SAVED_POSITION_1",
        "desc": ""
      },
      {
        "value": "8",
        "name": "DOTA_KEYBIND_CAMERA_SAVED_POSITION_2",
        "desc": ""
      },
      {
        "value": "9",
        "name": "DOTA_KEYBIND_CAMERA_SAVED_POSITION_3",
        "desc": ""
      },
      {
        "value": "10",
        "name": "DOTA_KEYBIND_CAMERA_SAVED_POSITION_4",
        "desc": ""
      },
      {
        "value": "11",
        "name": "DOTA_KEYBIND_CAMERA_SAVED_POSITION_5",
        "desc": ""
      },
      {
        "value": "12",
        "name": "DOTA_KEYBIND_CAMERA_SAVED_POSITION_6",
        "desc": ""
      },
      {
        "value": "13",
        "name": "DOTA_KEYBIND_CAMERA_SAVED_POSITION_7",
        "desc": ""
      },
      {
        "value": "14",
        "name": "DOTA_KEYBIND_CAMERA_SAVED_POSITION_8",
        "desc": ""
      },
      {
        "value": "15",
        "name": "DOTA_KEYBIND_CAMERA_SAVED_POSITION_9",
        "desc": ""
      },
      {
        "value": "16",
        "name": "DOTA_KEYBIND_CAMERA_SAVED_POSITION_10",
        "desc": ""
      },
      {
        "value": "17",
        "name": "DOTA_KEYBIND_HERO_ATTACK",
        "desc": ""
      },
      {
        "value": "18",
        "name": "DOTA_KEYBIND_HERO_MOVE",
        "desc": ""
      },
      {
        "value": "19",
        "name": "DOTA_KEYBIND_HERO_MOVE_DIRECTION",
        "desc": ""
      },
      {
        "value": "20",
        "name": "DOTA_KEYBIND_PATROL",
        "desc": ""
      },
      {
        "value": "21",
        "name": "DOTA_KEYBIND_HERO_STOP",
        "desc": ""
      },
      {
        "value": "22",
        "name": "DOTA_KEYBIND_HERO_HOLD",
        "desc": ""
      },
      {
        "value": "23",
        "name": "DOTA_KEYBIND_HERO_SELECT",
        "desc": ""
      },
      {
        "value": "24",
        "name": "DOTA_KEYBIND_COURIER_SELECT",
        "desc": ""
      },
      {
        "value": "25",
        "name": "DOTA_KEYBIND_COURIER_DELIVER",
        "desc": ""
      },
      {
        "value": "26",
        "name": "DOTA_KEYBIND_COURIER_BURST",
        "desc": ""
      },
      {
        "value": "27",
        "name": "DOTA_KEYBIND_COURIER_SHIELD",
        "desc": ""
      },
      {
        "value": "28",
        "name": "DOTA_KEYBIND_PAUSE",
        "desc": ""
      },
      {
        "value": "29",
        "name": "DOTA_SELECT_ALL",
        "desc": ""
      },
      {
        "value": "30",
        "name": "DOTA_SELECT_ALL_OTHERS",
        "desc": ""
      },
      {
        "value": "31",
        "name": "DOTA_RECENT_EVENT",
        "desc": ""
      },
      {
        "value": "32",
        "name": "DOTA_KEYBIND_CHAT_TEAM",
        "desc": ""
      },
      {
        "value": "33",
        "name": "DOTA_KEYBIND_CHAT_GLOBAL",
        "desc": ""
      },
      {
        "value": "34",
        "name": "DOTA_KEYBIND_CHAT_TEAM2",
        "desc": ""
      },
      {
        "value": "35",
        "name": "DOTA_KEYBIND_CHAT_GLOBAL2",
        "desc": ""
      },
      {
        "value": "36",
        "name": "DOTA_KEYBIND_CHAT_VOICE_PARTY",
        "desc": ""
      },
      {
        "value": "37",
        "name": "DOTA_KEYBIND_CHAT_VOICE_TEAM",
        "desc": ""
      },
      {
        "value": "38",
        "name": "DOTA_KEYBIND_CHAT_WHEEL",
        "desc": ""
      },
      {
        "value": "39",
        "name": "DOTA_KEYBIND_CHAT_WHEEL2",
        "desc": ""
      },
      {
        "value": "40",
        "name": "DOTA_KEYBIND_CHAT_WHEEL_CARE",
        "desc": ""
      },
      {
        "value": "41",
        "name": "DOTA_KEYBIND_CHAT_WHEEL_BACK",
        "desc": ""
      },
      {
        "value": "42",
        "name": "DOTA_KEYBIND_CHAT_WHEEL_NEED_WARDS",
        "desc": ""
      },
      {
        "value": "43",
        "name": "DOTA_KEYBIND_CHAT_WHEEL_STUN",
        "desc": ""
      },
      {
        "value": "44",
        "name": "DOTA_KEYBIND_CHAT_WHEEL_HELP",
        "desc": ""
      },
      {
        "value": "45",
        "name": "DOTA_KEYBIND_CHAT_WHEEL_GET_PUSH",
        "desc": ""
      },
      {
        "value": "46",
        "name": "DOTA_KEYBIND_CHAT_WHEEL_GOOD_JOB",
        "desc": ""
      },
      {
        "value": "47",
        "name": "DOTA_KEYBIND_CHAT_WHEEL_MISSING",
        "desc": ""
      },
      {
        "value": "48",
        "name": "DOTA_KEYBIND_CHAT_WHEEL_MISSING_TOP",
        "desc": ""
      },
      {
        "value": "49",
        "name": "DOTA_KEYBIND_CHAT_WHEEL_MISSING_MIDDLE",
        "desc": ""
      },
      {
        "value": "50",
        "name": "DOTA_KEYBIND_CHAT_WHEEL_MISSING_BOTTOM",
        "desc": ""
      },
      {
        "value": "51",
        "name": "DOTA_KEYBIND_HERO_CHAT_WHEEL",
        "desc": ""
      },
      {
        "value": "52",
        "name": "DOTA_KEYBIND_SPRAY_WHEEL",
        "desc": ""
      },
      {
        "value": "53",
        "name": "DOTA_KEYBIND_ABILITY_PRIMARY1",
        "desc": ""
      },
      {
        "value": "54",
        "name": "DOTA_KEYBIND_ABILITY_PRIMARY2",
        "desc": ""
      },
      {
        "value": "55",
        "name": "DOTA_KEYBIND_ABILITY_PRIMARY3",
        "desc": ""
      },
      {
        "value": "56",
        "name": "DOTA_KEYBIND_ABILITY_SECONDARY1",
        "desc": ""
      },
      {
        "value": "57",
        "name": "DOTA_KEYBIND_ABILITY_SECONDARY2",
        "desc": ""
      },
      {
        "value": "58",
        "name": "DOTA_KEYBIND_ABILITY_ULTIMATE",
        "desc": ""
      },
      {
        "value": "59",
        "name": "DOTA_KEYBIND_ABILITY_PRIMARY1_QUICKCAST",
        "desc": ""
      },
      {
        "value": "60",
        "name": "DOTA_KEYBIND_ABILITY_PRIMARY2_QUICKCAST",
        "desc": ""
      },
      {
        "value": "61",
        "name": "DOTA_KEYBIND_ABILITY_PRIMARY3_QUICKCAST",
        "desc": ""
      },
      {
        "value": "62",
        "name": "DOTA_KEYBIND_ABILITY_SECONDARY1_QUICKCAST",
        "desc": ""
      },
      {
        "value": "63",
        "name": "DOTA_KEYBIND_ABILITY_SECONDARY2_QUICKCAST",
        "desc": ""
      },
      {
        "value": "64",
        "name": "DOTA_KEYBIND_ABILITY_ULTIMATE_QUICKCAST",
        "desc": ""
      },
      {
        "value": "65",
        "name": "DOTA_KEYBIND_ABILITY_PRIMARY1_EXPLICIT_AUTOCAST",
        "desc": ""
      },
      {
        "value": "66",
        "name": "DOTA_KEYBIND_ABILITY_PRIMARY2_EXPLICIT_AUTOCAST",
        "desc": ""
      },
      {
        "value": "67",
        "name": "DOTA_KEYBIND_ABILITY_PRIMARY3_EXPLICIT_AUTOCAST",
        "desc": ""
      },
      {
        "value": "68",
        "name": "DOTA_KEYBIND_ABILITY_SECONDARY1_EXPLICIT_AUTOCAST",
        "desc": ""
      },
      {
        "value": "69",
        "name": "DOTA_KEYBIND_ABILITY_SECONDARY2_EXPLICIT_AUTOCAST",
        "desc": ""
      },
      {
        "value": "70",
        "name": "DOTA_KEYBIND_ABILITY_ULTIMATE_EXPLICIT_AUTOCAST",
        "desc": ""
      },
      {
        "value": "71",
        "name": "DOTA_KEYBIND_ABILITY_PRIMARY1_QUICKCAST_AUTOCAST",
        "desc": ""
      },
      {
        "value": "72",
        "name": "DOTA_KEYBIND_ABILITY_PRIMARY2_QUICKCAST_AUTOCAST",
        "desc": ""
      },
      {
        "value": "73",
        "name": "DOTA_KEYBIND_ABILITY_PRIMARY3_QUICKCAST_AUTOCAST",
        "desc": ""
      },
      {
        "value": "74",
        "name": "DOTA_KEYBIND_ABILITY_SECONDARY1_QUICKCAST_AUTOCAST",
        "desc": ""
      },
      {
        "value": "75",
        "name": "DOTA_KEYBIND_ABILITY_SECONDARY2_QUICKCAST_AUTOCAST",
        "desc": ""
      },
      {
        "value": "76",
        "name": "DOTA_KEYBIND_ABILITY_ULTIMATE_QUICKCAST_AUTOCAST",
        "desc": ""
      },
      {
        "value": "77",
        "name": "DOTA_KEYBIND_ABILITY_PRIMARY1_AUTOMATIC_AUTOCAST",
        "desc": ""
      },
      {
        "value": "78",
        "name": "DOTA_KEYBIND_ABILITY_PRIMARY2_AUTOMATIC_AUTOCAST",
        "desc": ""
      },
      {
        "value": "79",
        "name": "DOTA_KEYBIND_ABILITY_PRIMARY3_AUTOMATIC_AUTOCAST",
        "desc": ""
      },
      {
        "value": "80",
        "name": "DOTA_KEYBIND_ABILITY_SECONDARY1_AUTOMATIC_AUTOCAST",
        "desc": ""
      },
      {
        "value": "81",
        "name": "DOTA_KEYBIND_ABILITY_SECONDARY2_AUTOMATIC_AUTOCAST",
        "desc": ""
      },
      {
        "value": "82",
        "name": "DOTA_KEYBIND_ABILITY_ULTIMATE_AUTOMATIC_AUTOCAST",
        "desc": ""
      },
      {
        "value": "83",
        "name": "DOTA_KEYBIND_INVENTORY1",
        "desc": ""
      },
      {
        "value": "84",
        "name": "DOTA_KEYBIND_INVENTORY2",
        "desc": ""
      },
      {
        "value": "85",
        "name": "DOTA_KEYBIND_INVENTORY3",
        "desc": ""
      },
      {
        "value": "86",
        "name": "DOTA_KEYBIND_INVENTORY4",
        "desc": ""
      },
      {
        "value": "87",
        "name": "DOTA_KEYBIND_INVENTORY5",
        "desc": ""
      },
      {
        "value": "88",
        "name": "DOTA_KEYBIND_INVENTORY6",
        "desc": ""
      },
      {
        "value": "89",
        "name": "DOTA_KEYBIND_INVENTORYTP",
        "desc": ""
      },
      {
        "value": "90",
        "name": "DOTA_KEYBIND_INVENTORYNEUTRAL",
        "desc": ""
      },
      {
        "value": "91",
        "name": "DOTA_KEYBIND_INVENTORY1_QUICKCAST",
        "desc": ""
      },
      {
        "value": "92",
        "name": "DOTA_KEYBIND_INVENTORY2_QUICKCAST",
        "desc": ""
      },
      {
        "value": "93",
        "name": "DOTA_KEYBIND_INVENTORY3_QUICKCAST",
        "desc": ""
      },
      {
        "value": "94",
        "name": "DOTA_KEYBIND_INVENTORY4_QUICKCAST",
        "desc": ""
      },
      {
        "value": "95",
        "name": "DOTA_KEYBIND_INVENTORY5_QUICKCAST",
        "desc": ""
      },
      {
        "value": "96",
        "name": "DOTA_KEYBIND_INVENTORY6_QUICKCAST",
        "desc": ""
      },
      {
        "value": "97",
        "name": "DOTA_KEYBIND_INVENTORYTP_QUICKCAST",
        "desc": ""
      },
      {
        "value": "98",
        "name": "DOTA_KEYBIND_INVENTORYNEUTRAL_QUICKCAST",
        "desc": ""
      },
      {
        "value": "99",
        "name": "DOTA_KEYBIND_INVENTORY1_AUTOCAST",
        "desc": ""
      },
      {
        "value": "100",
        "name": "DOTA_KEYBIND_INVENTORY2_AUTOCAST",
        "desc": ""
      },
      {
        "value": "101",
        "name": "DOTA_KEYBIND_INVENTORY3_AUTOCAST",
        "desc": ""
      },
      {
        "value": "102",
        "name": "DOTA_KEYBIND_INVENTORY4_AUTOCAST",
        "desc": ""
      },
      {
        "value": "103",
        "name": "DOTA_KEYBIND_INVENTORY5_AUTOCAST",
        "desc": ""
      },
      {
        "value": "104",
        "name": "DOTA_KEYBIND_INVENTORY6_AUTOCAST",
        "desc": ""
      },
      {
        "value": "105",
        "name": "DOTA_KEYBIND_INVENTORYTP_AUTOCAST",
        "desc": ""
      },
      {
        "value": "106",
        "name": "DOTA_KEYBIND_INVENTORYNEUTRAL_AUTOCAST",
        "desc": ""
      },
      {
        "value": "107",
        "name": "DOTA_KEYBIND_INVENTORY1_QUICKAUTOCAST",
        "desc": ""
      },
      {
        "value": "108",
        "name": "DOTA_KEYBIND_INVENTORY2_QUICKAUTOCAST",
        "desc": ""
      },
      {
        "value": "109",
        "name": "DOTA_KEYBIND_INVENTORY3_QUICKAUTOCAST",
        "desc": ""
      },
      {
        "value": "110",
        "name": "DOTA_KEYBIND_INVENTORY4_QUICKAUTOCAST",
        "desc": ""
      },
      {
        "value": "111",
        "name": "DOTA_KEYBIND_INVENTORY5_QUICKAUTOCAST",
        "desc": ""
      },
      {
        "value": "112",
        "name": "DOTA_KEYBIND_INVENTORY6_QUICKAUTOCAST",
        "desc": ""
      },
      {
        "value": "113",
        "name": "DOTA_KEYBIND_INVENTORYTP_QUICKAUTOCAST",
        "desc": ""
      },
      {
        "value": "114",
        "name": "DOTA_KEYBIND_INVENTORYNEUTRAL_QUICKAUTOCAST",
        "desc": ""
      },
      {
        "value": "115",
        "name": "DOTA_KEYBIND_CONTROL_GROUP1",
        "desc": ""
      },
      {
        "value": "116",
        "name": "DOTA_KEYBIND_CONTROL_GROUP2",
        "desc": ""
      },
      {
        "value": "117",
        "name": "DOTA_KEYBIND_CONTROL_GROUP3",
        "desc": ""
      },
      {
        "value": "118",
        "name": "DOTA_KEYBIND_CONTROL_GROUP4",
        "desc": ""
      },
      {
        "value": "119",
        "name": "DOTA_KEYBIND_CONTROL_GROUP5",
        "desc": ""
      },
      {
        "value": "120",
        "name": "DOTA_KEYBIND_CONTROL_GROUP6",
        "desc": ""
      },
      {
        "value": "121",
        "name": "DOTA_KEYBIND_CONTROL_GROUP7",
        "desc": ""
      },
      {
        "value": "122",
        "name": "DOTA_KEYBIND_CONTROL_GROUP8",
        "desc": ""
      },
      {
        "value": "123",
        "name": "DOTA_KEYBIND_CONTROL_GROUP9",
        "desc": ""
      },
      {
        "value": "124",
        "name": "DOTA_KEYBIND_CONTROL_GROUP10",
        "desc": ""
      },
      {
        "value": "125",
        "name": "DOTA_KEYBIND_CONTROL_GROUPCYCLE",
        "desc": ""
      },
      {
        "value": "126",
        "name": "DOTA_KEYBIND_SELECT_ALLY1",
        "desc": ""
      },
      {
        "value": "127",
        "name": "DOTA_KEYBIND_SELECT_ALLY2",
        "desc": ""
      },
      {
        "value": "128",
        "name": "DOTA_KEYBIND_SELECT_ALLY3",
        "desc": ""
      },
      {
        "value": "129",
        "name": "DOTA_KEYBIND_SELECT_ALLY4",
        "desc": ""
      },
      {
        "value": "130",
        "name": "DOTA_KEYBIND_SELECT_ALLY5",
        "desc": ""
      },
      {
        "value": "131",
        "name": "DOTA_KEYBIND_SHOP_TOGGLE",
        "desc": ""
      },
      {
        "value": "132",
        "name": "DOTA_KEYBIND_SCOREBOARD_TOGGLE",
        "desc": ""
      },
      {
        "value": "133",
        "name": "DOTA_KEYBIND_SCREENSHOT",
        "desc": ""
      },
      {
        "value": "134",
        "name": "DOTA_KEYBIND_ESCAPE",
        "desc": ""
      },
      {
        "value": "135",
        "name": "DOTA_KEYBIND_CONSOLE",
        "desc": ""
      },
      {
        "value": "136",
        "name": "DOTA_KEYBIND_DEATH_SUMMARY",
        "desc": ""
      },
      {
        "value": "137",
        "name": "DOTA_KEYBIND_LEARN_ABILITIES",
        "desc": ""
      },
      {
        "value": "138",
        "name": "DOTA_KEYBIND_LEARN_STATS",
        "desc": ""
      },
      {
        "value": "139",
        "name": "DOTA_KEYBIND_ACTIVATE_GLYPH",
        "desc": ""
      },
      {
        "value": "140",
        "name": "DOTA_KEYBIND_ACTIVATE_RADAR",
        "desc": ""
      },
      {
        "value": "141",
        "name": "DOTA_KEYBIND_PURCHASE_QUICKBUY",
        "desc": ""
      },
      {
        "value": "142",
        "name": "DOTA_KEYBIND_PURCHASE_STICKY",
        "desc": ""
      },
      {
        "value": "143",
        "name": "DOTA_KEYBIND_GRAB_STASH_ITEMS",
        "desc": ""
      },
      {
        "value": "144",
        "name": "DOTA_KEYBIND_TOGGLE_AUTOATTACK",
        "desc": ""
      },
      {
        "value": "145",
        "name": "DOTA_KEYBIND_TAUNT",
        "desc": ""
      },
      {
        "value": "146",
        "name": "DOTA_KEYBIND_SHOP_CONSUMABLES",
        "desc": ""
      },
      {
        "value": "147",
        "name": "DOTA_KEYBIND_SHOP_ATTRIBUTES",
        "desc": ""
      },
      {
        "value": "148",
        "name": "DOTA_KEYBIND_SHOP_ARMAMENTS",
        "desc": ""
      },
      {
        "value": "149",
        "name": "DOTA_KEYBIND_SHOP_ARCANE",
        "desc": ""
      },
      {
        "value": "150",
        "name": "DOTA_KEYBIND_SHOP_BASICS",
        "desc": ""
      },
      {
        "value": "151",
        "name": "DOTA_KEYBIND_SHOP_SUPPORT",
        "desc": ""
      },
      {
        "value": "152",
        "name": "DOTA_KEYBIND_SHOP_CASTER",
        "desc": ""
      },
      {
        "value": "153",
        "name": "DOTA_KEYBIND_SHOP_WEAPONS",
        "desc": ""
      },
      {
        "value": "154",
        "name": "DOTA_KEYBIND_SHOP_ARMOR",
        "desc": ""
      },
      {
        "value": "155",
        "name": "DOTA_KEYBIND_SHOP_ARTIFACTS",
        "desc": ""
      },
      {
        "value": "156",
        "name": "DOTA_KEYBIND_SHOP_SIDE_PAGE_1",
        "desc": ""
      },
      {
        "value": "157",
        "name": "DOTA_KEYBIND_SHOP_SIDE_PAGE_2",
        "desc": ""
      },
      {
        "value": "158",
        "name": "DOTA_KEYBIND_SHOP_SECRET",
        "desc": ""
      },
      {
        "value": "159",
        "name": "DOTA_KEYBIND_SHOP_SEARCHBOX",
        "desc": ""
      },
      {
        "value": "160",
        "name": "DOTA_KEYBIND_SHOP_SLOT_1",
        "desc": ""
      },
      {
        "value": "161",
        "name": "DOTA_KEYBIND_SHOP_SLOT_2",
        "desc": ""
      },
      {
        "value": "162",
        "name": "DOTA_KEYBIND_SHOP_SLOT_3",
        "desc": ""
      },
      {
        "value": "163",
        "name": "DOTA_KEYBIND_SHOP_SLOT_4",
        "desc": ""
      },
      {
        "value": "164",
        "name": "DOTA_KEYBIND_SHOP_SLOT_5",
        "desc": ""
      },
      {
        "value": "165",
        "name": "DOTA_KEYBIND_SHOP_SLOT_6",
        "desc": ""
      },
      {
        "value": "166",
        "name": "DOTA_KEYBIND_SHOP_SLOT_7",
        "desc": ""
      },
      {
        "value": "167",
        "name": "DOTA_KEYBIND_SHOP_SLOT_8",
        "desc": ""
      },
      {
        "value": "168",
        "name": "DOTA_KEYBIND_SHOP_SLOT_9",
        "desc": ""
      },
      {
        "value": "169",
        "name": "DOTA_KEYBIND_SHOP_SLOT_10",
        "desc": ""
      },
      {
        "value": "170",
        "name": "DOTA_KEYBIND_SHOP_SLOT_11",
        "desc": ""
      },
      {
        "value": "171",
        "name": "DOTA_KEYBIND_SHOP_SLOT_12",
        "desc": ""
      },
      {
        "value": "172",
        "name": "DOTA_KEYBIND_SHOP_SLOT_13",
        "desc": ""
      },
      {
        "value": "173",
        "name": "DOTA_KEYBIND_SHOP_SLOT_14",
        "desc": ""
      },
      {
        "value": "174",
        "name": "DOTA_KEYBIND_SPEC_CAMERA_UP",
        "desc": ""
      },
      {
        "value": "175",
        "name": "DOTA_KEYBIND_SPEC_CAMERA_DOWN",
        "desc": ""
      },
      {
        "value": "176",
        "name": "DOTA_KEYBIND_SPEC_CAMERA_LEFT",
        "desc": ""
      },
      {
        "value": "177",
        "name": "DOTA_KEYBIND_SPEC_CAMERA_RIGHT",
        "desc": ""
      },
      {
        "value": "178",
        "name": "DOTA_KEYBIND_SPEC_CAMERA_GRIP",
        "desc": ""
      },
      {
        "value": "179",
        "name": "DOTA_KEYBIND_SPEC_CAMERA_SAVED_POSITION_1",
        "desc": ""
      },
      {
        "value": "180",
        "name": "DOTA_KEYBIND_SPEC_CAMERA_SAVED_POSITION_2",
        "desc": ""
      },
      {
        "value": "181",
        "name": "DOTA_KEYBIND_SPEC_CAMERA_SAVED_POSITION_3",
        "desc": ""
      },
      {
        "value": "182",
        "name": "DOTA_KEYBIND_SPEC_CAMERA_SAVED_POSITION_4",
        "desc": ""
      },
      {
        "value": "183",
        "name": "DOTA_KEYBIND_SPEC_CAMERA_SAVED_POSITION_5",
        "desc": ""
      },
      {
        "value": "184",
        "name": "DOTA_KEYBIND_SPEC_CAMERA_SAVED_POSITION_6",
        "desc": ""
      },
      {
        "value": "185",
        "name": "DOTA_KEYBIND_SPEC_CAMERA_SAVED_POSITION_7",
        "desc": ""
      },
      {
        "value": "186",
        "name": "DOTA_KEYBIND_SPEC_CAMERA_SAVED_POSITION_8",
        "desc": ""
      },
      {
        "value": "187",
        "name": "DOTA_KEYBIND_SPEC_CAMERA_SAVED_POSITION_9",
        "desc": ""
      },
      {
        "value": "188",
        "name": "DOTA_KEYBIND_SPEC_CAMERA_SAVED_POSITION_10",
        "desc": ""
      },
      {
        "value": "189",
        "name": "DOTA_KEYBIND_SPEC_UNIT_SELECT",
        "desc": ""
      },
      {
        "value": "190",
        "name": "DOTA_KEYBIND_SPEC_HERO_SELECT",
        "desc": ""
      },
      {
        "value": "191",
        "name": "DOTA_KEYBIND_SPEC_PAUSE",
        "desc": ""
      },
      {
        "value": "192",
        "name": "DOTA_KEYBIND_SPEC_CHAT",
        "desc": ""
      },
      {
        "value": "193",
        "name": "DOTA_KEYBIND_SPEC_SCOREBOARD",
        "desc": ""
      },
      {
        "value": "194",
        "name": "DOTA_KEYBIND_SPEC_INCREASE_REPLAY_SPEED",
        "desc": ""
      },
      {
        "value": "195",
        "name": "DOTA_KEYBIND_SPEC_DECREASE_REPLAY_SPEED",
        "desc": ""
      },
      {
        "value": "196",
        "name": "DOTA_KEYBIND_SPEC_STATS_HARVEST",
        "desc": ""
      },
      {
        "value": "197",
        "name": "DOTA_KEYBIND_SPEC_STATS_ITEM",
        "desc": ""
      },
      {
        "value": "198",
        "name": "DOTA_KEYBIND_SPEC_STATS_GOLD",
        "desc": ""
      },
      {
        "value": "199",
        "name": "DOTA_KEYBIND_SPEC_STATS_XP",
        "desc": ""
      },
      {
        "value": "200",
        "name": "DOTA_KEYBIND_SPEC_STATS_FANTASY",
        "desc": ""
      },
      {
        "value": "201",
        "name": "DOTA_KEYBIND_SPEC_STATS_WINCHANCE",
        "desc": ""
      },
      {
        "value": "202",
        "name": "DOTA_KEYBIND_SPEC_FOW_TOGGLEBOTH",
        "desc": ""
      },
      {
        "value": "203",
        "name": "DOTA_KEYBIND_SPEC_FOW_TOGGLERADIENT",
        "desc": ""
      },
      {
        "value": "204",
        "name": "DOTA_KEYBIND_SPEC_FOW_TOGGLEDIRE",
        "desc": ""
      },
      {
        "value": "205",
        "name": "DOTA_KEYBIND_SPEC_OPEN_BROADCASTER_MENU",
        "desc": ""
      },
      {
        "value": "206",
        "name": "DOTA_KEYBIND_SPEC_DROPDOWN_KDA",
        "desc": ""
      },
      {
        "value": "207",
        "name": "DOTA_KEYBIND_SPEC_DROPDOWN_LASTHITS_DENIES",
        "desc": ""
      },
      {
        "value": "208",
        "name": "DOTA_KEYBIND_SPEC_DROPDOWN_LEVEL",
        "desc": ""
      },
      {
        "value": "209",
        "name": "DOTA_KEYBIND_SPEC_DROPDOWN_XP_PER_MIN",
        "desc": ""
      },
      {
        "value": "210",
        "name": "DOTA_KEYBIND_SPEC_DROPDOWN_GOLD",
        "desc": ""
      },
      {
        "value": "211",
        "name": "DOTA_KEYBIND_SPEC_DROPDOWN_TOTALGOLD",
        "desc": ""
      },
      {
        "value": "212",
        "name": "DOTA_KEYBIND_SPEC_DROPDOWN_GOLD_PER_MIN",
        "desc": ""
      },
      {
        "value": "213",
        "name": "DOTA_KEYBIND_SPEC_DROPDOWN_BUYBACK",
        "desc": ""
      },
      {
        "value": "214",
        "name": "DOTA_KEYBIND_SPEC_DROPDOWN_NETWORTH",
        "desc": ""
      },
      {
        "value": "215",
        "name": "DOTA_KEYBIND_SPEC_DROPDOWN_FANTASY",
        "desc": ""
      },
      {
        "value": "216",
        "name": "DOTA_KEYBIND_SPEC_DROPDOWN_SORT",
        "desc": ""
      },
      {
        "value": "217",
        "name": "DOTA_KEYBIND_SPEC_DROPDOWN_CLOSE",
        "desc": ""
      },
      {
        "value": "218",
        "name": "DOTA_KEYBIND_SPEC_FOCUS_PLAYER_1",
        "desc": ""
      },
      {
        "value": "219",
        "name": "DOTA_KEYBIND_SPEC_FOCUS_PLAYER_2",
        "desc": ""
      },
      {
        "value": "220",
        "name": "DOTA_KEYBIND_SPEC_FOCUS_PLAYER_3",
        "desc": ""
      },
      {
        "value": "221",
        "name": "DOTA_KEYBIND_SPEC_FOCUS_PLAYER_4",
        "desc": ""
      },
      {
        "value": "222",
        "name": "DOTA_KEYBIND_SPEC_FOCUS_PLAYER_5",
        "desc": ""
      },
      {
        "value": "223",
        "name": "DOTA_KEYBIND_SPEC_FOCUS_PLAYER_6",
        "desc": ""
      },
      {
        "value": "224",
        "name": "DOTA_KEYBIND_SPEC_FOCUS_PLAYER_7",
        "desc": ""
      },
      {
        "value": "225",
        "name": "DOTA_KEYBIND_SPEC_FOCUS_PLAYER_8",
        "desc": ""
      },
      {
        "value": "226",
        "name": "DOTA_KEYBIND_SPEC_FOCUS_PLAYER_9",
        "desc": ""
      },
      {
        "value": "227",
        "name": "DOTA_KEYBIND_SPEC_FOCUS_PLAYER_10",
        "desc": ""
      },
      {
        "value": "228",
        "name": "DOTA_KEYBIND_SPEC_COACH_VIEWTOGGLE",
        "desc": ""
      },
      {
        "value": "229",
        "name": "DOTA_KEYBIND_INSPECTHEROINWORLD",
        "desc": ""
      },
      {
        "value": "230",
        "name": "DOTA_KEYBIND_CAMERA_ZOOM_IN",
        "desc": ""
      },
      {
        "value": "231",
        "name": "DOTA_KEYBIND_CAMERA_ZOOM_OUT",
        "desc": ""
      },
      {
        "value": "232",
        "name": "DOTA_KEYBIND_CONTROL_GROUPCYCLEPREV",
        "desc": ""
      },
      {
        "value": "233",
        "name": "DOTA_KEYBIND_DOTA_ALT",
        "desc": ""
      },
      {
        "value": "234",
        "name": "DOTA_KEYBIND_COUNT",
        "desc": ""
      }
    ],
    "DOTA_SHOP_TYPE": [
      {
        "value": "0",
        "name": "DOTA_SHOP_HOME",
        "desc": ""
      },
      {
        "value": "1",
        "name": "DOTA_SHOP_SIDE",
        "desc": ""
      },
      {
        "value": "2",
        "name": "DOTA_SHOP_SECRET",
        "desc": ""
      },
      {
        "value": "3",
        "name": "DOTA_SHOP_GROUND",
        "desc": ""
      },
      {
        "value": "4",
        "name": "DOTA_SHOP_SIDE2",
        "desc": ""
      },
      {
        "value": "5",
        "name": "DOTA_SHOP_SECRET2",
        "desc": ""
      },
      {
        "value": "6",
        "name": "DOTA_SHOP_CUSTOM",
        "desc": ""
      },
      {
        "value": "7",
        "name": "DOTA_SHOP_NEUTRALS",
        "desc": ""
      },
      {
        "value": "8",
        "name": "DOTA_SHOP_NONE",
        "desc": ""
      }
    ]
  }
}